{"version":3,"file":"component---src-pages-index-tsx-104312b25ee4c31cf8f1.js","mappings":"yNAGaA,EAAWC,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,CAAd,+BAKMC,EAAWD,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,8EAITE,EAAAA,EAAAA,IAJL,IASMC,EAAYH,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,iCACXI,EAAAA,GAAAA,SACQF,EAAAA,EAAAA,OAGNG,EAAWL,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,eACVI,EAAAA,GAAAA,MAGEE,EAAcN,EAAAA,QAAAA,EAAAA,WAAH,6DAAGA,CAAH,kFACbI,EAAAA,GAAAA,MAEiBG,EAAAA,GAAAA,QCoB5B,EApCoC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC5C,OACE,gBAAC,EAAD,CAAiBC,GAAG,aACjBF,EAAA,KAAU,SAAAG,GACT,IAAQC,EAAyBD,EAAjC,YAAqBE,EAAYF,EAAjC,QACQG,EAAsBF,EAA9B,KAAcG,EAAgBH,EAA9B,KAAoBI,EAAUJ,EAA9B,MACA,OACE,gBAAC,EAAD,CAAiBK,IAAKH,GACpB,wBAAMI,GAAIJ,GACR,gBAAC,EAAD,CAAkBK,UAAU,mBAD9B,GAIGJ,GACC,gBAAC,EAAD,KACGN,EACCA,EADS,GAGT,wBAAMW,SAAUL,IAAOM,EAAAA,EAAAA,GAT/B,KAaGR,GACC,gBAAC,EAAD,CACES,wBAAyB,CACvBC,OAAQV,a,mICzBtBW,EAAoC,CACxC,CACEZ,YAAa,CACXI,MADW,gBAEXF,KAFW,8DAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,qBAEXF,KAFW,2DAGXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,kBAEXF,KAFW,2EAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,kDAGXF,KAHW,sDAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,mBAEXF,KAFW,kEAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,6BAEXF,KAFW,+EAIXC,KAAM,sBAGV,CACEH,YAAa,CACXI,MADW,0CAEXF,KAFW,iEAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,kCAEXF,KAFW,uEAIXC,KAAM,oBAGV,CACEH,YAAa,CACXI,MADW,2CAEXF,KAFW,sFAIXC,KAAM,qBA+BZ,UAxB6B,SAAC,GAAqB,IAAnBU,EAAkB,EAAlBA,KAC9B,OACE,0BACE,qBAAKT,MAAM,MACX,sBAAWU,OAAK,GACd,yBACE,qBAAUlB,MAAOiB,EAAAA,kBAAuBE,QACxC,wBAAMT,GAAIU,EAAAA,EAAAA,OAHd,QAKE,qBACEZ,MACE,gCACE,qBAAMa,KAAMC,EAAAA,EAAAA,MAAgBC,KAAM,IAClC,wBAAMrB,GAAIsB,EAAAA,EAAAA,OAFZ,YAMF,qBAAUxB,MAAV,EAAyBC,WAAY,SAAAE,GAAI,OAAIA,EAAAA,YAAJ","sources":["webpack://jeonghwan-kim.github.io/./src/components/PostList/style.ts","webpack://jeonghwan-kim.github.io/./src/components/PostList/index.tsx","webpack://jeonghwan-kim.github.io/./src/pages/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`\n\nexport const PostItem = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: ${SpaceUnit(7)} 0;\n  text-decoration: none;\n  display: block;\n`\n\nexport const PostTitle = styled.h2`\n  color: ${Colors.Primary};\n  margin-bottom: ${SpaceUnit()};\n`\n\nexport const PostMeta = styled.div`\n  color: ${Colors.Gray};\n`\n\nexport const PostSummary = styled.p`\n  color: ${Colors.Black};\n  line-height: 1.5em;\n  @media (max-width: calc(${Widths.Tablet} - 1px)) {\n    display: none;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC, ReactNode } from \"react\"\nimport { MarkdownRemark } from \"../../../graphql-types\"\nimport { dateFormat } from \"../../helpers/date\"\nimport * as Styled from \"./style\"\n\ntype Post = Pick<MarkdownRemark, \"frontmatter\" | \"excerpt\">\n\nexport interface PostListProps {\n  posts: Post[]\n  renderMeta?(post: Post): ReactNode\n}\n\nconst PostList: FC<PostListProps> = ({ posts, renderMeta }) => {\n  return (\n    <Styled.PostList id=\"post-list\">\n      {posts.map(post => {\n        const { frontmatter, excerpt } = post\n        const { slug, date, title } = frontmatter\n        return (\n          <Styled.PostItem key={slug}>\n            <Link to={slug}>\n              <Styled.PostTitle className=\"post-item-title\">\n                {title}\n              </Styled.PostTitle>\n              {date && (\n                <Styled.PostMeta>\n                  {renderMeta ? (\n                    renderMeta(post)\n                  ) : (\n                    <time dateTime={date}>{dateFormat(date)}</time>\n                  )}\n                </Styled.PostMeta>\n              )}\n              {excerpt && (\n                <Styled.PostSummary\n                  dangerouslySetInnerHTML={{\n                    __html: excerpt,\n                  }}\n                />\n              )}\n            </Link>\n          </Styled.PostItem>\n        )\n      })}\n    </Styled.PostList>\n  )\n}\n\nexport default PostList\n","import { graphql, Link, PageProps } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport { MarkdownRemark, Query } from \"../../graphql-types\"\nimport Icon from \"../components/Icon\"\nimport { IconType } from \"../components/Icon/style\"\nimport { HomeLayout } from \"../components/layout\"\nimport PostList from \"../components/PostList\"\nimport Section from \"../components/Section\"\nimport SEO from \"../components/SEO\"\nimport { Params, Path } from \"../helpers/constants\"\nimport { Container } from \"../styles/style-variables\"\n\nconst videos: Partial<MarkdownRemark>[] = [\n  {\n    frontmatter: {\n      title: \"만들면서 학습하는 리액트\",\n      slug:\n        \"https://www.inflearn.com/course/만들면서-학습하는-리액트?inst=b59d75f4\",\n      date: \"2021년 05월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"프론트엔드 개발환경의 이해와 실습\",\n      slug: \"https://www.inflearn.com/course/프론트엔드-개발환경?inst=245c31e1\",\n      date: \"2020년 03월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"Express.js 코드리딩\",\n      slug:\n        \"https://www.youtube.com/playlist?list=PL91ve-iBgvZ5ga1BQkN2DLJgqBfWCkGfm\",\n      date: \"2019년 03월 | 유투브\",\n    },\n  },\n  {\n    frontmatter: {\n      title:\n        \"트렐로 개발로 배우는 Vuejs, Vuex, Vue-Router 프론트엔드 실전 기술\",\n      slug: \"https://www.inflearn.com/course/vuejs?inst=4b6acc34\",\n      date: \"2018년 11월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"견고한 JS 소프트웨어 만들기\",\n      slug:\n        \"https://www.inflearn.com/course/tdd-견고한-소프트웨어-만들기?inst=35309715\",\n      date: \"2018년 06월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"Node.js 기반의 REST API 서버 개발\",\n      slug:\n        \"https://tacademy.skplanet.com/live/player/onlineLectureDetail.action?seq=134\",\n      date: \"2018년 04월 | T아카데미\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발\",\n      slug:\n        \"https://www.inflearn.com/course/순수js-vuejs-개발-강좌?inst=b936ef67\",\n      date: \"2018년 01월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"테스트주도개발(TDD)로 만드는 NodeJS API 서버\",\n      slug:\n        \"https://www.inflearn.com/course/테스트주도개발-tdd-nodejs-api?inst=8aa64815\",\n      date: \"2017년 03월 | 인프런\",\n    },\n  },\n  {\n    frontmatter: {\n      title: \"AngularJS 기본 개념과 To-Do 앱 만들기 실습 - 앵귤러 강좌\",\n      slug:\n        \"https://www.youtube.com/watch?v=EklH54kysps&list=PLs_XsVQJKaBk_JN5RctLmmVrGwEzpzqaj\",\n      date: \"2016년 07월 | 유투브\",\n    },\n  },\n]\n\ntype Props = PageProps<Query>\n\nconst BlogIndex: FC<Props> = ({ data }: Props) => {\n  return (\n    <HomeLayout>\n      <SEO title=\"홈\" />\n      <Container small>\n        <Section>\n          <PostList posts={data.allMarkdownRemark.nodes} />\n          <Link to={Path.Posts}>더보기</Link>\n        </Section>\n        <Section\n          title={\n            <>\n              <Icon type={IconType.Video} size={4} />\n              <span id={Params.Video}>VIDEOS</span>\n            </>\n          }\n        >\n          <PostList posts={videos} renderMeta={post => post.frontmatter.date} />\n        </Section>\n      </Container>\n    </HomeLayout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 10\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n        frontmatter {\n          slug\n          date\n          title\n        }\n      }\n    }\n  }\n`\n"],"names":["PostList","styled","PostItem","SpaceUnit","PostTitle","Colors","PostMeta","PostSummary","Widths","posts","renderMeta","id","post","frontmatter","excerpt","slug","date","title","key","to","className","dateTime","dateFormat","dangerouslySetInnerHTML","__html","videos","data","small","nodes","Path","type","IconType","size","Params"],"sourceRoot":""}