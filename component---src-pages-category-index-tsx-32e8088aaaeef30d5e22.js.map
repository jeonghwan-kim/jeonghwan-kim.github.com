{"version":3,"sources":["webpack:///./src/pages/category/index.tsx","webpack:///./src/components/post-list.tsx"],"names":["CateogryPosts","title","posts","activeCategory","hasHeaderBorder","aside","className","to","type","size","map","p","slug","fields","frontmatter","meta","dateTime","date","dateStr","excerpt","data","allMarkdownRemark","edges","edge","node","pageQuery","PostList","id","key","dangerouslySetInnerHTML","__html"],"mappings":"kHAAA,gMAiBaA,GAjBb,UAiBqD,SAAC,GAAD,IACnDC,EADmD,EACnDA,MACAC,EAFmD,EAEnDA,MACAC,EAHmD,EAGnDA,eAHmD,OAKnD,kBAAC,IAAD,CACEC,iBAAe,EACfC,MACE,yBAAKC,UAAU,iBACb,4BACE,4BACE,uCAEF,4BACE,kBAAC,OAAD,CAAMC,GAAG,YAAYD,UAAYH,EAA4B,GAAX,UAAlD,OAEQ,KAEV,4BACE,kBAAC,OAAD,CACEI,GAAG,mBACHD,UAA8B,WAAnBH,EAA8B,SAAW,IAFtD,OAKQ,KAEV,4BACE,kBAAC,OAAD,CACEG,UAA8B,QAAnBH,EAA2B,SAAW,GACjDI,GAAG,iBAFL,MAKQ,KAEV,4BACE,kBAAC,OAAD,CACEA,GAAG,kBACHD,UAA8B,UAAnBH,EAA6B,SAAW,IAFrD,MAKQ,QAMhB,kBAAC,IAAD,CAAKF,MAAK,OAASA,IACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,MACE,oCACE,kBAAC,IAAD,CAAMO,KAAK,UAAUC,KAAM,IAC1BR,IAIL,kBAAC,IAAD,CACEC,MAAOA,EAAMQ,KAAI,SAAAC,GAAC,MAAK,CACrBC,KAAMD,EAAEE,OAAOD,KACfX,MAAOU,EAAEG,YAAYb,MACrBc,KAAM,0BAAMC,SAAUL,EAAEE,OAAOI,MAAON,EAAEE,OAAOK,SAC/CC,QAASR,EAAEQ,mBAQR,mBAAAR,GAAC,OACd,kBAACX,EAAD,CACEC,MAAM,OACNC,MAAOS,EAAES,KAAKC,kBAAkBC,MAAMZ,KAAI,SAAAa,GAAI,OAAIA,EAAKC,WAIpD,IAAMC,EAAY,c,kCC7FzB,+CAyCeC,IAzBS,SAAC,GAAc,IAAZxB,EAAY,EAAZA,MACzB,OACE,wBAAIyB,GAAG,YAAYrB,UAAU,aAC1BJ,EAAMQ,KAAI,YAAoC,IAAjCT,EAAiC,EAAjCA,MAAOW,EAA0B,EAA1BA,KAAMG,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QAC/B,OACE,wBAAIS,IAAKhB,EAAMN,UAAU,aACvB,kBAAC,OAAD,CAAMC,GAAIK,GACR,wBAAIN,UAAU,mBAAmBL,GAChCc,GAAQ,yBAAKT,UAAU,kBAAkBS,GACzCI,GACC,uBACEb,UAAU,oBACVuB,wBAAyB,CACvBC,OAAQX,a","file":"component---src-pages-category-index-tsx-32e8088aaaeef30d5e22.js","sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport Content, { Section } from \"../../components/content\"\nimport Layout from \"../../components/layout/layout\"\nimport PostList from \"../../components/post-list\"\nimport SEO from \"../../components/seo\"\nimport { MarkdownRemark } from \"../../models/markdown-remark\"\nimport Icon from \"../../components/icon\"\n\nimport \"./category.scss\"\n\ninterface CateogryPostsProps {\n  title: string\n  posts: MarkdownRemark[]\n  activeCategory?: string\n}\n\nexport const CateogryPosts: FC<CateogryPostsProps> = ({\n  title,\n  posts,\n  activeCategory,\n}) => (\n  <Layout\n    hasHeaderBorder\n    aside={\n      <div className=\"category-list\">\n        <ul>\n          <li>\n            <label>글분류</label>\n          </li>\n          <li>\n            <Link to=\"/category\" className={!activeCategory ? \"active\" : \"\"}>\n              모든글\n            </Link>{\" \"}\n          </li>\n          <li>\n            <Link\n              to=\"/category/series\"\n              className={activeCategory === \"series\" ? \"active\" : \"\"}\n            >\n              연재물\n            </Link>{\" \"}\n          </li>\n          <li>\n            <Link\n              className={activeCategory === \"dev\" ? \"active\" : \"\"}\n              to=\"/category/dev\"\n            >\n              개발\n            </Link>{\" \"}\n          </li>\n          <li>\n            <Link\n              to=\"/category/think\"\n              className={activeCategory === \"think\" ? \"active\" : \"\"}\n            >\n              생각\n            </Link>{\" \"}\n          </li>\n        </ul>\n      </div>\n    }\n  >\n    <SEO title={`분류: ${title}`} />\n    <Content>\n      <Section\n        title={\n          <>\n            <Icon type=\"article\" size={4} />\n            {title}\n          </>\n        }\n      >\n        <PostList\n          posts={posts.map(p => ({\n            slug: p.fields.slug,\n            title: p.frontmatter.title,\n            meta: <time dateTime={p.fields.date}>{p.fields.dateStr}</time>,\n            excerpt: p.excerpt,\n          }))}\n        />\n      </Section>\n    </Content>\n  </Layout>\n)\n\nexport default p => (\n  <CateogryPosts\n    title=\"모든 글\"\n    posts={p.data.allMarkdownRemark.edges.map(edge => edge.node)}\n  />\n)\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { fields: fields___date, order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n          fields {\n            slug\n            dateStr: date(formatString: \"YYYY년 MM월 DD일\")\n            date\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { FC, ReactNode } from \"react\"\nimport { MarkdownRemark, Frontmatter, Fields } from \"../models/markdown-remark\"\nimport { Link } from \"gatsby\"\n\nimport \"./post-list.scss\"\n\nexport interface PostItemType {\n  title: ReactNode\n  slug: string\n  meta?: ReactNode\n  excerpt?: string\n}\nexport interface P {\n  posts: PostItemType[]\n}\n\nconst PostList: FC<P> = ({ posts }) => {\n  return (\n    <ul id=\"post-list\" className=\"post-list\">\n      {posts.map(({ title, slug, meta, excerpt }) => {\n        return (\n          <li key={slug} className=\"post-item\">\n            <Link to={slug}>\n              <h2 className=\"post-item-title\">{title}</h2>\n              {meta && <div className=\"post-item-meta\">{meta}</div>}\n              {excerpt && (\n                <p\n                  className=\"post-item-summary\"\n                  dangerouslySetInnerHTML={{\n                    __html: excerpt,\n                  }}\n                ></p>\n              )}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default PostList\n"],"sourceRoot":""}