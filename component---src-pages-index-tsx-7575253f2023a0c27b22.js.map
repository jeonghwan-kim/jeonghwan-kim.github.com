{"version":3,"sources":["webpack:///./src/components/icon/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/style.ts","webpack:///./src/components/PostList/index.tsx"],"names":["Icon","props","videos","title","slug","meta","BlogIndex","data","small","posts","allMarkdownRemark","nodes","map","node","fields","frontmatter","dateTime","date","dateStr","excerpt","to","type","IconType","Video","size","id","pageQuery","PostList","styled","ul","PostItem","li","SpaceUnit","PostTitle","h2","Colors","Primary","PostMeta","div","Gray","PostSummary","p","Black","Widths","Tablet","key","className","dangerouslySetInnerHTML","__html"],"mappings":"2FAAA,qCAWeA,IAJmB,SAAAC,GAChC,OAAO,kBAAC,IAAgBA,K,kCCR1B,0KAWMC,EAAyB,CAC7B,CACEC,MAAO,qBACPC,KAAM,6CACNC,KAAM,mBAER,CACEF,MAAO,kBACPC,KACE,2EACFC,KAAM,mBAER,CACEF,MAAO,kDACPC,KAAM,wCACNC,KAAM,mBAER,CACEF,MAAO,mBACPC,KACE,4IACFC,KAAM,mBAER,CACEF,MAAO,6BACPC,KACE,+EACFC,KAAM,qBAER,CACEF,MAAO,0CACPC,KACE,mGACFC,KAAM,mBAER,CACEF,MAAO,kCACPC,KACE,iHACFC,KAAM,mBAER,CACEF,MAAO,2CACPC,KACE,sFACFC,KAAM,oBAuCKC,UAjCU,SAAC,GAAgB,IAAdC,EAAc,EAAdA,KAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,MAAM,MACX,kBAAC,IAAD,CAAWK,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOF,EAAKG,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,MAAK,CAC/CT,KAAMS,EAAKC,OAAOV,KAClBD,MAAOU,EAAKE,YAAYZ,MACxBE,KACE,0BAAMW,SAAUH,EAAKC,OAAOG,MAAOJ,EAAKC,OAAOI,SAEjDC,QAASN,EAAKM,cAGlB,kBAAC,OAAD,CAAMC,GAAG,cAAT,QAEF,kBAAC,IAAD,CACEjB,MACE,oCACE,kBAAC,IAAD,CAAMkB,KAAMC,IAASC,MAAOC,KAAM,IAClC,0BAAMC,GAAG,UAAT,YAIJ,kBAAC,IAAD,CAAUhB,MAAOP,QASpB,IAAMwB,EAAY,c,+FC9FZC,EAAWC,IAAOC,GAAV,sEAAGD,CAAH,gCAKRE,EAAWF,IAAOG,GAAV,sEAAGH,CAAH,6EAITI,YAAU,IAKTC,EAAYL,IAAOM,GAAV,uEAAGN,CAAH,iCACXO,IAAOC,QACCJ,eAGNK,EAAWT,IAAOU,IAAV,sEAAGV,CAAH,eACVO,IAAOI,MAGLC,EAAcZ,IAAOa,EAAV,yEAAGb,CAAH,kFACbO,IAAOO,MAEUC,IAAOC,QCWpBjB,IA1BS,SAAC,GAAc,IAAZlB,EAAY,EAAZA,MACzB,OACE,kBAAC,EAAD,CAAiBgB,GAAG,aACjBhB,EAAMG,KAAI,YAAoC,IAAjCT,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,QAC/B,OACE,kBAAC,EAAD,CAAiB0B,IAAKzC,GACpB,kBAAC,OAAD,CAAMgB,GAAIhB,GACR,kBAAC,EAAD,CAAkB0C,UAAU,mBACzB3C,GAEFE,GAAQ,kBAAC,EAAD,KAAkBA,GAC1Bc,GACC,kBAAC,EAAD,CACE4B,wBAAyB,CACvBC,OAAQ7B","file":"component---src-pages-index-tsx-7575253f2023a0c27b22.js","sourcesContent":["import React, { CSSProperties } from \"react\"\nimport * as Styled from \"./style\"\n\nexport interface IconProps extends Styled.IconProps {\n  style?: CSSProperties\n}\n\nconst Icon: React.FC<IconProps> = props => {\n  return <Styled.Icon {...props} />\n}\n\nexport default Icon\n","import { graphql, Link, PageProps } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport Icon from \"../components/icon\"\nimport { IconType } from \"../components/Icon/style\"\nimport { HomeLayout } from \"../components/layout\"\nimport PostList, { PostItemType } from \"../components/PostList\"\nimport Section from \"../components/Section\"\nimport SEO from \"../components/seo\"\nimport { MarkdownRemark } from \"../models/markdown-remark\"\nimport { Container } from \"../styles/style-variables\"\n\nconst videos: PostItemType[] = [\n  {\n    title: \"프론트엔드 개발환경의 이해와 실습\",\n    slug: \"https://www.inflearn.com/course/프론트엔드-개발환경\",\n    meta: \"2020년 03월 / 인프런\",\n  },\n  {\n    title: \"Express.js 코드리딩\",\n    slug:\n      \"https://www.youtube.com/playlist?list=PL91ve-iBgvZ5ga1BQkN2DLJgqBfWCkGfm\",\n    meta: \"2019년 03월 / 유투브\",\n  },\n  {\n    title: \"트렐로 개발로 배우는 Vuejs, Vuex, Vue-Router 프론트엔드 실전 기술\",\n    slug: \"https://www.inflearn.com/course/vuejs\",\n    meta: \"2018년 11월 / 인프런\",\n  },\n  {\n    title: \"견고한 JS 소프트웨어 만들기\",\n    slug:\n      \"https://www.inflearn.com/course/tdd-%EA%B2%AC%EA%B3%A0%ED%95%9C-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\",\n    meta: \"2018년 06월 / 인프런\",\n  },\n  {\n    title: \"Node.js 기반의 REST API 서버 개발\",\n    slug:\n      \"https://tacademy.skplanet.com/live/player/onlineLectureDetail.action?seq=134\",\n    meta: \"2018년 04월 / T아카데미\",\n  },\n  {\n    title: \"실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발\",\n    slug:\n      \"https://www.inflearn.com/course/%EC%88%9C%EC%88%98js-vuejs-%EA%B0%9C%EB%B0%9C-%EA%B0%95%EC%A2%8C\",\n    meta: \"2018년 01월 / 인프런\",\n  },\n  {\n    title: \"테스트주도개발(TDD)로 만드는 NodeJS API 서버\",\n    slug:\n      \"https://www.inflearn.com/course/%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%A3%BC%EB%8F%84%EA%B0%9C%EB%B0%9C-tdd-nodejs-api\",\n    meta: \"2017년 03월 / 인프런\",\n  },\n  {\n    title: \"AngularJS 기본 개념과 To-Do 앱 만들기 실습 - 앵귤러 강좌\",\n    slug:\n      \"https://www.youtube.com/watch?v=EklH54kysps&list=PLs_XsVQJKaBk_JN5RctLmmVrGwEzpzqaj\",\n    meta: \"2016년 07월 / 유투브\",\n  },\n]\n\ntype P = PageProps<{ allMarkdownRemark: { nodes: MarkdownRemark[] } }>\n\nconst BlogIndex: FC<P> = ({ data }: P) => {\n  return (\n    <HomeLayout>\n      <SEO title=\"홈\" />\n      <Container small>\n        <Section>\n          <PostList\n            posts={data.allMarkdownRemark.nodes.map(node => ({\n              slug: node.fields.slug,\n              title: node.frontmatter.title,\n              meta: (\n                <time dateTime={node.fields.date}>{node.fields.dateStr}</time>\n              ),\n              excerpt: node.excerpt,\n            }))}\n          />\n          <Link to=\"/category/\">더보기</Link>\n        </Section>\n        <Section\n          title={\n            <>\n              <Icon type={IconType.Video} size={4} />\n              <span id=\"videos\">VIDEOS</span>\n            </>\n          }\n        >\n          <PostList posts={videos} />\n        </Section>\n      </Container>\n    </HomeLayout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: fields___date, order: DESC }, limit: 10) {\n      nodes {\n        excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n        fields {\n          slug\n          dateStr: date(formatString: \"YYYY년 MM월 DD일\")\n          date\n        }\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`\n","import styled from \"styled-components\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`\n\nexport const PostItem = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: ${SpaceUnit(7)} 0;\n  text-decoration: none;\n  display: block;\n`\n\nexport const PostTitle = styled.h2`\n  color: ${Colors.Primary};\n  margin-bottom: ${SpaceUnit()};\n`\n\nexport const PostMeta = styled.div`\n  color: ${Colors.Gray};\n`\n\nexport const PostSummary = styled.p`\n  color: ${Colors.Black};\n  line-height: 1.5em;\n  @media (max-width: calc(${Widths.Tablet} - 1px)) {\n    display: none;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC, ReactNode } from \"react\"\nimport * as Styled from \"./style\"\n\nexport interface PostItemType {\n  title: ReactNode\n  slug: string\n  meta?: ReactNode\n  excerpt?: string\n}\nexport interface P {\n  posts: PostItemType[]\n}\n\nconst PostList: FC<P> = ({ posts }) => {\n  return (\n    <Styled.PostList id=\"post-list\">\n      {posts.map(({ title, slug, meta, excerpt }) => {\n        return (\n          <Styled.PostItem key={slug}>\n            <Link to={slug}>\n              <Styled.PostTitle className=\"post-item-title\">\n                {title}\n              </Styled.PostTitle>\n              {meta && <Styled.PostMeta>{meta}</Styled.PostMeta>}\n              {excerpt && (\n                <Styled.PostSummary\n                  dangerouslySetInnerHTML={{\n                    __html: excerpt,\n                  }}\n                />\n              )}\n            </Link>\n          </Styled.PostItem>\n        )\n      })}\n    </Styled.PostList>\n  )\n}\n\nexport default PostList\n"],"sourceRoot":""}