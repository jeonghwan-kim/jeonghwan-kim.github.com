{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"이전 글(나의 첫 무접점 키보드)에서 소개한 키보드를 여전히 사용하고 있다.\n이 키보드 키배열에 손가락이 익숙해 오타도 줄어들고 손바닥도 고정된 상태로 타이핑할 수 있게 되었다. 하지만 맥 운영체제의 특수 기능키를 매직 키보드처럼 쓰고 싶은 아쉬움은 여전하다.\n지금은 일부 기능만 몇 가지 키조합으로 사용하고 있는데 최대한 매직 키보드의 그것처럼 사용하고 …","fields":{"slug":"/think/2021/08/23/customizing-keyboard.html","dateStr":"2021년 08월 23일","date":"2021-08-23T00:00:00.000Z"},"frontmatter":{"title":"한성 키보드를 매직 키보드와 유사하게 사용하기"}},{"excerpt":"백엔드 개발할 때 웬만하면 테스트 코드를 작성했다. 어플리케이션을 출시한 뒤에도 부족한 테스트를 마져 작성했는데 이런 방식이 코딩에 자신감을 주었기 때문이다. 새로운 기능을 만들거나 버그를 수정 하더라도 자동화된 테스트 덕분에 회귀 테스트를 빠르게 반복 할 수 있기 때문이다. 한편 프론프엔드 개발에서는 테스트를 잘 못했다. 초반에 몇 번 시도해 보았지만 …","fields":{"slug":"/dev/2021/08/09/testing-frontend.html","dateStr":"2021년 08월 09일","date":"2021-08-09T00:00:00.000Z"},"frontmatter":{"title":"프론트엔드 테스트할 기회가 생겼다"}},{"excerpt":"지난 달 사내 DR팀으로부터 디자인시스템을 주제로 발표 요청을 받았다. 프론트엔드 개발에서 디자이너와 협업 언어로 사용한 것인데 프로덕트 조직 외부의 관심이 의외였다. 발표를 준비하면서 디자인 시스템에 대해 다시 생각해 보았다. 더불어 라이브 방송이라는 경험도 꽤나 유쾌했다. 디자인시스템 기술적인 것 보다는 디자인시스템을 바라보는 관점에 대해 다루었다. …","fields":{"slug":"/think/2021/07/19/design-system-and-streaming.html","dateStr":"2021년 07월 19일","date":"2021-07-19T00:00:00.000Z"},"frontmatter":{"title":"디자인시스템과 라이브 방송"}},{"excerpt":"맥OS에 다크 테마가 나온 후 웹 사이트에도 다크 테마 버전이 적용된 걸 심심찮게 보았다. 나는 맥OS 화면 모드를 자동으로 두어 해가 뜨면 라이트 모드로 해가지면 다크 모드로 설정해 두는데 이 변화가 웹사이트까지 영향을 주는 모습이 꽤 인상적이었다. 이런 동적 테마는 요점 쉽게 찾을수 눈에 보이는 즐거움만이 다가 아니다. 하루 종일 화면을 보고 있다가 …","fields":{"slug":"/dev/2021/05/17/css-variable.html","dateStr":"2021년 05월 17일","date":"2021-05-17T00:00:00.000Z"},"frontmatter":{"title":"CSS 변수와 웹사이트 테마"}},{"excerpt":"리액트 안내서에 나온 컨택스트는 읽어보기만 했지 실제로 사용해 본적은 한 번도 없었다.\n상태관리 솔루션으로 리덕스(Redux)나 모빅스(Mobx)를 사용해서 그런걸까?\n문서에는 UI 테마나 로그인한 유저, 로케일 따위의 데이터가 컨택스트로 관리할 수 있는 것이라고 말한다.\n상태관리 써드파티 라이브러리로 관리해서 그런지 더욱 컨텍스트의 필요성을 느끼지 못한…","fields":{"slug":"/dev/2021/05/05/react-context.html","dateStr":"2021년 05월 05일","date":"2021-05-05T00:00:00.000Z"},"frontmatter":{"title":"리액트 컨텍스트"}},{"excerpt":"항상 컴퓨터로 일하는 사람들은 누구나 한 번 키보드에 욕심을 부려 보았을 것이다.\n노트북에 내장된 것으로는 아쉬워서 외장 키보드를 연결해 사용하는데 그 가격만이 천차만별이다. 처음 해피해킹을 보았을 때 단순한 디자인에 매료되서 너무 갖고 싶었다.\n30만원이 넘는 가격을 확인하고서야 구매를 포기했는데 이처럼 키보드는 여유돈이 생기면 사고 싶은 일종의 악세사…","fields":{"slug":"/think/2021/04/29/my-first-capacitive-keyboard.html","dateStr":"2021년 04월 29일","date":"2021-04-29T00:00:00.000Z"},"frontmatter":{"title":"나의 첫 무접점 키보드 "}},{"excerpt":"리액트 컴포넌트 소개 컴포넌트를 사용하는 이유 사용 편에서 우리는 이미 컴포넌트를 사용하고 있었다. 어플리케이션 자체를 의미하는 App 컴포넌트가 그것이다. 어플리케이션의 전체 상태와 유저 인터페이스를 관리한다. 이 모습은 마치 큰 서랍장 안에 모든 물건을 넣은 것과 비슷하다. 나중에 뭔가를 서랍에서 찾으려면 복잡한 서랍 안을 한참 뒤져야 한다. 반면 서…","fields":{"slug":"/series/2021/04/15/lecture-react-component.html","dateStr":"2021년 04월 15일","date":"2021-04-15T00:00:00.000Z"},"frontmatter":{"title":"만들면서 학습하는 리액트: 사용편2(컴포넌트편)"}},{"excerpt":"준비편에서는 순수 자바스크립트로 검색 화면을 만들었다. 이 때 사용한 요구사항을 리액트 버전으로 만들어 보는 것이 이번편의 내용이다. 요구사항에 대해서는 이미 익숙하기 때문에 리액트의 특성과 장점에 대해 집중하자. 검색 폼 구현하기 1 Input 요소 사용하기 검색 화면 상단에 위치할 검색 폼부터 만들어 보자. 💡요구사항: 검색 상품명 입력 폼이 위치한다…","fields":{"slug":"/series/2021/04/12/lecture-react-usage.html","dateStr":"2021년 04월 12일","date":"2021-04-12T00:00:00.000Z"},"frontmatter":{"title":"만들면서 학습하는 리액트: 사용편1"}},{"excerpt":"React.js 소개 데이터와 화면을 연결하는 방법 리액트나 뷰 같은 UI 라이브러리의 가장 큰 특징은 화면에 출력되는 유저 인터페이스를 상태로 관리할 수 있다는 점이다. 브라우저는 돔(DOM)을 통해 어플리케이션을 렌더링하는데 라이브러리 없이 자바스크립트만으로 그려보자. 이전 준비편을 떠올려 보자. UI를 담당한 뷰는 템플릿 객체로부터 HTML 마크업 …","fields":{"slug":"/series/2021/04/08/lecture-react-intro.html","dateStr":"2021년 04월 08일","date":"2021-04-08T00:00:00.000Z"},"frontmatter":{"title":"만들면서 학습하는 리액트: 소개편"}},{"excerpt":"개요 \"백문이 불여일타\" 우리는 이론과 실습 두 가지 방법으로 공부한다. 가령 기타를 배운다고 하자. 악보 읽는 법, 기타 소개 등의 전반적인 이론을 학습한 다음 실제 연주하면서 머리와 몸으로 기타를 익힌다. 한편 이론과 실습의 순서를 뒤짚는 경우도 있다. 유투브에서 누군가 멋지게 연주하는 모습을 보고 떠듬 떠듬 따라해 본다. 말도 안되게 어렵겠지만 여러…","fields":{"slug":"/series/2021/04/05/lecture-react-ready.html","dateStr":"2021년 04월 05일","date":"2021-04-05T00:00:00.000Z"},"frontmatter":{"title":"만들면서 학습하는 리액트: 준비편"}}]}},"pageContext":{}},"staticQueryHashes":["3044774879"]}