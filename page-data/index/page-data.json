{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"브라우져에서 다른 출처에 있는 리소스를 사용할 수 있는 규칙이 교차 출처 리소스 공유, CORS다. 출처가 다른 리소스에 접근할 수 없는 상황을 마딱뜨렸을 때 다소 당황했다. 장님 코끼리 코만지듯 문제를 해결했지만 마음의 꺼림칙함은 지울수 없었다. 한 가지 중요한 사실만 기억하자. 서버 자원을 보호하기 위한 보안 규칙. 이것만 붙들고 이 글을 따라가면 C…","frontmatter":{"slug":"/2023/12/12/cors","date":"2023-12-12T00:00:00.000Z","title":"CORS"}},{"excerpt":"네트웍 요청을 다룰 때 주로 cURL이나 포스트맨을 사용한다. 비교적 간편한 전자를 기본으로 쓰면서 팀에서 협업할 때는 후자를 이용하는 편이다. 1998년에 출시한 이 도구는 벌써 20년이 지났다. 아직도 많은 개발자들이 손에서 놓치 않는 비결은 뭘까? 주요 구조를 알아보고 내가 사용하는 사례 몇 가지를 정리해 보겠다. 구조 이름은 'URL을 위한 클라이…","frontmatter":{"slug":"/2023/12/03/curl","date":"2023-12-03T00:00:00.000Z","title":"cURL"}},{"excerpt":"웹팩과 비슷한 도구들이 많다. esbuild, swc, vite. 각자 웹팩보다 얼마나 빠른지를 그들의 강점으로 내세운다. 자기들끼리도 더 낫다고 주장한다. 속도의 공통 원인는 자바스크립트로 만들지 않았다는 사실이다. 자바스크립트 코드를 생산하는 도구인데 자바스크립트를 사용하지 않아서 빠르다. 엄마처럼 살지 않겠다고 큰 소리쳤는데 자기 딸에게 그 말을 듣…","frontmatter":{"slug":"/2023/11/16/esbuild","date":"2023-11-16T00:00:00.000Z","title":"esbuild"}},{"excerpt":"처음 들었을 때 \"p\"가 무슨 뜻일지 궁금했다. 홈페이지에서 바로 찾을 수 없었고 인터넷에 검색해도 잘 나오지 않았다. performant npm '승진, 성능 기준에 맞는' 이런 뜻인데 '고성능 npm'이라고 이해했다. 회사 동료의 제안으로 사용하게 된\n이 패키지 매니져가 이름처럼 빠르고 성능도 좋았다. npm보다 기능이 부족하거나 사용상 혼란스러운 부…","frontmatter":{"slug":"/2023/10/20/pnpm","date":"2023-10-20T00:00:00.000Z","title":"pnpm"}},{"excerpt":"마침내 마지막 4편을 정리할 시간이다. 1장. 레프 훅 랜더링과 무관하게 지속할 수 있는 값을 제공 상태 훅과 비슷하지만 리랜더징 하지않음 Dialog, OrderForm 활용 2장. 제어 폼 제어 컴포넌트 이해 제어 컴포넌트 폼을 재사용하기 위한 MyForm useForm, getFieldProps Form, Field, ErrorMessage Orde…","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4-ch5","date":"2023-06-24T00:04:05.000Z","title":"[리액트 2부] 4편 최종정리"}},{"excerpt":"메모이제이션. 캐시로 성능을 높이는 프로그래밍 기법이다. 이번에는 메모이제이션에 대해 알아본 뒤 리액트의 useMemo와 useCallback을 살펴볼 것이다. 각 훅을 직접 만들어 구조를 파악하고 리액트 성능 개선 방법을 이해한다. 메모이제이션 n이 자연수일 때 1에서 n까지의 곱을 계승 또는 팩토리얼이라고 한다. 알고리즘 문제로 많이 사용하는 것인데 …","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4-ch4","date":"2023-06-24T00:04:04.000Z","title":"[리액트 2부] 4.4 메모이제이션 훅"}},{"excerpt":"리듀서 훅에 대해 알아보자. 상태 훅으로 상태를 관리하다가 규모가 커지고 관리 방식이 복잡해질 즈음에 꺼내는 훅이다. 둘의 역할이 비슷해 인터페이스나 구조도 유사할 것 같다. 훅을 만들면서 구조를 이해하고 차이도 짚어 보겠다. 회원가입 폼 예제 이번엔 회원가입 폼을 예제로 다루겠다. 필드에 입력값을 검사하고 오류 메세지를 보여주는 기능이 있다. 입력값과 …","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4-ch3","date":"2023-06-24T00:04:03.000Z","title":"[리액트 2부] 4.3 리듀서 훅"}},{"excerpt":"1편에서 주문 폼을 비제어 컴포넌트로 구현했다. 입력 값을 브라우저의 상태 관리에 맞기고 검증도 브라우져의 기본 동작을 활용했다. 폼을 제출할 때 입력값을 얻기 위해 리액트 레프 객체를 연결했다. 이번에는 제어 컴포넌트로 폼을 변경해보자. 입력 값을 리액트 상태와 오류 메세지를 리액트 상태로 관리해 검증 기능을 커스터마이징할 수 있다. 폼을 제출할 때 입…","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4-ch2","date":"2023-06-24T00:04:02.000Z","title":"[리액트 2부] 4.2 제어 폼"}},{"excerpt":"3편에서 학습한 기본 훅을 이용해 어플리케이션을 함수 컴포넌트로 다시 만들었다. 일부 남은 것이 있는데 레프 객체를 사용하는 부분이다. Dialog: 레프 객체로 앨리먼트에 접근, 버튼 포커스 OrderForm: 제출 이벤트 처리 시 레프 객체로 입력 값 조회 useRef 직접 만들기 함수 컴포넌트에서 레프 객체를 사용할 방법을 궁리해 보자. 컴포넌트가 …","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4-ch1","date":"2023-06-24T00:04:01.000Z","title":"[리액트 2부] 4.1 레프 훅"}},{"excerpt":"목차 레프 훅 제어 폼 리듀서 훅 메모이제이션 훅 최종정리","frontmatter":{"slug":"/2023/06/24/lecture-react-season2-part4","date":"2023-06-24T00:04:00.000Z","title":"[리액트 2부] 4편 추가훅"}}]}},"pageContext":{}},"staticQueryHashes":["2263867198"]}