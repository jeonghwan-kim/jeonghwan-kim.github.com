{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"타입 힌트로 더 안전하게 이번 새로운 모듈 페더레이션은 타입 힌트 제공이라는 편의를 제공한다. 원격 모듈을 사용하는 애플리케이션을 흔히 호스트(또는 소비자)라고 부른다. 만약 호스트를 타입스크립트로 개발한다면, 원격 모듈의 타입 정보를 제공받는 것은 큰 장점이 된다. 이번 모듈 페더레이션은 원격 모듈과 호스트 간에 타입 정보를 동기화하여, 더 안전하고 예…","frontmatter":{"slug":"/2024/12/08/module-federation-logging","date":"2024-12-08T00:00:00.000Z","title":"모듈 페더레이션 타입 힌트와 로깅"}},{"excerpt":"6편 소개 브라우져가 웹 페이지를 렌더링할 때 발생하는 HTTP 요청을 효율적으로 제어하는 다양한 기법 16장. 렌더링 최적화: 외부 리소스의 로드 시점을 제어해 웹 성능을 최적화하는 기술 17장. 캐시: 서버와 브라우저가 HTTP 헤더를 통해 캐싱 정책을 주고받아 성능을 최적화하는 메커니즘 16장. 로딩 최적화 16.1 렌더링 과정 DSN 질의 HTML…","frontmatter":{"slug":"/2024/07/12/lecture-http-part6","date":"2024-07-12T00:01:00.000Z","title":"[HTTP] 6편. 성능"}},{"excerpt":"5편 소개 브라우져 보안과 함께 HTTP 통신을 더 안전하게 만드는 TLS 13장. 브라우져 보안: XSS(크로스 사이트 스크립팅)와 같은 공격 기법과 이를 방지하기 위한 브라우저 보안 정책 14장. CORS: 외부 도메인의 자원을 안전하게 활용하기 위한 CORS 정책과 적용 방법 15장. HTTPS: HTTPS가 네트워크 보안을 강화하는 방식과 TLS의…","frontmatter":{"slug":"/2024/07/11/lecture-http-part5","date":"2024-07-11T00:01:00.000Z","title":"[HTTP] 5편. 보안"}},{"excerpt":"4편 소개 HTTP의 비연결성을 극복하는 다양한 기술 9장. 폴링: 클라이언트가 주기적으로 서버에 요청을 보내서 새로운 데이터를 확인하는 방법 10장. 롱 폴링: 폴링 보다 호율적인 통신 기법 11장. SSE: 서버가 클라이언트로 실시간 데이터를 푸시하는 방법 12장. 웹 소켓: 클라이언트와 서버 간의 양방향 통신 프로토콜 9장. 폴링 9.1 구조 지속적…","frontmatter":{"slug":"/2024/07/10/lecture-http-part4","date":"2024-07-10T00:01:00.000Z","title":"[HTTP] 4편. 추가 프로토콜"}},{"excerpt":"3편 소개 직접 만들 수 있는 HTTP 요청 6장. AJAX 요청과 응답: fetch 함수로 AJAX 요청과 응답을 다루는 법에 대해 7장. AJAX 진행율과 취소: AJAX 진행율을 계산하는 방법과 요청을 취소하는 방법에 대해 8장. AJAX 라이브러리: fetch와 XHR 객체 기반의 주요 AJAX 라이브러리 6장. 업로드와 응답 6.1 AJAX Fr…","frontmatter":{"slug":"/2024/07/09/lecture-http-part3","date":"2024-07-09T00:01:00.000Z","title":"[HTTP] 3편. AJAX"}},{"excerpt":"2편 소개 웹 브라우져가 HTTP를 어떻게 사용하는지 이해할수 있습니다. 3장. 컨텐츠 협상: 웹브라우져가 서버와 데이터를 주고 받을 때 최적의 형태로 만들기 위한 매커니즘을 이해하실 수 있습니다. 4장. 쿠키: 서버가 웹 브라우져를 식별하기 위한 방법인 쿠키에 대해 배우실 수 있습니다. 5장. 네트워크 요청: 웹 브라우저에서 발생할 수 있는 HTTP 요…","frontmatter":{"slug":"/2024/07/08/lecture-http-part2","date":"2024-07-08T00:01:00.000Z","title":"[HTTP] 2편. 브라우져"}},{"excerpt":"1편 소개 1장. HTTP 시작: 웹의 탄생 배경과 역사에 대해 알 수 있습니다. 2장. HTTP 메시지: HTTP의 주요 요소에 대해 배우실 수 있습니다. 1장. HTTP 시작 1.1 문서 배포 웹 어플리케이션의 동작 원리와 HTTP의 역할 HTTP로 전하는 강의 간단한 강의 제공 애플리케이션 구현 1.2 더 많은 문서 더 많은 수업 자료를 여러 페이지…","frontmatter":{"slug":"/2024/07/07/lecture-http-part1","date":"2024-07-07T00:01:00.000Z","title":"[HTTP] 1편. HTTP 기본"}},{"excerpt":"마침내 npm에서 리액트 19 베타를 사용할 수 있다. 관련한 문서에서는 액션이라는 새로운 개념과 파생된 리액트 훅을 소개한다. 그동안 사용했던 API를 더 편하게 바꾸거나 일부 라이브러리 기능을 대체하는 개선사항도 있다. 이 문서를 통해 앞으로 정식 버전이 될 리액트 19의 변경사항을 미리 살펴보자. Action과 useActionState 액션(Act…","frontmatter":{"slug":"/2024/05/11/react19-beta","date":"2024-05-11T00:00:00.000Z","title":"리액트19 베타"}},{"excerpt":"서버는 다양한 클라이언트로부터 요청을 받는다. 같은 내용이라도 클라이언트마다 필요한 문서 형식이 다르다. 압축한 문서를 읽을 수도 있지만 그렇지 못한 경우도 있다. 한국어나 영어처럼 클라이언트가 선호하는 언어가 다르기도 하다. 각양각색의 클라이언트에게 적합한 자원을 제공하는 것 또한 서버의 역할이다. 클라이언트와 함께 서로의 입장 차이를 줄여나가며 거래할…","frontmatter":{"slug":"/2024/05/04/content-negotiation","date":"2024-05-04T00:00:00.000Z","title":"컨텐츠 협상"}},{"excerpt":"서론 유닉스 환경에서 개발할 때 받은 데이터를 그대로 다시 보내는 것을 매직 쿠키라고 한다. 지금으로부터 30년 전 쇼핑 카트를 구현할 해법으로 비슷한 구조를 제안했는데 이것이 바로 '쿠키'의 시초다. 사이트 재 방문 확인 기능이 쿠키를 활용한 첫 사례라고 한다(참고: HTTP Cookie | MDN). 쿠키가 브라우져 저장소 중의 하나라고 생각했다. 서…","frontmatter":{"slug":"/2024/03/04/http-cookie","date":"2024-03-04T00:00:00.000Z","title":"HTTP 쿠키"}}]}},"pageContext":{}},"staticQueryHashes":["2263867198"]}