{
    "componentChunkName": "component---src-pages-index-tsx",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"모노레포 솔루션은 lerna, yarn 등 여러가지가 있다. 이유는 모르지만 최근 lerna는 지원 종료한다는 소식을 들었다. 때가되면 이 기술을 사용해 봐야지 마음먹은 내겐 아쉬운 소식이다. 그만큼 모노레포 기술은 나온니 꽤 지났다. 강의를 만들 때 여러 개 저장소를 사용한다. 수강자 분들이 올린 질문 중에는 모노레포를 사용해 강의를 만들었다면 헷갈리시…","frontmatter":{"slug":"/2022/07/31/npm-workspace","date":"2022-07-31T00:00:00.000Z","title":"NPM 워크스페이스와 모노레포"}},{"excerpt":"6/6 월 Faster JavaScript Builds with Metro 필요한 것만 캐시 6/18 토 디지털 시대에 '아날로그'가 꼭 필요한 이유 혼재된 동기 - 비동기 커뮤니케이션 ... '프로토콜'이 필요해 동기 커뮤니케이션에 익숙한 사람 비동기에 익숙한 사람 서로 강요할 수 없음 회사는 바뀌어야 함. 가정도 바뀌는데 6/24 금 STOMP Ove…","frontmatter":{"slug":"/2022/06/30/scrap","date":"2022-06-30T00:00:00.000Z","title":"2022-06 스크랩"}},{"excerpt":"닥터 스트레인지는 전투 중에 불리하면 포탈을 만들어 상황을 용케 빠져나간다.\n악당을 포털로 넣어 순식간에 상황을 종료시켜버리는 모습은 무척 통쾌하다.  리액트도 어플리케이션을 이동시키는 기능을 제공한다.\n표현이 조금 생소하긴 하지만 어플리케이션이 마운트되는 위치를 이동한다는 의미다.\n루트 돔 트리를 벗어나 다른 돔에서 어플리케이션의 일부분을 그릴 수 있다…","frontmatter":{"slug":"/2022/06/02/react-portal","date":"2022-06-02T00:00:00.000Z","title":"리액트 Portal"}},{"excerpt":"5/3 화 한 개의 메소드만 갖는 계층형 컨트롤러/서비스 패키지 스타일 이런 이름의 제한은 유지보수할 사람에게 강력한 힌트 제공 소리치는 아키텍쳐 \"나는 영업 어드민이야!\" 5/5 목 React Router v6 hooks 때문에 출시. 코드양 줄고, 용량 줄어 4kb useParams, useLocation 라이프 사이클의 전형적 불편함 중첩 라우팅 -…","frontmatter":{"slug":"/2022/05/31/scrap","date":"2022-05-31T00:00:00.000Z","title":"2022-05 스크랩"}},{"excerpt":"컴포넌트 상태와 프롭에 따라 리액트 엘리먼트를 동기화하는 것이 리액트로 UI 개발하는 기본 방향이다.\n대부분 경우 이 구조로 개발하는 것이 엘리먼트를 직접 다루는 방법보다 더 낫다.\n돔을 직접 수정하다보면 자칫 장황한 코드가 될 여기가 많기 때문이다. 그럼에도 불구하고 돔에 직접 접근할 수 밖에 없는 상황이 생긴다.\n리액트는 이런 경우에 대비해 ref라는…","frontmatter":{"slug":"/2022/05/31/react-ref","date":"2022-05-31T00:00:00.000Z","title":"리액트 Ref"}},{"excerpt":"훅을 주로 사용하는 지금에 비하면 비교적 철 지난 주제인 것 같다. 리액트 컴포넌트 로직을 재사용하기 위한 방법으로 고차 컴포넌트(High Order Component)를 사용한다. 써드 파티 라이브러리에서도 이 형태의 API 제공한다.\n리액트 라우터는 withRouter 함수로 라우터의 일부 기능을 컴포넌트에 추가한다.\n리액트 리덕스는 connect 함…","frontmatter":{"slug":"/2022/05/28/react-high-order-component","date":"2022-05-28T00:00:00.000Z","title":"리액트 고차 컴포넌트(HOC)"}},{"excerpt":"거의 사용해 보지 못했다. create-react-app에서 잠깐 봤는데 이걸로 프로젝트를 해본 경험이 없으니 정말 거의 사용한 적이 없었다. React의 Strict 모드가 무엇인지 문서 위주로 정리해 보자. 역할 자바스크립트에서는 엄격 모드가 있다. 코드 파일 상단에 \"use strict\"를 써 놓으면 자바스크립트를 실행할 때 조금 더 엄격하게 코드를…","frontmatter":{"slug":"/2022/05/20/react-strict-mode","date":"2022-05-20T00:00:00.000Z","title":"리액트 StrictMode"}},{"excerpt":"요즘 react-router를 거의 만져보지 못했다. 회사에서 담당한 제품이 사용하지 않은 이유가 크다. 오랜 만에 봤더니 버전 6가지 나왔더라. 예전에 4를 썼던가? 부지런 해야겠다는 생각이 든다. 싱글페이지 어플리케이션의 가장 중요한 기능은 라우터다. 브라우져의 요청에 맞는 웹 페이지를 제공하는 것. 평소에 생각만 해봤다. '히스토리 API를 사용하면…","frontmatter":{"slug":"/dev/2022/05/06/react-router.html","date":"2022-05-06T00:00:00.000Z","title":"리액트 라우터 만들기 "}},{"excerpt":"2022-04-01 금 Making Sense of React Hooks Why Hooks? 등장배경? 복잡한 컴포넌트를 작게 쪼갤수 없다. 상태 때문. 함수나 다른 컴포넌트로 분리 불가 그래서 이런걸 만든다. 거대한 컴포넌트: 리팩토링, 테스트 어려워 중복로직: 다른 컴포넌트와 라이프사이클 복잡한 패턴: 렌터 프롬, hoc 그래서 훅이 나왔다. 재사용할…","frontmatter":{"slug":"/2022/04/30/scrap","date":"2022-04-30T00:00:00.000Z","title":"2022-04 스크랩"}},{"excerpt":"지난 시간에 이어 useContext를 직접 만들어 보자. 서론 이전 글에서 컨택스트의 모양이 이렇겠지 하고 정리했는데 잘못된 것 같다.\n글에서 만든 코드를 다시 읽어보니 제대로 동작하지 않을 것이 분명하다. 컴포넌트 계층 구조에서 부모-자식 간에는 프롭스(props)를 전달하면서 협력한다.\n컴포넌트끼리 접촉해 있어야만 이 메세지를 전달할 수 있는 구조이…","frontmatter":{"slug":"/dev/2022/04/28/use-context.html","date":"2022-04-28T00:00:00.000Z","title":"리액트 useContext는 어떤 모습일까?"}}]}},"pageContext":{}},
    "staticQueryHashes": ["3044774879"]}