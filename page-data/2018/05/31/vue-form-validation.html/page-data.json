{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/2018/05/31/vue-form-validation.html","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"85acb33c-a874-5a2f-8679-406d73fb9fbb","html":"<p><img src=\"/assets/imgs/2018/05/31/vue-form-validation-logo.jpg\" alt=\"logo\"></p>\n<p>웹 서비스를 개발할때 사용자 인터랙션이 가장 많은 부분이 <strong>폼 필드</strong>다.\n단순한 로그인 화면부터 어드민의 복잡한 상품 등록 화면까지 폼은 사용자의 입력을 받아 서버로 전달하는 역할을 한다.</p>\n<p>이 데이터가 API를 통해 서버로 전달되고 일련의 검증 과정을 마친후 비로소 데이터베이스에 들어가는 흐름이다.\n입력 데이터 검증을 서버측에서 수행하지만 API를 태우기 전에 프론트 단에서 먼저 검증하는 것이 <strong>네트웍 비용 감소</strong>와 <strong>사용성 개선</strong>이라는 측면에서 좋다.</p>\n<p>그렇기 때문에 잘못된 입력에 대해 프론트엔드가 먼저 이를 감지하고 적절한 메세지로 사용자를 안내하는 것이 사용자로 하여금 서비스에 접근하는데 중요한 역할을 한다고 볼 수 있다.</p>\n<p>프론트엔드 프레임웍에서는 폼 개발을 중요한 영역으로 취급하고 손쉽게 접근할수 있는 방법을 제공한다. 예를 들어 앵귤러는 <code>ngForm</code>이라는 디렉티브를 이용해 폼검증에 사용할 수 있다. (앵귤러 1의 ngForm에 대한 간단한 사용법은 <a href=\"/tags.html#ngform\">여기</a>를 참고)</p>\n<p>VueJS도 마찬가지인데 이번 글에서는 <strong>VueJS로 폼 검증하는 방법</strong>에 대해서 다뤄보겠다.</p>\n<h2 id=\"가장-손쉬운-방법\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%9E%A5-%EC%86%90%EC%89%AC%EC%9A%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"가장 손쉬운 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가장 손쉬운 방법</h2>\n<p>Vue 인스턴만 이용해 간단히 폼을 검증해 볼 수 있다. 이름 입력 필드를 만드는 것으로 시작하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">@submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSubmit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>errorBag.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{errorBag.name[0]}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>입력을 위해 <code>name</code> 데이터를 사용하고, 입력 에러를 위한 <code>errorBag</code> 객체를 사용했다.\nerrorBag.name 키가 있을 경우, 즉 입력 에러가 있을 경우 첫번째 에러 문자열을 출력한다.\n그리고 제출 버튼을 클릭하면 <code>onSubmit()</code> 메소스를 실행한다.</p>\n<p>Vue 인스턴스를 살펴볼까?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">errorBag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>입력 필드와 양방향 연결되어 있는 <code>name()</code> 감시자를 만들었다. validator.validate() 메소드로 입력한 값을 검증한다.</p>\n<p>마찬가지로 폼을 제출할때 실행할 <code>onSubmit()</code> 메소드에서도 동일하게 검증하고 결과를 errorBag.name에 저장한다.</p>\n<p>validator 객체는 어떻게 구현할수 있을까?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      errors<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> field is required</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        errors<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> filed should have length of 3</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> errors\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>검증을 수행하는 <code>validate()</code> 메소드는 필드명 key와 입력값 val 변수를 인자로 받는다.</p>\n<p>두 단계의 검증 절차가 있는데</p>\n<ul>\n<li>먼저는 값 입력 여부를 체크한다. 입력값이 없을 경우 에러 문자열을 배열에 추가한다</li>\n<li>그리고나서 입력 문자열의 길이를 체크한다. 3자 미만이면 에러 문자열을 배열에 추가한다</li>\n</ul>\n<p>마지막엔 이 에러 문자열이 담긴 배열을 반환하는 로직이다. <br />\n(전체 코드는 <a href=\"https://github.com/jeonghwan-kim/blog-vue-validate/tree/watch\">깃헙의 watch 브랜치</a>를 참고)</p>\n<p>결과를 확인해 보면 다음과 같다.</p>\n<p>|-|-|\n|<img src=\"/assets/imgs/2018/05/31/step1.jpg\" alt=\"step1\"><center><small>-초기상태-</small></center>|<img src=\"/assets/imgs/2018/05/31/step2.jpg\" alt=\"step2\"><center><small>-제출 버튼 클릭할 경우-</small></center>|\n|<img src=\"/assets/imgs/2018/05/31/step3.jpg\" alt=\"step3\"><center><small>-입력하기 시작할 경우-</small></center>|<img src=\"/assets/imgs/2018/05/31/step4.jpg\" alt=\"step4\"><center><small>-3자 이상 입력할 경우-</small></center></p>\n<p>이런 방법은 입력 필드 갯수가 적을때 빠르고 간단하게 검증할 수 있는 장점이 있다. <br />\n(자세한 방법은 <a href=\"https://kr.vuejs.org/v2/cookbook/form-validation.html\">Vue 가이드 문서</a>를 참고)</p>\n<p>하지만 입력 데이터를 감시하는 것과 제한된 검증자는 기능 확장에 다소 제한적이라고 생각되지 않나?</p>\n<h2 id=\"디렉티브로-만드는-방법\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"디렉티브로 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디렉티브로 만드는 방법</h2>\n<p>폼 검증을 재활용할수 있도록 코드 개선해 보자. 입력 엘러멘트에 접근하기 때문에 <strong>Vue 디렉티브</strong>로 제공되면 좋을 것 같다.</p>\n<p>이런식으로 사용할 생각이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">@submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSubmit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-validate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>required|minLen3'<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>errorBag.name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ errorBag.name[0] }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code>v-validate</code> 디렉티브에 검증자 정보를 문자열 <code>\"required|minLen3\"</code> 형태로 전달하면 선언적 마크업의 모습과 어울린다.</p>\n<p>곧장 디렉티브 코드를 작성해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">validate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> binding<span class=\"token punctuation\">,</span> vnode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      validator<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> binding<span class=\"token punctuation\">.</span>expression<span class=\"token punctuation\">,</span> vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> binding<span class=\"token punctuation\">,</span> vnode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span>name\n      <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span>stringify\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">s</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span>vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span>vnode<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>디렉티브는 몇 개 훅을 제공한다.</p>\n<blockquote>\n<p>bind() → inserted() → update() → unbind()</p>\n</blockquote>\n<p>순으로 호출되는데 각 포인트마다 폼 검증을 위한 작업을 추가해서 넣어 봤다.</p>\n<p><code>bind()</code> 함수에서는 입력한 검증자 문자열을 파싱하여 사용하기 편하도록 준비한다.\nvalidator.setup() 메소드가 그 역할을 하는데</p>\n<ul>\n<li>필드 이름인 el.name(\"name\")</li>\n<li>검증 문자열 binding.expression(\"required<code>|</code>min3\")</li>\n<li>입력한 문자열 el.value</li>\n</ul>\n<p>를 인자로 전달한다.</p>\n<p>뷰 인스턴스의 데이터의 변화에 컴포넌트 라이브사이클이 구동되고 그 안에 사용한 디렉티브도 갱신되는데, 이때 실행되는 훅이 <code>update()</code> 함수다.\n아이디어는 이 시점에 입력 값을 검증하는 것이다.</p>\n<ul>\n<li>validateor.validate(key, el.value) 실행 결과, 에러 문자열이 담긴 배열이 반환되는데 이 결과를 뷰 인스턴스의 데이터에 갱신한다</li>\n<li>물론 에러가 없을 경우는 해당 객체를 삭제한다</li>\n<li>만약 기존 에러 객체와 같은 경우는 무시한다</li>\n</ul>\n<p>검증 역할을 하는 validator 객체도 조금 바꿔야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> validateFns <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is required</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">minLen3</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>val <span class=\"token operator\">||</span> val<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> should have more than 3 letters</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> validator <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>validates <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> expression</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> validates <span class=\"token operator\">=</span> expression<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">'</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>validates<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> validates<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> validates <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>validates<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> validates\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> validateFns<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> errors\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>먼저 검증하는 함수를 각각 만들어<code>validateFn</code> 객체의 메소드 형태로 만들었다. 입력한 값을 검증한 후 에러 문자열을 반환하는 동작을 한다.</p>\n<p>validator 객체에는 메소드 두 개를 더 추가했다.</p>\n<ul>\n<li><code>init()</code> 은 검증결과를 저장한 errors 객체와 검증자를 관리할 validates를 맵으로 초기화하는 코드다</li>\n<li>디렉티브 생성시 <code>setup()</code>을 호출하는데 디렉티브에 전달한 검증자 문자열을 파싱하여 validates 맵에 준비해 놓는 역할을 한다</li>\n</ul>\n<p>required와 minLen3만 검증하는 기존의 제한적인 validate() 메소드를 좀 더 유연하게 개선했다.\nvalidates 맵에서 검증자를 가져와 해당하는 검증함수를 validateFn에서 찾아 호출하고 에러 문자열을 배열로 반환한다.</p>\n<p>이를 사용하기 위한 컴포넌트 코드를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> directives <span class=\"token keyword\">from</span> <span class=\"token string\">\"./MyDirectives\"</span>\n<span class=\"token keyword\">import</span> validator <span class=\"token keyword\">from</span> <span class=\"token string\">\"./validator\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  directives<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">errorBag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$<span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트에서 v-directive를 사용하려면 객체 생성인자 <code>directives</code>로 방금 만든 디렉티브 코드를 전달해야 한다.</p>\n<p>폼 제출 후 onSubmit() 에서는 validator.validate() 메소드로 입력값을 검증하고 결과를 errorBag에 갱신한다.</p>\n<p>이때 <code>this.$set()</code> 함수를 사용한 점이 중요하다.\nerrorBag의 name 은 초기화 되어 있지 않기 때문에 단순히 <code>this.errorBag.name = errors</code> 코드로는 변경을 감지하지 못한다.</p>\n<p><strong>이를 극복하기 위한 수단이 <code>$set</code>, <code>$delete</code> Vue 전역 함수</strong>다. 이 함수로 상태를 갱신함으로써 Vue가 데이터의 변화를 감지하도록 하고 컴포넌트 렌더링 사이클를 돌릴수 있는 것이다. <br />\n(전체 코드는 <a href=\"https://github.com/jeonghwan-kim/blog-vue-validate/tree/directive\">깃헙의 directive 브랜치</a> 참고)</p>\n<p>결국 화면에 에러 문구가 출력된다.</p>\n<h2 id=\"플러그인으로-만드는-방법\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"플러그인으로 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인으로 만드는 방법</h2>\n<p>디렉티브로 개선했음에도 불구하고 몇 가지 눈에 거슬리는 코드가 보인다.</p>\n<ul>\n<li>errorBag은 폼 검증을 위한 v-validate 디렉티브와 더 관련 있어 보인다. 컴포넌트 코드와는 다른 분위기다</li>\n<li>onSubmit() 함수도 마찬가지. errorBag을 갱신하는 코드를 다른 곳으로 옮겨야하지 않을까?</li>\n</ul>\n<p><strong>Vue 플러그인</strong>은 이러한 역할을 수행하는데 안성맞춤이다. 이 부분을 플러그인 코드로 옮겨보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> MyDirectives <span class=\"token keyword\">from</span> <span class=\"token string\">\"./MyDirectives\"</span>\n<span class=\"token keyword\">import</span> validator <span class=\"token keyword\">from</span> <span class=\"token string\">\"./validator\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">install</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Vue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"validate\"</span><span class=\"token punctuation\">,</span> MyDirectives<span class=\"token punctuation\">.</span>validate<span class=\"token punctuation\">)</span>\n\n    Vue<span class=\"token punctuation\">.</span><span class=\"token function\">mixin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">errorBag</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>컴포넌트에서 디렉티브를 등록 부분을 플러그인으로 옮겼다. 나중에 플러그인만 설정하면 디렉티브까지 자동으로 로딩하게될 것이다.</p>\n<p>믹스인(mixin)은 컴포넌트에 옵션 객체를 추가할수 있는 방법이다. 컴포넌트 생성시 데이터나 계산된 속성 따위를 여기서 정의할 수 있는데, 여기서는 errorBag 데이터를 옮겨놨다.</p>\n<p>이어서 계산된 속성도 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">$errors</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> errorBag <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorBag <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>errorBag<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> errorBag<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function\">$validator</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">validateAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">of</span> validator<span class=\"token punctuation\">.</span>validates<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> validator<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">$set</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">else</span>  context<span class=\"token punctuation\">.</span>$<span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>errorBag<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>$errors와 $validator 계산된 속성을 추가했다.</p>\n<p><code>$errors</code>는 has()와 first() 메소드로 구성된 객체를 반환하는데 <code>has()</code>는 errorBag에서 특정 필드의 검증 결과 유무를 반환하고 <code>first()</code>는 첫번째 에러 메세지를 반환한다. 뷰 컴포넌트의 템플릿에서는 계산된 속성이 반환하는 메소드를 통해 에러 메세지를 출력할 용도로 쓰인다.</p>\n<p>한편 <code>$validator</code> 속성은 <code>validateAll()</code> 함수를 갖는 객체를 반환하는데 이건 입력 폼을 모두 검증해서 errorBag에 결과를 저장한다. validator 객체를 통해 검증 대상과 검증자를 모두 가져와 에러를 체크한다. 결과는 errorBag에 담아둔다.</p>\n<p>플러그인은 루트 컴포넌트 생성시 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">import</span> MyPlugin <span class=\"token keyword\">from</span> <span class=\"token string\">\"./MyPlugin\"</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>MyPlugin<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">el</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>Vue.use(MyPlugin)</code> 하나의 코드로 줄었다. 이것으로</p>\n<ul>\n<li>v-validate 디렉티브를 등록하고</li>\n<li>에러를 담는 errorBag 데이터를 만들고</li>\n<li>템플릿 출력을 위한 $errors와 onSubmit()에서 호출할 $validator 계산된 속성을 추가한다</li>\n</ul>\n<p>결국 컴포넌트 코드를 이렇게 절약할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">@submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSubmit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">v-validate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>required|minLen3'<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$errors.has('name')<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        {%raw%}{{ $errors.first('name') }}{%endraw%}\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$validator<span class=\"token punctuation\">.</span><span class=\"token function\">validateAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>입력 필드에는 v-validate 디렉티브로 어떤 검증자를 둘것인지 선언적으로 표현했다.</p>\n<p>에러 문구는 errors 계산된 속성의 반환 객체를 이용해 has()로 에러 여부를 체크하고 first() 로 첫번째 에러 메세지를 출력한다.</p>\n<p>마지막으로 폼제출시 실행되는 onSubmit()에서는 $validator 계산된 속성의 validateAll() 함수로 입력 필드 검증을 수행한다.</p>\n<p>어떤가? 훨씬 읽기 쉬운 코드다. (전체 코드는 <a href=\"https://github.com/jeonghwan-kim/blog-vue-validate/tree/plugin\">깃헙의 plugin 브랜치</a> 참고)</p>\n<h2 id=\"vee-validate\" style=\"position:relative;\"><a href=\"#vee-validate\" aria-label=\"vee validate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vee-validate</h2>\n<p>이러한 흐름의 연장선으로 <a href=\"https://baianat.github.io/vee-validate/\">vee-validate</a> 라이브러리를 이해했으면 좋겠다.\n(사실 여기까지가 이글에서 말하고 싶은 점이다)</p>\n<p><img src=\"/assets/imgs/2018/05/31/vee-validate.jpg\" alt=\"vee-validate\"></p>\n<p>Vue에서 폼 검증시 가장 많이 사용하는 이 툴은 플러그인 형태로 제공되기 때문에 <code>Vue.use()</code>로 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">import</span> VeeValidator <span class=\"token keyword\">from</span> <span class=\"token string\">\"vee-validate\"</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VeeValidator<span class=\"token punctuation\">)</span></code></pre></div>\n<p>그리고 나서 컴포넌트에서는 이렇게 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">@submit.prevent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onSubmit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">v-validate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>required|min:3'<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>errors.has('name')<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{%raw%}{{errors.first('name')}}{%endraw%}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$validator<span class=\"token punctuation\">.</span><span class=\"token function\">validateAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>우리가 구현했던 플러그인과 사용방법과 대동소이하다.\n(v-validate의 검증자 설정하는 부분만 조금 다르다: \"minLen3\" → \"min:3\")</p>\n<p>구체적인 사용법은 <a href=\"https://baianat.github.io/vee-validate\">공식 문서</a>와 <a href=\"http://vuejs.kr/vue/vee-validate/2017/04/01/using-vee-validate/\">Vue 한국 사용자 모임</a>에서 친절하게 설명해 준다.\n(전체 코드는 <a href=\"https://github.com/jeonghwan-kim/blog-vue-validate/\">깃헙의 페이지</a> 참고)</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>사용자 입력을 직접 처리하는 부분인 폼은 입력 데이터에 대한 검증을 선제적으로 체크해야 하는 부분이다. 지금까지 VueJS를 이용한 입력 필드 검증 방법에 대해 단계적으로 살펴 보았다.</p>\n<ul>\n<li>매우 단순한 입력 필드라면 <strong>뷰 인스턴스만을 이용해서 데이터 기반으로 구현</strong>할 수 있다.</li>\n<li>복잡한 입력 필드와 검증 조건이 필요하다면 <strong>디렉티브와 플러그인 형태</strong>로 구현해서 사용할 수 있다. 이러한 방법이 코드를 재사용하는 DRY한 방법이기 때문이다.</li>\n<li>뿐만아니라 이미 이러한 형태로 구현해 놓은 <strong>써드파티 라이브러리</strong>를 찾는 것이 더 효율적일수 있는데 vee-validate 가 대표적이다.</li>\n</ul>","frontmatter":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z","title":"VueJS 폼 검증","tags":["vuejs"],"series":null,"videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%EA%B0%80%EC%9E%A5-%EC%86%90%EC%89%AC%EC%9A%B4-%EB%B0%A9%EB%B2%95\">가장 손쉬운 방법</a></li>\n<li><a href=\"#%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\">디렉티브로 만드는 방법</a></li>\n<li><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\">플러그인으로 만드는 방법</a></li>\n<li><a href=\"#vee-validate\">vee-validate</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>","excerpt":"logo 웹 서비스를 개발할때 사용자 인터랙션이 가장 많은 부분이 폼 필드다.\n단순한 로그인 화면부터 어드민의 복잡한 상품 등록 화면까지 폼은 사용자의 입력을 받아 서버로 전달하는 역할을 한다. 이 데이터가 API를 통해 서버로 전달되고 일련의 검증 과정을 마친후 비로소 데이터베이스에 들어가는 흐름이다.\n입력 데이터 검증을 서버측에서 수행하지만 API…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"de0745b6-1d57-5939-8076-276d4d922fc7","frontmatter":{"slug":"/elastic-beanstalk/","date":"2014-07-12T08:18:53.000Z","title":"Elastic Beanstalk","series":null}},{"id":"84bfd284-cfb4-5a4b-967f-2deacdc69a03","frontmatter":{"slug":"/아마존-s3를-이용한-이미지-업로드-서버-구축/","date":"2014-07-23T08:31:17.000Z","title":"아마존 S3를 이용한 이미지 업로드 서버 구축","series":null}},{"id":"dd3c498a-c2fa-508b-8753-10ced609bf9c","frontmatter":{"slug":"/트위터-부트스트랩-소스분석/","date":"2014-07-26T08:31:45.000Z","title":"트위터 부트스트랩 소스분석","series":null}},{"id":"236cb5f1-daee-5797-a4c3-a0d5150250af","frontmatter":{"slug":"/노드에서-세션을-이용한-로그인아웃-구현/","date":"2014-07-31T08:32:17.000Z","title":"노드에서 세션을 이용한 로그인/아웃 구현","series":null}},{"id":"5bb8dced-3905-531b-8974-71c0b2a07bcc","frontmatter":{"slug":"/angular-fullstack-로딩-속도-개선/","date":"2014-08-02T08:33:03.000Z","title":"Angular-fullstack 로딩 속도 개선","series":null}},{"id":"70be4152-4b4b-5ecc-bbd9-2b8c20d4d616","frontmatter":{"slug":"/log-io를-이용한-beanstalk-로그-모니터링/","date":"2014-08-08T08:33:35.000Z","title":"log.io를 이용한 beanstalk 로그 모니터링","series":null}},{"id":"359533f2-ec29-5dba-ae01-cc810b954241","frontmatter":{"slug":"/노드-실행모드에-따른-환경설정/","date":"2014-08-14T16:42:51.000Z","title":"노드 실행모드에 따른 환경설정","series":null}},{"id":"69fed822-1b8c-56a4-bdca-6d06af9b12eb","frontmatter":{"slug":"/expressjs-4-0-마이그레이션/","date":"2014-08-21T16:43:14.000Z","title":"expressjs 4.0 마이그레이션","series":null}},{"id":"00252337-61fb-5be7-af76-97edf51708af","frontmatter":{"slug":"/underscore-js/","date":"2015-01-05T22:16:09.000Z","title":"underscore.js","series":null}},{"id":"0043ae66-12f2-56a6-a46d-90690dd23ca6","frontmatter":{"slug":"/angular-form/","date":"2015-01-09T19:02:17.000Z","title":"Angular Form","series":null}},{"id":"a0eaa9cc-ea94-5bd3-879e-37f21bac8e1b","frontmatter":{"slug":"/wordpress-study-01-misfit-kr/","date":"2015-01-09T21:52:58.000Z","title":"WordPress study 01 & misfit.kr","series":null}},{"id":"31c8b6ba-b0a4-5722-baef-54ca72e0547a","frontmatter":{"slug":"/워드프레스-ssh2-설정/","date":"2015-01-10T15:27:00.000Z","title":"워드프레스 SSH2 설정","series":null}},{"id":"f7248362-a541-5cd4-870c-34f99ccd6597","frontmatter":{"slug":"/angularjs-passport로-인증구현/","date":"2015-01-17T12:34:54.000Z","title":"AngularJS, Passport로 인증구현","series":null}},{"id":"d11bc9a4-e7f5-5596-9f58-94d9fb745614","frontmatter":{"slug":"/eb-cli-툴-사용법-정리/","date":"2015-01-17T14:10:57.000Z","title":"eb-cli 툴 사용법 정리","series":null}},{"id":"072d1ac5-646d-5e94-a493-a9be30630fe2","frontmatter":{"slug":"/resource-캐쉬-설정/","date":"2015-01-18T21:39:09.000Z","title":"$resource 캐쉬 설정","series":null}},{"id":"a7ae25c5-df68-56ed-ba4f-0ad20a1876f6","frontmatter":{"slug":"/꼬리에-꼬리를-무는-timeout/","date":"2015-01-22T01:05:37.000Z","title":"꼬리에 꼬리를 무는 setTimeout()","series":null}},{"id":"e3e780d7-dbff-5f04-8dc8-9fa9032604dd","frontmatter":{"slug":"/resource와-service/","date":"2015-01-22T01:13:07.000Z","title":"$resource와 service","series":null}},{"id":"15d65411-c468-552a-9aff-d924706361cb","frontmatter":{"slug":"/브라우져에서-아마존-s3-파일-업로드/","date":"2015-01-24T17:32:45.000Z","title":"브라우져에서 아마존 S3 파일 업로드","series":null}},{"id":"1b8e2d15-448e-578d-a7ca-1485f3a44f67","frontmatter":{"slug":"/bit-operation/","date":"2015-02-07T23:08:18.000Z","title":"비트 연산","series":null}},{"id":"8102ac28-5ee7-5ad5-b30c-67291d40da96","frontmatter":{"slug":"/http-테스트-코드-작성/","date":"2015-02-10T10:00:11.000Z","title":"$http 테스트 코드 작성","series":null}},{"id":"5649fce9-25fa-5fb4-a876-c5b0e291b58f","frontmatter":{"slug":"/wordpress-and-grunt/","date":"2015-02-18T21:35:59.000Z","title":"워드프레스에 Grunt 설정하기","series":null}},{"id":"629b397a-6f2a-517a-ac47-58d2540cebf1","frontmatter":{"slug":"/서버-다운타임-없이-빈스톡-갈아타기/","date":"2015-03-05T20:47:38.000Z","title":"서버 다운타임 없이 빈스톡 갈아타기","series":null}},{"id":"cbf6d862-6264-586b-b6c5-abdfaab8649d","frontmatter":{"slug":"/몽고db-인덱스-외/","date":"2015-03-10T00:10:10.000Z","title":"몽고DB 인덱스 외","series":null}},{"id":"11f3c5f6-8907-584b-ae1c-6f15541c038f","frontmatter":{"slug":"/wordpress-and-jquery/","date":"2015-03-11T00:16:00.000Z","title":"워드프레스와 제이쿼리 등","series":null}},{"id":"275759a9-7339-5ffe-a40e-afb9f43a5ff8","frontmatter":{"slug":"/plugins-in-wordpress/","date":"2015-03-12T20:32:16.000Z","title":"워드프레스 플러그인 정리","series":null}},{"id":"8aedb6c7-05e4-569e-8961-7fda05f752fb","frontmatter":{"slug":"앵귤러-디렉티브-등/","date":"2015-03-18T22:04:01.000Z","title":"앵귤러 디렉티브 등","series":null}},{"id":"a78c4f36-5dd4-5193-a4a1-b0c87052b9ef","frontmatter":{"slug":"/options-메쏘드에-대해/","date":"2015-03-19T23:14:17.000Z","title":"options 메쏘드에 대해","series":null}},{"id":"add2ba8c-960e-55cd-ad28-49a27fbfcee9","frontmatter":{"slug":"/앵귤러-서비스에-템플릿-로딩/","date":"2015-03-23T20:28:13.000Z","title":"앵귤러 서비스에 템플릿 로딩","series":null}},{"id":"2da7d26a-3723-56dd-9cd1-fcfaa609b0d6","frontmatter":{"slug":"/fileupload-in-expressjs/","date":"2015-03-28T14:13:12.000Z","title":"익스프레스 파일 업로드","series":null}},{"id":"a1449dc6-b818-5d27-8e6b-9c69b929c180","frontmatter":{"slug":"/how-to-build-wordpress-child-theme/","date":"2015-03-28T15:07:50.000Z","title":"워드프레스 자식 테마 만들기","series":null}},{"id":"6178e28f-77b0-5aa5-a431-1cf0a79731ad","frontmatter":{"slug":"/custom-menu-in-wordpress/","date":"2015-03-28T15:43:26.000Z","title":"워드프레스 커스텀 메뉴 추가하기","series":null}},{"id":"5f905179-f327-5b3f-89b3-c6e8acfe3191","frontmatter":{"slug":"/ui-route로-라우팅-인증-구현/","date":"2015-04-01T23:38:41.000Z","title":"ui-route로 라우팅 인증 구현","series":null}},{"id":"320b235d-22aa-5987-941f-cad89282ca4f","frontmatter":{"slug":"/angularjs-스터디-노트/","date":"2015-04-02T18:16:34.000Z","title":"AngularJS 스터디 노트","series":null}},{"id":"4779949f-6673-530c-9f6f-610b81516e16","frontmatter":{"slug":"/how-to-run-nodejs-and-php-by-using-nginx/","date":"2015-04-10T10:04:00.000Z","title":"nginx를 이용하여 nodejs와 php 어플리케이션 함께 구동하기","series":null}},{"id":"bab21309-cdcc-545c-ae22-f97021db939d","frontmatter":{"slug":"/server-side-loggin-in-angular/","date":"2015-05-05T23:45:45.000Z","title":"프론트에서 잡지 못한 예외를 서버에 리포팅하는 방법","series":null}},{"id":"14919133-4ff7-5ba5-94d0-116ed2dfb344","frontmatter":{"slug":"/oauth2-0-in-rest-api/","date":"2015-06-11T15:31:20.000Z","title":"REST api에 OAuth2.0 구현","series":null}},{"id":"d2ab7bf2-e833-5f62-bc82-eb6189f263af","frontmatter":{"slug":"/google-material-design/","date":"2015-06-14T15:20:29.000Z","title":"Google Material Design","series":null}},{"id":"6f996122-20dd-574b-b9ba-227068cd1d77","frontmatter":{"slug":"/이니페이-모바일-결제-신용카드-개발-후기/","date":"2015-06-18T09:03:02.000Z","title":"이니페이 모바일 결제 (신용카드) 개발 후기","series":null}},{"id":"981c4452-c8d0-52cb-840b-ec881b05d98e","frontmatter":{"slug":"/momentjs/","date":"2015-06-19T08:12:10.000Z","title":"momentjs","series":null}},{"id":"c8db2903-17e3-50a3-806d-b0937dfd3e7a","frontmatter":{"slug":"/이니페이-모바일-결제-계좌이체-개발-후기/","date":"2015-06-26T09:14:45.000Z","title":"이니페이 모바일 결제 (계좌이체) 개발 후기","series":null}},{"id":"a47e538f-3f5a-5b30-a1ee-b703369d1c6c","frontmatter":{"slug":"/socket-io를-이용한-실시간-웹-구현/","date":"2015-07-07T22:14:13.000Z","title":"Socket.io를 이용한 실시간 웹 구현","series":null}},{"id":"1ae73647-cff4-5acf-ba39-054e38fc92ed","frontmatter":{"slug":"/mi-band-moves-rocket-pocket/","date":"2015-07-19T19:25:06.000Z","title":"Mi Band, Moves, Rocket Pocket","series":null}},{"id":"e749320c-2503-5285-ac9d-8f6e8bee2a64","frontmatter":{"slug":"/ngform-클래스명-활용하기/","date":"2015-07-21T23:47:11.000Z","title":"ngForm 클래스명 활용하기","series":null}},{"id":"532239b3-3cc0-5641-9642-f2fe6c5c3429","frontmatter":{"slug":"/passport-google-oauth-구글-인증-모듈/","date":"2015-07-23T21:50:03.000Z","title":"passport-google-oauth 구글 인증 모듈","series":null}},{"id":"a2536be3-03b8-50b9-9a62-a84322a08c2d","frontmatter":{"slug":"/ngform-밸리데이터-활용/","date":"2015-07-24T09:10:27.000Z","title":"ngForm 밸리데이터 활용","series":null}},{"id":"c706f7d7-1c77-5229-90cf-f243df786e48","frontmatter":{"slug":"/ngform-사용자-정의-밸리데이터-만들기/","date":"2015-07-24T21:08:44.000Z","title":"ngForm 사용자 정의 밸리데이터 만들기","series":null}},{"id":"ed1c8dfa-5834-52b3-8922-e2614699a5e9","frontmatter":{"slug":"/dusk-theme-in-webstorm/","date":"2015-07-26T21:42:47.000Z","title":"웹스톰 Dusk 테마","series":null}},{"id":"ee0af369-fddd-5388-9d2b-31a13833d9e5","frontmatter":{"slug":"/이미지-업로드-1-multer-모듈로-파일-업로드/","date":"2015-07-27T17:09:22.000Z","title":"이미지 업로드 - 1. multer 모듈로 파일 업로드","series":null}},{"id":"11b2716d-7855-529d-87e0-1a45733b4187","frontmatter":{"slug":"/이미지-업로드-2-gm-모듈로-이미지-리사이징/","date":"2015-07-27T17:10:21.000Z","title":"이미지 업로드 – 2. gm 모듈로 이미지 리사이징","series":null}},{"id":"e4c1a655-4a9f-51f9-8e74-216e8c512f5b","frontmatter":{"slug":"/리눅스-데몬으로-노드-어플리케이션-관리하기/","date":"2015-07-29T23:04:12.000Z","title":"리눅스 데몬으로 노드 어플리케이션 관리하기","series":null}},{"id":"8f2542d8-769e-5b09-94bd-9b5af89ae16d","frontmatter":{"slug":"/express-js-1-설치와-구조/","date":"2015-07-30T22:12:40.000Z","title":"Express.js - 1. 설치와 구조","series":null}},{"id":"b9e32bb4-2367-5c5e-b755-8b05f5869528","frontmatter":{"slug":"/express-js-2-라우팅/","date":"2015-08-03T09:56:22.000Z","title":"Express.js - 2. 라우팅","series":null}},{"id":"5acd0e73-7bba-5652-9650-7f5ee1328668","frontmatter":{"slug":"/express-js-3-템플릿jade/","date":"2015-08-04T21:00:46.000Z","title":"Express.js - 3. 템플릿(Jade)","series":null}},{"id":"5e568fd0-29a3-52f3-8e92-6888081f469f","frontmatter":{"slug":"/grunt-open/","date":"2015-08-10T09:38:30.000Z","title":"grunt open","series":null}},{"id":"766570c3-a994-5e10-a522-cc67fb2cfc83","frontmatter":{"slug":"/oh-my-zsh로-터미널-꾸미기/","date":"2015-08-10T14:41:05.000Z","title":"Oh My Zsh로 터미널 꾸미기","series":null}},{"id":"a8cb9655-209b-501a-9df2-61496e5c1388","frontmatter":{"slug":"/postdigest와-timeout/","date":"2015-08-12T00:35:20.000Z","title":"$$postDigest()와 $timeout()","series":null}},{"id":"59b49413-1ac2-55c4-9604-f58f41155316","frontmatter":{"slug":"/resource로-rest-api-사용하기/","date":"2015-08-13T23:32:53.000Z","title":"$resource로 REST api 사용하기","series":null}},{"id":"4b74a0be-e7a3-53d9-96ca-070fdb639193","frontmatter":{"slug":"/sequalize-쿼리/","date":"2015-08-22T15:22:13.000Z","title":"sequalize 쿼리","series":null}},{"id":"4b126fc4-ddd2-57f8-be8f-4764d63c6598","frontmatter":{"slug":"/아톰-에디터-외모-변경하기/","date":"2015-08-30T11:28:05.000Z","title":"아톰 에디터 외모 변경하기","series":null}},{"id":"ca778c8e-21a0-58f2-9c19-9deba9685b9c","frontmatter":{"slug":"/카페24-sms-node-모듈/","date":"2015-08-31T14:16:34.000Z","title":"카페24 SMS node 모듈","series":null}},{"id":"a51e63b4-6294-5fe2-bf2e-9bd59a7f842f","frontmatter":{"slug":"/개발-절차에-도커-적용하기/","date":"2015-09-02T11:13:03.000Z","title":"개발 절차에 도커 적용하기","series":null}},{"id":"b3089b79-6a48-5cde-af99-706a18ef1f6e","frontmatter":{"slug":"/docker-git/","date":"2015-09-07T10:55:26.000Z","title":"Docker + Git","series":null}},{"id":"4e074ab1-83eb-507b-97dc-8889190c5425","frontmatter":{"slug":"/크론을-사용할때-서버-시간을-정확히-맞추자/","date":"2015-09-08T20:10:54.000Z","title":"크론을 사용할때 서버 시간을 정확히 맞추자","series":null}},{"id":"6ef9818d-c1a2-50fa-8969-29aa7605716e","frontmatter":{"slug":"/깃git-서버-만들기/","date":"2015-09-08T20:12:06.000Z","title":"깃(git) 서버 만들기","series":null}},{"id":"56c29ef1-41f9-59f5-a9c2-86c0c03a378b","frontmatter":{"slug":"/agenda/","date":"2015-09-10T23:03:16.000Z","title":"Agenda","series":null}},{"id":"b439e989-d4d5-52ca-b2ec-2146d9fc1e39","frontmatter":{"slug":"/안쓰는-imac을-맥북-외장-모니터로-사용하자/","date":"2015-09-11T21:56:33.000Z","title":"안쓰는 iMac을 맥북 외장 모니터로 사용하자!","series":null}},{"id":"196e7222-17cf-52b1-8539-85c20341133c","frontmatter":{"slug":"/익스프레스-api-서버-테스트-코드-작성하기/","date":"2015-09-15T11:55:36.000Z","title":"익스프레스 API 서버 테스트 코드 작성하기","series":null}},{"id":"72fba5fc-afb3-5621-b09e-a56fba9a11f9","frontmatter":{"slug":"/forever-and-docker/","date":"2015-09-19T14:12:03.000Z","title":"Forever와 Docker","series":null}},{"id":"732d40e5-a9a3-5a53-b4a6-6bd2000acf63","frontmatter":{"slug":"/docker-usage/","date":"2015-09-19T15:16:40.000Z","title":"도커 활용기","series":null}},{"id":"47ed1cd2-a345-5b38-a06b-54397817d776","frontmatter":{"slug":"/원격로그인ssh-접속/","date":"2015-09-23T09:27:20.000Z","title":"원격로그인(SSH) 접속","series":null}},{"id":"ae8f2168-3e59-53d3-8d79-763659971940","frontmatter":{"slug":"/mysql-데이터베이스-삭제-에러/","date":"2015-09-27T12:27:46.000Z","title":"mysql 데이터베이스 삭제 에러","series":null}},{"id":"b892559d-d9f6-58f7-b704-cdaddb1ce32a","frontmatter":{"slug":"/osx-노트-글꼴-변경/","date":"2015-09-28T15:48:23.000Z","title":"osx 노트 글꼴 변경","series":null}},{"id":"aaedff24-fa8d-589f-b772-fe171293017d","frontmatter":{"slug":"/git-push-이벤트를-slack-채널로-보내기/","date":"2015-10-01T19:59:03.000Z","title":"git push 이벤트를 slack 채널로 보내기","series":null}},{"id":"e55023f2-54f8-5781-805f-7f63f34d17c3","frontmatter":{"slug":"/simpletest-php-unit-test/","date":"2015-10-13T17:17:22.000Z","title":"SimpleTest & php unit test","series":null}},{"id":"188453ad-c7bb-569c-a4a7-1b53045b7f4c","frontmatter":{"slug":"/도커에서-몽고디비-컨테이너-사용하기/","date":"2015-10-16T17:33:59.000Z","title":"도커에서 몽고디비 컨테이너 사용하기","series":null}},{"id":"8816031a-8fc0-553c-a07f-a0ccbf77fa31","frontmatter":{"slug":"/앵귤러로-만든-spa-프로그램을-아마존웹서비스-s3에서-웹/","date":"2015-10-27T10:08:59.000Z","title":"앵귤러로 만든 spa 프로그램을 아마존웹서비스 s3에서 웹호스팅 하는 방법","series":null}},{"id":"c8ffdeb1-b418-53aa-9220-37fe02ec2136","frontmatter":{"slug":"/서버-구동시-버전-체크/","date":"2015-10-30T09:29:05.000Z","title":"서버 구동시 버전 체크","series":null}},{"id":"dc2ffcb7-92c1-5621-94d5-7a734663528e","frontmatter":{"slug":"/karma와-watch로-유닛테스트-코드-개발하기/","date":"2015-11-04T10:49:41.000Z","title":"karma와 watch로 유닛테스트 코드 개발하기","series":null}},{"id":"c1fa8b71-4c01-557b-9547-5e3b3be47c1d","frontmatter":{"slug":"/karma에-리포터-추가하기/","date":"2015-11-11T19:44:34.000Z","title":"karma에 리포터 추가하기","series":null}},{"id":"13876ff7-9445-5a57-aff4-e6f852a7a99b","frontmatter":{"slug":"/atom-에디터-플러그인-정리/","date":"2015-11-11T20:34:05.000Z","title":"Atom 에디터 플러그인 정리","series":null}},{"id":"0ace5339-cdb0-5d46-bd21-a96cb9d72c75","frontmatter":{"slug":"/기존-프로젝트와-swagger-ui-연동하기/","date":"2015-11-24T20:33:24.000Z","title":"기존 프로젝트와 Swagger-ui 연동하기","series":null}},{"id":"a2dfe5b2-497d-5d24-ac1d-120af24dab6f","frontmatter":{"slug":"/atom-플러그인-atom-sync/","date":"2015-11-25T20:48:34.000Z","title":"Atom 플러그인: atom-sync","series":null}},{"id":"cce718aa-39b7-546a-a1be-739a4b012d2c","frontmatter":{"slug":"/카카오-인증-테스트/","date":"2015-11-28T18:53:58.000Z","title":"카카오 인증 테스트","series":null}},{"id":"cf98d420-420e-5595-b5ee-1adeefd11771","frontmatter":{"slug":"/ghost-라우팅-로직-분석/","date":"2015-11-30T22:40:51.000Z","title":"Ghost 라우팅 로직 분석","series":null}},{"id":"3dacbbc1-57ab-5cbf-abed-72323040d9d5","frontmatter":{"slug":"/페이스북-토큰-권한-확인-주소/","date":"2015-12-02T14:46:07.000Z","title":"페이스북 토큰 권한 확인 주소","series":null}},{"id":"965e6258-f062-534f-ac1a-60537cee23c9","frontmatter":{"slug":"/기존-mysql에-장고-어드민-붙이기/","date":"2015-12-02T20:19:58.000Z","title":"기존 데이터베이스에 장고 어드민 통합하기","series":null}},{"id":"e4a75967-f215-5163-a6ca-c50885cbbc0b","frontmatter":{"slug":"/gunicorn-장고-어드민-프로덕션-서버에-구동하기/","date":"2015-12-03T17:12:21.000Z","title":"gunicorn: 장고 어드민 프로덕션 서버에 구동하기","series":null}},{"id":"05e87f1e-b5d5-50a8-adf9-c5901e4935ba","frontmatter":{"slug":"/우분투에-django-admin-mysql-python-설치/","date":"2015-12-03T18:04:28.000Z","title":"우분투에 Django-admin, mysql-python 설치","series":null}},{"id":"4158ab19-891b-55e4-97f6-0c455a2c3784","frontmatter":{"slug":"/mongodump-is-not-working-on-cronjob/","date":"2015-12-07T20:55:16.000Z","title":"mongodump 크론잡이 동작하지 않을 때","series":null}},{"id":"751e9b6e-f18a-5e61-8eca-a1a7841d1f65","frontmatter":{"slug":"/swagger-node/","date":"2015-12-11T11:40:31.000Z","title":"Swagger-node로 express 시작하기","series":null}},{"id":"5405f9bf-ee93-5285-a720-cf1d229590b0","frontmatter":{"slug":"/javascript-decorator-pattern/","date":"2015-12-13T08:20:53.000Z","title":"Javascript Decorator Pattern","series":null}},{"id":"d97cbbdf-410c-580f-8cd3-5cf2a0626561","frontmatter":{"slug":"/ng-plualize-단수-복수형-처리/","date":"2015-12-21T09:56:48.000Z","title":"ng-plualize 단수, 복수형 처리","series":null}},{"id":"c67c2d6a-d03e-53dc-bb15-7d514b4ae268","frontmatter":{"slug":"/2015-블로그-결산","date":"2016-01-01T22:42:19.000Z","title":"2015 블로그 결산","series":null}},{"id":"3287fae5-69d8-52a9-b3b1-36a94f0de0de","frontmatter":{"slug":"/boot2docker-업데이트-v1-9/","date":"2016-01-03T18:26:20.000Z","title":"boot2docker 업데이트 (v1.9)","series":null}},{"id":"d8e263e8-44b2-5b64-a7d6-9d03aab06f80","frontmatter":{"slug":"/mocha/","date":"2016-01-05T00:02:30.000Z","title":"NodeJS에서 가장 많이 사용하는 테스트 프레임웍, Mocha","series":null}},{"id":"832105c4-f1eb-527c-81db-342773116457","frontmatter":{"slug":"/naming-uploaded-file-on-wordpress/","date":"2016-01-11T21:15:30.000Z","title":"워드프레스 파일 업로드 시 파일명 처리","series":null}},{"id":"5f3596a3-57c1-503c-b024-3b54c3c97eef","frontmatter":{"slug":"/add-fk-on-sequelize-migration/","date":"2016-01-12T22:17:40.000Z","title":"Sequelize로 마이그레이션 시 외래키 추가하기","series":null}},{"id":"71f87be3-91d3-5d89-944b-9310209dd785","frontmatter":{"slug":"/sequelize-migration/","date":"2016-01-14T09:21:17.000Z","title":"Sequelize 마이그레이션","series":null}},{"id":"d59122cd-f914-589a-a9ed-a703d912b668","frontmatter":{"slug":"/sequelize-model/","date":"2016-01-26T23:27:50.000Z","title":"Sequelize Modeling","series":null}},{"id":"3f7e7e68-9ebb-55a8-b303-31601ab8742d","frontmatter":{"slug":"/aws-서울-리전으로-블로그-이동/","date":"2016-01-30T19:35:32.000Z","title":"AWS 서울 리전으로 블로그 이동","series":null}},{"id":"f8e8b9ca-b2f3-55dd-996a-68993e4f00c0","frontmatter":{"slug":"/lodash/","date":"2016-01-31T15:14:43.000Z","title":"lodash","series":null}},{"id":"4cbc2671-a199-5e3a-8273-5389b0c32628","frontmatter":{"slug":"/morgan-helper/","date":"2016-02-01T08:29:51.000Z","title":"morgan-helper","series":null}},{"id":"bde7a81e-6bf9-5414-8dc0-b3bcb1c15c99","frontmatter":{"slug":"/sequelize-seed-시드-데이터-관리하기/","date":"2016-02-03T12:02:53.000Z","title":"Sequelize Seed - 시드 데이터 관리하기","series":null}},{"id":"e9fc5fd2-ebac-54a0-b4be-40d27cb898af","frontmatter":{"slug":"/2016/02/07/from-wordpress-to-jekyll.html","date":"2016-02-07T00:00:00.000Z","title":"워드프레스에서 지킬로 블로그 이동","series":null}},{"id":"642e39a6-9ccf-506e-b3fd-6faec6a34919","frontmatter":{"slug":"/2016/02/07/jekyll-customizing.html","date":"2016-02-07T00:00:00.000Z","title":"Jekyll 커스터마이징 1 - 코멘트와 페이지네이션","series":null}},{"id":"7d0cf408-23f4-5b63-bf00-63ed8679ecbe","frontmatter":{"slug":"/2016/02/20/beanstalk-in-seoul.html","date":"2016-02-20T00:00:00.000Z","title":"서울에서 Elastic Beanstalk 사용하기","series":null}},{"id":"723ccab6-053a-51cd-8b35-72304e03fa98","frontmatter":{"slug":"/2016/02/28/http-test-with-nock-mocha.html","date":"2016-02-28T00:00:00.000Z","title":"Nock, Mocha로 HTTP 테스트하기","series":null}},{"id":"319941cd-c67c-5251-a7d6-ab1e17b7128d","frontmatter":{"slug":"/2016/02/29/jekyll-tag.html","date":"2016-02-29T00:00:00.000Z","title":"Jekyll 커스터마이징 2 - 태그","series":null}},{"id":"7e09e63b-1ef3-5bba-b6dc-c8efabced06a","frontmatter":{"slug":"/2016/03/21/must-use-error-in-reject.html","date":"2016-03-21T00:00:00.000Z","title":"Promise.reject()에 에러 객체를 넘겨줘야하는 이유","series":null}},{"id":"bc0594c3-8fa9-5010-a3b3-e2a624612322","frontmatter":{"slug":"/2016/03/29/mobile-rest-api.html","date":"2016-03-29T00:00:00.000Z","title":"서버 개발자 입장에서 바라본 모바일 API 디자인","series":null}},{"id":"e8bf8dda-761f-58c4-8fbc-72f47a73cb57","frontmatter":{"slug":"/2016/04/28/es6.html","date":"2016-04-28T00:00:00.000Z","title":"ECMAScript2015(ES6)로 Node.JS 코딩하기","series":null}},{"id":"4081de2a-b70d-51d7-9105-ca2278cf580d","frontmatter":{"slug":"/2016/05/13/image-resizing-with-lambda.html","date":"2016-05-13T00:00:00.000Z","title":"람다를 이용해 이미지 리사이징 서버 만들기","series":null}},{"id":"0318a0f7-f12e-59b0-962e-c08eee1965fa","frontmatter":{"slug":"/2016/05/13/swagger-parser.html","date":"2016-05-13T00:00:00.000Z","title":"스웨거 문서 문법 체크하기","series":null}},{"id":"1e6cb093-9b25-5c34-985e-bc32ea7dff80","frontmatter":{"slug":"/2016/05/17/aws-submit-2016.html","date":"2016-05-17T00:00:00.000Z","title":"AWS Summit 2016 참관 후기","series":null}},{"id":"3162b917-cc79-5e0b-aa56-0b3d91820d68","frontmatter":{"slug":"/2016/06/29/querystring-body-in-express.html","date":"2016-06-29T00:00:00.000Z","title":"노드에서는 쿼리스트링 인코딩을 어떻게 처리할까?","series":null}},{"id":"f7239c4d-f432-5c20-8ef1-341b456ae634","frontmatter":{"slug":"/2016/07/13/sequelize-transaction.html","date":"2016-07-13T00:00:00.000Z","title":"Sequelize Transaction 사용할때 주의할 점","series":null}},{"id":"a996784f-a117-5c77-9b76-ba15550f7b9c","frontmatter":{"slug":"/2016/07/19/babel.html","date":"2016-07-19T00:00:00.000Z","title":"Babel로 ES6 코드 사용하기","series":null}},{"id":"8ebccd12-4aab-5e60-bfb0-344adeba4a5d","frontmatter":{"slug":"/2016/07/28/istanbul.html","date":"2016-07-28T00:00:00.000Z","title":"Istanbul로 코드 커버리지 측정하기","series":null}},{"id":"f3bee76b-0608-5f71-8469-2fc2d5a2f604","frontmatter":{"slug":"/2016/08/03/ionic-hello-world.html","date":"2016-08-03T00:00:00.000Z","title":"Ionic으로 Hello world 시작하기","series":null}},{"id":"704fb78f-90e8-5f5b-a1c3-70c05cf96875","frontmatter":{"slug":"/2016/08/10/nvm.html","date":"2016-08-10T00:00:00.000Z","title":"NVM으로 노드 버전 관리하기","series":null}},{"id":"0f98658a-c29b-55b2-a4fb-8fdda3dd2949","frontmatter":{"slug":"/2016/08/11/pyenv.html","date":"2016-08-11T00:00:00.000Z","title":"PYENV로 파이썬 버전 관리하기","series":null}},{"id":"3bd92667-0acd-5256-8c3d-095385473e20","frontmatter":{"slug":"/2016/08/16/git-alias.html","date":"2016-08-16T00:00:00.000Z","title":"Git Alias 사용법: 깃 단축키 설정하는 방법 ","series":null}},{"id":"42155ab7-0fd0-5b37-bdd6-0afc50aa5644","frontmatter":{"slug":"/2016/08/20/angular-facts-easy-to-miss.html","date":"2016-08-20T00:00:00.000Z","title":"앵귤러 개발자가 놓치기 쉬운 10가지 사실들","series":null}},{"id":"6888ced2-9814-5fd8-a2af-743eae0063d9","frontmatter":{"slug":"/2016/08/23/about-angular2-quickstart-libraries.html","date":"2016-08-23T00:00:00.000Z","title":"Angular2 Quickstart에서 사용하는 라이브러리는 왜 이렇게 많을까?","series":null}},{"id":"8834f8ac-9c71-5ac0-830c-5df558bdf2a1","frontmatter":{"slug":"/2016/09/03/jscon2016.html","date":"2016-09-03T00:00:00.000Z","title":"JSCON 2016 참관 후기","series":null}},{"id":"b40dc6fd-2c03-5597-aae2-b1bb4058e370","frontmatter":{"slug":"/2016/09/27/imac-kernel-panic.html","date":"2016-09-27T00:00:00.000Z","title":"아이맥, 커널 패닉에 빠지다","series":null}},{"id":"ac5889fd-3305-52ad-a397-02d1c0219576","frontmatter":{"slug":"/2016/10/13/how-to-make-yeoman-generator.html","date":"2016-10-13T00:00:00.000Z","title":"Yeoman 제너레이터 만들기","series":null}},{"id":"0bec7f49-d401-5629-a69e-729729b53701","frontmatter":{"slug":"/2016/11/29/flow.html","date":"2016-11-29T00:00:00.000Z","title":"WebStorm에 Flow 기능 사용 후기","series":null}},{"id":"773b50c1-a616-5d13-bfff-c110fe0a42dd","frontmatter":{"slug":"/2016/12/15/coroutine.html","date":"2016-12-15T00:00:00.000Z","title":"제너레이터와 프라미스를 이용한 비동기 처리","series":null}},{"id":"2dbfce45-5f3a-5401-9db7-c55fc0bc09f1","frontmatter":{"slug":"/etc/2017/01/02/review-2016.html","date":"2017-01-02T00:00:00.000Z","title":"2016년을 보내며","series":null}},{"id":"75f0f95a-a03c-5d46-b2f8-9b19055a2991","frontmatter":{"slug":"/toy_project/2017/01/09/reading-book.html","date":"2017-01-09T00:00:00.000Z","title":"토이프로젝트_독서노트","series":null}},{"id":"e45a663f-fd77-5757-9eeb-4f57680dae64","frontmatter":{"slug":"/toy_project/2017/01/16/facebook-analysis.html","date":"2017-01-16T00:00:00.000Z","title":"토이프로젝트_페이스북 분석기","series":null}},{"id":"6650bd9e-4c32-59a1-a732-2a940f8233a5","frontmatter":{"slug":"/etc/2017/01/16/so-you-want-to-be-a-functional-programmer-part-6.html","date":"2017-01-16T00:00:00.000Z","title":"함수형 프로그래머가 되고 싶다고? 파트6","series":null}},{"id":"0c1b5bfa-df96-5f93-a6f3-fe36d3083072","frontmatter":{"slug":"/toy_project/2017/01/17/life-tracker.html","date":"2017-01-17T00:00:00.000Z","title":"토이프로젝트_라이프트래커","series":null}},{"id":"1a5f3815-341a-561f-a82c-be88905e623b","frontmatter":{"slug":"/node/2017/01/27/node-io-deep.html","date":"2017-01-27T00:00:00.000Z","title":"노드 개발자가 IO 작업을 시작하면 무슨일이 일어날까?","series":null}},{"id":"410452d2-443b-5ad6-bc0d-a7ff585d81e7","frontmatter":{"slug":"/node/2017/02/06/utf8mb4-in-sequelize.html","date":"2017-02-06T00:00:00.000Z","title":"시퀄라이즈에서 이모티콘 저장하기","series":null}},{"id":"12514722-9745-52ba-8d1e-641604f71583","frontmatter":{"slug":"/js/2017/02/17/dependency-injection.html","date":"2017-02-17T00:00:00.000Z","title":"의존성 주입","series":null}},{"id":"4f59d816-e30d-5867-99f3-0988b5c1a64b","frontmatter":{"slug":"/aws/2017/03/06/apex.html","date":"2017-03-06T00:00:00.000Z","title":"Apex로 좀 더 편리한 람다 개발환경 만들기","series":null}},{"id":"ecd20b85-63c4-5eef-9e81-1af62adbb9a6","frontmatter":{"slug":"/vue/2017/03/27/vue.html","date":"2017-03-27T00:00:00.000Z","title":"Vue.js 살펴보기","series":null}},{"id":"fb8153bd-66bc-59ed-a78b-b83162513d54","frontmatter":{"slug":"/tool/2017/03/28/jasmine.html","date":"2017-03-28T00:00:00.000Z","title":"자스민으로 프론트엔드 테스트 코드 작성하기","series":null}},{"id":"5339e760-d690-5452-96ce-36b2ad3d6d96","frontmatter":{"slug":"/vue/2017/03/29/is-vue-better-than-angular-react.html","date":"2017-03-29T00:00:00.000Z","title":"과연 Vue.js가 앵귤러나 리엑트보다 좋을까?","series":null}},{"id":"bb66bde6-ba0b-5d84-8cef-53b2e51c7cd7","frontmatter":{"slug":"/vue/2017/04/19/vue-component-test.html","date":"2017-04-19T00:00:00.000Z","title":"Vue 글로벌 컴포넌트 테스트","series":null}},{"id":"8e6219d6-4699-5062-924f-da5477b9f830","frontmatter":{"slug":"/js/2017/05/15/webpack.html","date":"2017-05-15T00:00:00.000Z","title":"웹팩의 기본 개념","series":null}},{"id":"cddc9b77-1b56-54d4-bada-f242f980bb23","frontmatter":{"slug":"/js/2017/05/22/webpack-file-loader.html","date":"2017-05-22T00:00:00.000Z","title":"웹팩의 file-loader와 url-loader","series":null}},{"id":"d213f087-8a2a-523c-8151-890563a6ea55","frontmatter":{"slug":"/node/2017/07/03/node-stream-you-need-to-know.html","date":"2017-07-03T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 1편","series":null}},{"id":"d2f98e89-3c8c-5ef3-a184-1cf9797c9319","frontmatter":{"slug":"/node/2017/08/07/node-stream-you-need-to-know-2.html","date":"2017-08-07T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 2편","series":null}},{"id":"a2d872c2-a3f0-5bd9-812b-93707fc03bf3","frontmatter":{"slug":"/node/2017/08/12/node-stream-you-need-to-know-3.html","date":"2017-08-12T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 3편","series":null}},{"id":"e6850aa7-978f-59b9-94e3-2f722fd293b6","frontmatter":{"slug":"/node/2017/08/17/express-error-handling.html","date":"2017-08-17T00:00:00.000Z","title":"에러 처리를 위한 익스프레스 가이드","series":null}},{"id":"eb72a758-4c75-56e6-8780-db45f8f33ca2","frontmatter":{"slug":"/tool/2017/09/16/gulp-workflow-for-frentend-development.html","date":"2017-09-16T00:00:00.000Z","title":"프론트엔드 개발을 위한 Gulp","series":null}},{"id":"8dcc41ce-91b6-52ab-96c9-6de4bce4e329","frontmatter":{"slug":"/2017/10/22/js-context-binding.html","date":"2017-10-22T00:00:00.000Z","title":"자바스크립트 this 바인딩 우선순위","series":null}},{"id":"87c386f2-ab75-5f76-bbb2-362eef1d16b9","frontmatter":{"slug":"/2018/01/01/review-2017.html","date":"2018-01-01T00:00:00.000Z","title":"2017년을 보내며","series":null}},{"id":"935353e4-d13e-5735-a5fd-6a22c17619e7","frontmatter":{"slug":"/2018/01/25/before-jquery.html","date":"2018-01-25T00:00:00.000Z","title":"jQuery 보다 먼저 알았으면 좋았을 것들","series":null}},{"id":"48c2c5d9-ba19-59ba-ab46-d168dd4510aa","frontmatter":{"slug":"/2018/03/26/vue-authentication.html","date":"2018-03-26T00:00:00.000Z","title":"Vuex, Vue-router, Axios를 이용한 SPA 인증 구현","series":null}},{"id":"2cca2729-7225-5477-9880-a52f933d1427","frontmatter":{"slug":"/2018/04/07/vue-router.html","date":"2018-04-07T00:00:00.000Z","title":"Vue-Router 살펴보기","series":null}},{"id":"4371cfed-f0fb-55b5-8267-07f24c3eea95","frontmatter":{"slug":"/2018/05/12/extended-component.html","date":"2018-05-12T00:00:00.000Z","title":"UI 컴포넌트 확장","series":null}},{"id":"85acb33c-a874-5a2f-8679-406d73fb9fbb","frontmatter":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z","title":"VueJS 폼 검증","series":null}},{"id":"e22ea907-1513-5ae3-b89a-fd481c038cf7","frontmatter":{"slug":"/2018/07/16/react-app-overview.html","date":"2018-07-16T00:00:00.000Z","title":"React로 만든 프로젝트 톺아보기","series":null}},{"id":"cd1ef163-6caa-5731-8b3a-545c65b6376e","frontmatter":{"slug":"/2018/08/19/express-travis-beanstalk.html","date":"2018-08-19T00:00:00.000Z","title":"리액트, 노드 백엔드 통합 후 CI 연동하기","series":null}},{"id":"8a5b7a9e-ed91-5a09-b2c1-0e42ce05c44e","frontmatter":{"slug":"/2018/10/13/ant-design-101.html","date":"2018-10-13T00:00:00.000Z","title":"앤트 디자인 - 어드민 개발을 위한 프레임웍","series":null}},{"id":"8e525630-0796-55cf-80ee-2d3ad92c5364","frontmatter":{"slug":"/2018/10/21/aws-sns-to-slack.html","date":"2018-10-21T00:00:00.000Z","title":"AWS를 슬랙으로 모니터링","series":null}},{"id":"0690026f-ce4a-545d-8045-61cba2f980bf","frontmatter":{"slug":"/2018/11/08/remote-work.html","date":"2018-11-08T00:00:00.000Z","title":"비오는 날, 집에서 일하기 좋은 날씨다","series":null}},{"id":"5818931e-f714-58a1-9ead-e904f0bf25da","frontmatter":{"slug":"/series/2018/12/01/node-web-0_index.html","date":"2018-12-01T00:00:00.000Z","title":"🌳[Node.js 코드랩] 소개 및 목차","series":null}},{"id":"580cc3cb-24ce-5263-9599-3e84dda42efc","frontmatter":{"slug":"/think/2018/12/22/codelab-review.html","date":"2018-12-22T00:00:00.000Z","title":"코드랩 시리즈를 마치고 느낀점","series":null}},{"id":"277a7404-2fab-5c0b-883e-d1dbb3a4cc5d","frontmatter":{"slug":"/think/2019/01/03/record.html","date":"2019-01-03T00:00:00.000Z","title":"기록","series":null}},{"id":"4bdf0001-6204-50dc-94fe-06092437ebbf","frontmatter":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z","title":"Go fmt 패키지","series":null}},{"id":"94912c76-2fab-5d21-8e46-bbb59b2d0074","frontmatter":{"slug":"/dev/2019/01/14/go-time.html","date":"2019-01-14T00:00:00.000Z","title":"Go time 패키지","series":null}},{"id":"9b8c1d44-6687-51f3-be81-ea0514429352","frontmatter":{"slug":"/dev/2019/01/18/go-encoding-json.html","date":"2019-01-18T00:00:00.000Z","title":"Go encoding/json 패키지","series":null}},{"id":"5521c509-dfc2-579b-902c-a773f2000eef","frontmatter":{"slug":"/dev/2019/02/07/go-net-http.html","date":"2019-02-07T00:00:00.000Z","title":"Go net/http 패키지","series":null}},{"id":"21516c99-2bcd-57b0-879b-bd7cd2fbd67d","frontmatter":{"slug":"/dev/2019/02/18/go-todo-web-application.html","date":"2019-02-18T00:00:00.000Z","title":"Go로 투두 웹 어플리케이션 만들기","series":null}},{"id":"837d3db9-6f3a-5185-890c-0f05b73042ed","frontmatter":{"slug":"/think/2019/04/15/change-pain-concentration.html","date":"2019-04-15T00:00:00.000Z","title":"변화와 고통 그리고 집중","series":null}},{"id":"55900534-2875-5bf6-bd05-c5f2d3f910bf","frontmatter":{"slug":"/think/2019/04/26/running-machine-load.html","date":"2019-04-26T00:00:00.000Z","title":"러닝머신과 도로 위","series":null}},{"id":"ca6522c1-93ef-50e5-93bd-b6408f843a28","frontmatter":{"slug":"/dev/2019/06/25/react-ts.html","date":"2019-06-25T00:00:00.000Z","title":"리액트, 타입스크립트 시작하기","series":null}},{"id":"176e48a1-9298-5ddf-8b4d-181d8017ee8e","frontmatter":{"slug":"/dev/2019/07/08/react-router-ts.html","date":"2019-07-08T00:00:00.000Z","title":"리액트 라우터 사용하기 (타입스크립트 버전)","series":null}},{"id":"9943d20c-bf3b-58f9-bf6b-24a1886b50b3","frontmatter":{"slug":"/dev/2019/07/15/react-redux-ts.html","date":"2019-07-15T00:00:00.000Z","title":"리액트 리덕스 사용하기 (타입스크립트 버전)","series":null}},{"id":"0349bf75-4d9f-5426-b39b-0ab35635ee8a","frontmatter":{"slug":"/dev/2019/07/22/react-saga-ts-1.html","date":"2019-07-22T00:00:00.000Z","title":"리덕스 사가 사용하기 (타입스크립트 버전) - 1편","series":null}},{"id":"b6e9af46-50f0-58d8-8af5-7917ad7906fd","frontmatter":{"slug":"/dev/2019/07/29/react-saga-ts-2.html","date":"2019-07-29T00:00:00.000Z","title":"리덕스 사가 사용하기 (타입스크립트 버전) - 2편","series":null}},{"id":"2c87be56-61cd-5ed0-b7a5-60113703daa7","frontmatter":{"slug":"/dev/2019/08/12/ie-cache.html","date":"2019-08-12T00:00:00.000Z","title":"IE의 ajax 캐시 이슈를 처리하는 방법","series":null}},{"id":"3ed409de-9ac1-5b7b-9158-28d743bf0ec7","frontmatter":{"slug":"/dev/2020/01/28/component-design.html","date":"2020-01-28T00:00:00.000Z","title":"컴포넌트의 역할 분리","series":null}},{"id":"6899b5a1-ffdc-5ea6-98ff-0b565eb578e6","frontmatter":{"slug":"/dev/2020/02/10/git-usage.html","date":"2020-02-10T00:00:00.000Z","title":"깃(Git) 개념과 상황별 팁","series":null}},{"id":"20f8f59e-9e88-513f-ac1a-c8aeed90a2c1","frontmatter":{"slug":"/dev/2020/03/09/flex.html","date":"2020-03-09T00:00:00.000Z","title":"플렉스(flex) 박스, 한 번 정리하고 가자","series":null}},{"id":"83c6e25d-100f-52a2-88b0-43d75b9095b7","frontmatter":{"slug":"/dev/2020/03/20/role-based-react-router.html","date":"2020-03-20T00:00:00.000Z","title":"리액트 라우터를 활용한 권한별 라우팅 제어","series":null}},{"id":"f7abfd9f-3bd3-55d7-bb72-3e42112dfdc5","frontmatter":{"slug":"/dev/2020/03/24/circular-dependancy.html","date":"2020-03-24T00:00:00.000Z","title":"순환 참조","series":null}},{"id":"3d8daf46-1c8d-58e9-a1a5-57c202122b54","frontmatter":{"slug":"/think/2020/03/27/imac-ssd-replacement.html","date":"2020-03-27T00:00:00.000Z","title":"오래된 아이맥, SSD 교체하기","series":null}},{"id":"5a448022-ace4-5bae-87f6-0df73d069173","frontmatter":{"slug":"/think/2020/03/30/remote-work.html","date":"2020-03-30T00:00:00.000Z","title":"슬기로운 재택생활","series":null}},{"id":"ea09b8c4-e32b-5e7c-8e09-c93bed57d301","frontmatter":{"slug":"/dev/2020/04/05/vscode.html","date":"2020-04-05T00:00:00.000Z","title":"알아두면 쓸데있는 VSCode 노하우","series":null}},{"id":"ad9fb3e8-d63b-5b70-af95-fd940621e94c","frontmatter":{"slug":"/dev/2020/04/18/interface-to-class.html","date":"2020-04-18T00:00:00.000Z","title":"인터페이스만 사용하다가 클래스를 다시 보았다","series":null}},{"id":"3f5378c9-2ddc-5b54-be84-90bd751632c3","frontmatter":{"slug":"/dev/2020/04/30/nodemon-EADDRINUSE.html","date":"2020-04-30T00:00:00.000Z","title":"노드몬(nodemon) 사용시 포트 충돌 이슈","series":null}},{"id":"c1b3b309-10ce-5d25-878b-9a01ed3cb1bc","frontmatter":{"slug":"/think/2020/05/11/test.html","date":"2020-05-11T00:00:00.000Z","title":"테스트 코드는 꼭 필요한가요?","series":null}},{"id":"534220c3-2857-58b1-9b2c-6a8bf1d3a36a","frontmatter":{"slug":"/dev/2020/05/18/filename.html","date":"2020-05-18T00:00:00.000Z","title":"파일명 컨벤션과 웹팩/노드 오류","series":null}},{"id":"656879a1-eee2-53ca-95e4-0794df97590b","frontmatter":{"slug":"/dev/2020/05/25/supertest.html","date":"2020-05-25T00:00:00.000Z","title":"Node.js로 만든 API 테스트(supertest)","series":null}},{"id":"632aa41c-a331-5047-a68c-6da2ab581389","frontmatter":{"slug":"/dev/2020/06/08/html5-form-validation.html","date":"2020-06-08T00:00:00.000Z","title":"HTML5 폼 검증에 대해 정리해 보자","series":null}},{"id":"dd35b5d1-ad3e-5d96-80f8-a85946eebf69","frontmatter":{"slug":"/dev/2020/06/20/passport.html","date":"2020-06-20T00:00:00.000Z","title":"패스포트 동작 원리와 인증 구현","series":null}},{"id":"b2d85cb8-f54e-589c-b814-ed7e8437af5c","frontmatter":{"slug":"/dev/2020/06/27/node-sass.html","date":"2020-06-27T00:00:00.000Z","title":"node-sass가 노드 버전에 의존적이 이유","series":null}},{"id":"c889fc6f-56a9-534b-b2f3-94b06a877b2a","frontmatter":{"slug":"/dev/2020/07/06/sequelize-model.html","date":"2020-07-06T00:00:00.000Z","title":"시퀄라이즈 Model 클래스 활용하기","series":null}},{"id":"82c41162-4ef7-5b20-a49c-c9c478c460d0","frontmatter":{"slug":"/dev/2020/07/18/webpack-dev-middleware.html","date":"2020-07-18T00:00:00.000Z","title":"웹팩 개발 서버로 부족하다면 webpack-dev-middleware를 사용해 보자","series":null}},{"id":"0e71db45-5d9f-5718-8372-e243100a2e6d","frontmatter":{"slug":"/dev/2020/07/30/gatsby.html","date":"2020-07-30T00:00:00.000Z","title":"Gatsby.js 훑어보기","series":null}},{"id":"693b1262-8af5-5e29-8d65-fec5430c1f9b","frontmatter":{"slug":"/dev/2020/08/15/react-helmet.html","date":"2020-08-15T00:00:00.000Z","title":"react-helmet의 동작 방식","series":null}},{"id":"02c6d6f5-6aa9-542a-abf1-052f0c3608e5","frontmatter":{"slug":"/dev/2020/08/19/gatsby-image.html","date":"2020-08-19T00:00:00.000Z","title":"개츠비의 이미지 처리 방식","series":null}},{"id":"59d85bd3-e3ae-5b12-9567-31b78e528859","frontmatter":{"slug":"/dev/2020/08/21/gatsby-prefetch.html","date":"2020-08-21T00:00:00.000Z","title":"개츠비 프리로딩과 프리패치","series":null}},{"id":"39626eaf-f14f-50c1-bf71-7ae67adb0d6f","frontmatter":{"slug":"/dev/2020/10/10/mobx.html","date":"2020-10-10T00:00:00.000Z","title":"상태관리 라이브러리 mobx","series":null}},{"id":"d0b4849c-8ba0-56a0-a4be-0d82cd05b54f","frontmatter":{"slug":"/dev/2020/10/25/styled-components.html","date":"2020-10-25T00:00:00.000Z","title":"styled-component로 리액트 컴포넌트 만들기","series":null}},{"id":"456d8e21-8ed6-505b-8bf2-55ad2b17f510","frontmatter":{"slug":"/think/2020/11/01/work-density.html","date":"2020-11-01T00:00:00.000Z","title":"업무 밀도","series":null}},{"id":"2de409ac-ce78-59d2-868c-45d947385990","frontmatter":{"slug":"/dev/2020/11/08/serverless-1.html","date":"2020-11-08T00:00:00.000Z","title":"서버리스 웹 애플리케이션 만들기","series":null}},{"id":"134459b9-f622-5ca7-a45b-73097b6211d8","frontmatter":{"slug":"/think/2020/11/14/the-reason-i-write.html","date":"2020-11-14T00:00:00.000Z","title":"블로그에 글을 쓰는 이유","series":null}},{"id":"4ad362ec-e685-59c2-9497-8d70a97bf129","frontmatter":{"slug":"/think/2020/12/21/happy-now.html","date":"2020-12-21T00:00:00.000Z","title":"\"당장 야금야금 부지런히 행복해야 돼\"","series":null}},{"id":"ddaecacc-8200-5e59-8043-9529b5a37195","frontmatter":{"slug":"/think/2020/12/29/frontend-developer-roles.html","date":"2020-12-29T00:00:00.000Z","title":"프론트엔드 개발자의 역할","series":null}},{"id":"166fed98-28de-5153-ae3a-6c310d6461a8","frontmatter":{"slug":"/think/2021/01/07/sense-of-balence.html","date":"2021-01-07T00:00:00.000Z","title":"균형 감각","series":null}},{"id":"10620375-4a6e-5089-bed4-7435a172e48c","frontmatter":{"slug":"/think/2021/01/05/2020.html","date":"2021-01-15T00:00:00.000Z","title":"아, 전설적인 한 해였다","series":null}},{"id":"7fc047e8-8750-5888-aacf-adbf015068ae","frontmatter":{"slug":"/2021-01-scrap","date":"2021-01-31T00:00:00.000Z","title":"2021-01 스크랩","series":null}},{"id":"5a4bccdc-933b-5e42-bb60-fafb842b7b66","frontmatter":{"slug":"/2021-02-scrap","date":"2021-02-28T00:00:00.000Z","title":"2021-02 스크랩","series":null}},{"id":"2149b5c1-7ccc-5142-8d6c-a92eb7c569c7","frontmatter":{"slug":"/dev/2021/03/08/babel-typescript.html","date":"2021-03-08T00:00:00.000Z","title":"babel-loader와 ts-loader의 빌드 결과가 다른 현상","series":null}},{"id":"1f20f251-e4c7-5edc-a31e-d7122a4c7fa8","frontmatter":{"slug":"/dev/2021/03/18/type-guard.html","date":"2021-03-18T00:00:00.000Z","title":"유니온 타입과 타입 가드","series":null}},{"id":"0ef9667f-f763-5ec7-8ca8-4c609984a935","frontmatter":{"slug":"/dev/2021/03/22/i18n.html","date":"2021-03-22T00:00:00.000Z","title":"어플리케이션 다국어 기능과 번역가와 협업 방법","series":null}},{"id":"ea2ba8ce-227b-5413-b89f-13c8ef2f8565","frontmatter":{"slug":"/dev/2021/03/29/lambda-limits.html","date":"2021-03-29T00:00:00.000Z","title":"AWS 람다 용량 관리","series":null}},{"id":"8e962eb8-5a56-55df-bc83-b749f77472f9","frontmatter":{"slug":"/2021-03-scrap","date":"2021-03-31T00:00:00.000Z","title":"2021-03 스크랩","series":null}},{"id":"4edcc266-5c9f-5713-8b44-0126626c4113","frontmatter":{"slug":"/dev/2021/04/01/aws-lambda-cold-start.html","date":"2021-04-01T00:00:00.000Z","title":"AWS 람다 초기 응답 속도 개선하기","series":null}},{"id":"ecea53d9-4795-513e-bec1-c1667d0c2d7e","frontmatter":{"slug":"/think/2021/04/29/my-first-capacitive-keyboard.html","date":"2021-04-29T00:00:00.000Z","title":"나의 첫 무접점 키보드 ","series":null}},{"id":"8a47a6f8-1b10-5c60-85b9-b5e12bae112b","frontmatter":{"slug":"/2021-04-scrap","date":"2021-04-30T00:00:00.000Z","title":"2021-04 스크랩","series":null}},{"id":"d11e1fd8-40fd-5c03-9539-9146e5d16614","frontmatter":{"slug":"/dev/2021/05/05/react-context.html","date":"2021-05-05T00:00:00.000Z","title":"리액트 컨텍스트","series":null}},{"id":"0b15f43f-48f8-557c-8c00-7e1d72bd90d3","frontmatter":{"slug":"/dev/2021/05/17/css-variable.html","date":"2021-05-17T00:00:00.000Z","title":"CSS 변수와 웹사이트 테마","series":null}},{"id":"5d98f829-205a-5c05-9444-9541c8fd62ba","frontmatter":{"slug":"/2021-06-scrap","date":"2021-06-30T00:00:00.000Z","title":"2021-06 스크랩","series":null}},{"id":"54abed62-aab5-552b-8302-a8b81f763c22","frontmatter":{"slug":"/think/2021/07/19/design-system-and-streaming.html","date":"2021-07-19T00:00:00.000Z","title":"디자인시스템과 라이브 방송","series":null}},{"id":"3f48d674-8ee3-5386-b590-46fa6efd0a7c","frontmatter":{"slug":"/2021-07-scrap","date":"2021-07-31T00:00:00.000Z","title":"2021-07 스크랩","series":null}},{"id":"d9472afd-0b7b-5080-aa35-0b184126e5d6","frontmatter":{"slug":"/dev/2021/08/09/testing-frontend.html","date":"2021-08-09T00:00:00.000Z","title":"프론트엔드 테스트할 기회가 생겼다","series":null}},{"id":"4633cfe8-175a-5d74-a012-0f803d4b297a","frontmatter":{"slug":"/think/2021/08/23/customizing-keyboard.html","date":"2021-08-23T00:00:00.000Z","title":"한성 키보드를 매직 키보드와 유사하게 사용하기","series":null}},{"id":"fd40ed5a-e5cb-5c37-a29f-44cf8f87a75f","frontmatter":{"slug":"/dev/2021/08/26/utterances.html","date":"2021-08-26T00:00:00.000Z","title":"블로그 댓글 서비스 교체: Utterances","series":null}},{"id":"d9bba45e-e456-5f8c-95ff-f2baac54b928","frontmatter":{"slug":"/dev/2021/08/31/disqus-to-utterances.html","date":"2021-08-31T00:00:00.000Z","title":"블로그 댓글 서비스 교체: Disqus → Utterances 데이터 이관 ","series":null}},{"id":"1abaca12-c481-5f90-8fe6-6f244219f7d5","frontmatter":{"slug":"/2021-08-scrap","date":"2021-08-31T00:00:00.000Z","title":"2021-08 스크랩","series":null}},{"id":"6d27d373-658c-531a-a6d7-f3eaa57a8d34","frontmatter":{"slug":"/2021-09-scrap","date":"2021-09-30T00:00:00.000Z","title":"2021-09 스크랩","series":null}},{"id":"550b86da-b14b-5788-860d-55eb5571b573","frontmatter":{"slug":"/dev/2021/10/29/return-to-intellij.html","date":"2021-10-29T00:00:00.000Z","title":"최근에 발견한 인텔리제이 기능과 플러그인","series":null}},{"id":"ef82afec-02a5-54b4-b685-bd126d49c0bd","frontmatter":{"slug":"/2021-10-scrap","date":"2021-10-31T00:00:00.000Z","title":"2021-10 스크랩","series":null}},{"id":"58f4c3e0-94e2-50a2-9639-30d8bfd2e5e4","frontmatter":{"slug":"/2021-11-scrap","date":"2021-11-30T00:00:00.000Z","title":"2021-11 스크랩","series":null}},{"id":"99ab0c76-e135-5d08-b4cf-93ebbfdb0ea4","frontmatter":{"slug":"/2022-01-scrap","date":"2022-01-31T00:00:00.000Z","title":"2022-01 스크랩","series":null}},{"id":"79e6619c-f092-51a4-8fb8-3613ce2f387f","frontmatter":{"slug":"/2022/02/28/scrap","date":"2022-02-28T00:00:00.000Z","title":"2022-02 스크랩","series":null}},{"id":"bb07b900-a4c1-5353-adf5-68e0283d98c5","frontmatter":{"slug":"/dev/2022/03/29/react-form-and-formik.html","date":"2022-03-29T00:00:00.000Z","title":"리액트로 폼(Form) 다루기","series":null}},{"id":"8c7b8967-edc3-57ce-b628-4aff16282c66","frontmatter":{"slug":"/2022/03/31/scrap","date":"2022-03-31T00:00:00.000Z","title":"2022-03 스크랩","series":null}},{"id":"544f02d3-db8a-520c-a64b-6c0b1e78a497","frontmatter":{"slug":"/dev/2022/04/11/use-state.html","date":"2022-04-11T00:00:00.000Z","title":"리액트 useState는 어떤 모습일까?","series":null}},{"id":"5d26b369-3206-5f25-8870-85422dee72fb","frontmatter":{"slug":"/dev/2022/04/24/use-effect.html","date":"2022-04-24T00:00:00.000Z","title":"리액트 useEffect는 어떤 모습일까?","series":null}},{"id":"7212958f-d96b-59bc-ad7d-5493b072e428","frontmatter":{"slug":"/dev/2022/04/28/use-context.html","date":"2022-04-28T00:00:00.000Z","title":"리액트 useContext는 어떤 모습일까?","series":null}},{"id":"d83941f0-732c-5ac0-8479-17b486eddfb7","frontmatter":{"slug":"/2022/04/30/scrap","date":"2022-04-30T00:00:00.000Z","title":"2022-04 스크랩","series":null}},{"id":"96e1501f-f49c-5217-8113-a463a9841296","frontmatter":{"slug":"/dev/2022/05/06/react-router.html","date":"2022-05-06T00:00:00.000Z","title":"리액트 라우터 만들기 ","series":null}},{"id":"97cd57e7-1084-5fe8-a91b-d3e461985de2","frontmatter":{"slug":"/2022/05/20/react-strict-mode","date":"2022-05-20T00:00:00.000Z","title":"리액트 StrictMode","series":null}},{"id":"6e3e7096-99b4-5641-a1f9-cf3e3d847a87","frontmatter":{"slug":"/2022/05/28/react-high-order-component","date":"2022-05-28T00:00:00.000Z","title":"리액트 고차 컴포넌트(HOC)","series":null}},{"id":"b9beaef4-1e38-5675-8f60-25681e44ae98","frontmatter":{"slug":"/2022/05/31/scrap","date":"2022-05-31T00:00:00.000Z","title":"2022-05 스크랩","series":null}},{"id":"89b5d453-6e73-578b-a205-cb4935564c40","frontmatter":{"slug":"/2022/05/31/react-ref","date":"2022-05-31T00:00:00.000Z","title":"리액트 Ref","series":null}},{"id":"5ce963a6-e165-5bd6-9b4a-801f00ba0d1d","frontmatter":{"slug":"/2022/06/02/react-portal","date":"2022-06-02T00:00:00.000Z","title":"리액트 Portal","series":null}},{"id":"5a07f1d6-0228-58d5-89f1-a29379d01bbf","frontmatter":{"slug":"/2022/06/30/scrap","date":"2022-06-30T00:00:00.000Z","title":"2022-06 스크랩","series":null}},{"id":"2ff5bfa7-71cc-5d57-a756-5e6912bb3a55","frontmatter":{"slug":"/2022/07/31/npm-workspace","date":"2022-07-31T00:00:00.000Z","title":"NPM 워크스페이스와 모노레포","series":null}},{"id":"fa0162b2-ae4f-58e3-86a7-77190fba5b4a","frontmatter":{"slug":"/2022/08/06/special-parental-leave","date":"2022-08-06T00:00:00.000Z","title":"특별육아휴직","series":null}},{"id":"3e1ba728-3f49-5f1b-b135-99da640416d2","frontmatter":{"slug":"/2022/08/21/webpack-output-clean","date":"2022-08-21T00:00:00.000Z","title":"웹팩 빌드시 이전 결과물을 삭제하는 옵션","series":null}},{"id":"796dd4cd-949e-5dbf-98e7-890e1ed40da7","frontmatter":{"slug":"/2022/09/19/how-to-send-messages","date":"2022-09-19T00:00:00.000Z","title":"객체 간에 메세지를 전달하는 다양한 방법","series":null}},{"id":"1c6bdfb0-bc1f-55af-b695-fa4a852c1b60","frontmatter":{"slug":"/2022/10/12/redux","date":"2022-10-12T00:00:00.000Z","title":"리덕스","series":null}},{"id":"13f1d336-cb93-592e-9c3f-36128360054c","frontmatter":{"slug":"/2022/10/31/stomp","date":"2022-10-31T00:00:00.000Z","title":"스톰프(Stomp)","series":null}},{"id":"0888b240-de8d-54a0-a726-daacafec6c3a","frontmatter":{"slug":"/dev/2023/02/16/use-reducer.html","date":"2023-02-16T00:00:00.000Z","title":"리액트 useReducer는 어떤 모습일까?","series":null}}]}},"pageContext":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z","series":null,"videoId":null,"previous":{"frontmatter":{"slug":"/2018/05/12/extended-component.html","date":"2018-05-12T00:00:00.000Z","title":"UI 컴포넌트 확장","category":"개발","series":null,"videoId":null}},"next":{"frontmatter":{"slug":"/2018/07/16/react-app-overview.html","date":"2018-07-16T00:00:00.000Z","title":"React로 만든 프로젝트 톺아보기","category":"개발","series":null,"videoId":null}}}},"staticQueryHashes":["2263867198"]}