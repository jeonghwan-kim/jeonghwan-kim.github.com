{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/lectures/todomvc-angular/2/","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io","series":[{"id":20200102,"title":"프론트엔드 개발환경의 이해"},{"id":20181201,"title":"Node.js 코드랩"},{"id":20171002,"title":"Express.js 만들기"},{"id":20170422,"title":"함수형 프로그래밍"},{"id":20150222,"title":"Hapi.js로 API 서버 시작하기"},{"id":20160611,"title":"앵귤러로 Todo앱 만들기"}],"videos":[{"id":1,"url":"https://www.inflearn.com/course/프론트엔드-개발환경","thumb":"https://cdn.inflearn.com/public/courses/324671/course_cover/638eee1a-6381-402d-a17b-3724751414f1/frontend-env-eng.png","title":"프론트엔드 개발환경의 이해와 실습"},{"id":2,"url":"https://www.inflearn.com/course/vuejs","thumb":"https://cdn.inflearn.com/wp-content/uploads/kjh_Vuejs-3.jpg","title":"트렐로 개발로 배우는 Vuejs, Vuex, Vue-Router 프론트엔드 실전 기술"},{"id":3,"url":"https://www.inflearn.com/course/순수js-vuejs-개발-강좌","thumb":"https://cdn.inflearn.com/wp-content/uploads/vuejsandpure.png","title":"실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발"},{"id":4,"url":"https://www.inflearn.com/course/테스트주도개발-tdd-nodejs-api","thumb":"https://cdn.inflearn.com/wp-content/uploads/nodetdd.png","title":"테스트주도개발(TDD)로 만드는 NodeJS API 서버"},{"id":5,"url":"https://www.inflearn.com/course/tdd-견고한-소프트웨어-만들기","thumb":"https://cdn.inflearn.com/wp-content/uploads/software-1.jpg","title":"견고한 JS 소프트웨어 만들기"},{"id":6,"url":"https://www.youtube.com/watch?v=_QCNqV_EfzE","thumb":"/assets/imgs/youtube_20200407.jpg","title":"알아두면 쓸데있는 VSCode 노하우"}]}},"markdownRemark":{"id":"9ff817f5-60d7-5fab-a2fb-43b956ee2251","excerpt":"index.html 기본 html 파일부터 작성해 보자. index.html…","html":"<h2 id=\"indexhtml\" style=\"position:relative;\"><a href=\"#indexhtml\" aria-label=\"indexhtml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.html</h2>\n<p>기본 html 파일부터 작성해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> index.html</code></pre></div>\n<p>index.html:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1, user-scalable=yes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Angular | TodoMVC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>모바일에서 잘보이도록 하기위해 뷰포트를 설정하고 타이틀만 있는 간단한 문서다.\n브라우져로 열어보면 브라우저 탭에 타이트만 출력된다.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result1.png\"></p>\n<p>우리는 이 파일에 앵귤러 라이브러리를 로딩할 것이다.\n그런데 앵귤러를 로딩한다는 것은 뭘까?\n제이쿼리 스크립트를 html 페이지에서 <code class=\"language-text\">&lt;script&gt;</code> 태그로 삽입하듯이 앵귤러도 마찬가지다.\n그럼 앵귤러는 어디서 다운받아야할까?\n물론 제이쿼리처럼 CDN을 제공하기는 하나 우리는 NPM을 통해 직접 프로젝트 폴더에 다운받아 볼 셈이다.</p>\n<h2 id=\"앵귤러-설치\" style=\"position:relative;\"><a href=\"#%EC%95%B5%EA%B7%A4%EB%9F%AC-%EC%84%A4%EC%B9%98\" aria-label=\"앵귤러 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앵귤러 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> angular --save</code></pre></div>\n<p>npm 명령어를 이렇게 사용하면</p>\n<ol>\n<li>앵귤러 라이브러리가 node_modules 폴더 아래에 다운로드 되고,</li>\n<li>package.json 파일에 관련 정보가 추가된다. (--save 옵션 때문)\n1에서 다운받은 앵귤러는 index.html에 추가하면 될것인데 package.json 파일에 추가한 이유는 뭘까?</li>\n</ol>\n<p>만약 이 프로젝트 소스를 다른 개발자와 함께 개발한다고 가정해 보자.\n보통 소스코드에는 추가한 라이브러리 코드는 넣지 않는다.\n인터넷 어딘가에 라이브러리 코드를 저장한 저장소가 있기 때문에 굳이 내 저장소 용량을 늘릴 필요가 없기 때문이다.\n그리고 두번째 이유는 최신버전 라이브러리(버그가 수정된)를 사용할 수 있기 때문이다.</p>\n<p>내 코드를 클론한 다른 개발자는 프로젝트에서 사용한 외부 라이브러리 설치를 해야하는데 이때 package.json 파일이 그 정보를 제공한다.\n다른 개발자는 npm 명령어 한 줄로 해당 프로젝트에서 사용한 외부 모듈을 한 번에 설치할 수 있다.\n그것도 버그가 수정된 최신 버전의 소스로 말이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<h2 id=\"앵귤러-로딩\" style=\"position:relative;\"><a href=\"#%EC%95%B5%EA%B7%A4%EB%9F%AC-%EB%A1%9C%EB%94%A9\" aria-label=\"앵귤러 로딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>앵귤러 로딩</h2>\n<p>다운받은 앵귤러 라이브러리는 html 파일에서 로딩한다.</p>\n<p>index.html:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- ng-app으로 todomvc 앵귤러 모듈 사용을 브라우저에게 알린다 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">ng-app</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>todomvc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- 앵귤러 로딩 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>node_modules/angular/angular.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>js/app.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>앵귤러는 라이브러리를 로딩한뒤 <code class=\"language-text\">ng-app</code> 디렉티브를 설정함으로써 앵귤러 사용을 브라우져에게 알린다.\n우리가 사용할 앵귤러 모듈은 \"todomvc\" 모듈이다.\n그럼 이 모듈은 어디에 정의 되어 있고 누가 정의할까?\n바로 우리가 만들 js/app.js에 정의 되어 있다.</p>\n<p>js/app.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todoapp'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>브라우져에서 index.html 파일을 띄우면 angular.js와 app.js 파일이 함께 다운로드되는 것을 확인할 수 있다.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result2.png\"></p>","fields":{"date":"2016년 06월 12일","slug":"/lectures/todomvc-angular/2/","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","tags":["angularjs","lecture"],"seriesId":20160611,"videoId":null},"tableOfContents":"<ul>\n<li><a href=\"#indexhtml\">index.html</a></li>\n<li><a href=\"#%EC%95%B5%EA%B7%A4%EB%9F%AC-%EC%84%A4%EC%B9%98\">앵귤러 설치</a></li>\n<li><a href=\"#%EC%95%B5%EA%B7%A4%EB%9F%AC-%EB%A1%9C%EB%94%A9\">앵귤러 로딩</a></li>\n</ul>"},"allMarkdownRemark":{"edges":[{"node":{"id":"7d5eb1b8-b89b-5a0a-a927-b054e8055119","fields":{"slug":"/lectures/todomvc-angular/1/","date":"2016-06-12T09:00:01.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 1 - 노드설치","seriesId":20160611}}},{"node":{"id":"9ff817f5-60d7-5fab-a2fb-43b956ee2251","fields":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","seriesId":20160611}}},{"node":{"id":"ef52a605-538c-51ad-9b6a-0c3a8f089b45","fields":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","seriesId":20160611}}},{"node":{"id":"86483623-5b6e-5abd-a1fb-8df6ad678a6b","fields":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","seriesId":20160611}}},{"node":{"id":"446e4236-46de-544f-851d-811a1539a334","fields":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","seriesId":20160611}}},{"node":{"id":"479eff91-41cb-57e5-8c5b-bd827017db38","fields":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","seriesId":20160611}}},{"node":{"id":"37cb71da-f8ac-5618-9959-1d402617732a","fields":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","seriesId":20160611}}},{"node":{"id":"182c795e-5000-5400-9d4c-69e3c49bd053","fields":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 8 - Directive","seriesId":20160611}}},{"node":{"id":"abb95b4f-3d86-5de0-bd8a-09cd6f6c3bd0","fields":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 9 - Service","seriesId":20160611}}},{"node":{"id":"1daf2b69-46f7-57e5-a009-4f15419d1b0c","fields":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","seriesId":20160611}}},{"node":{"id":"5815f44a-44ac-57ec-857d-417f0aab901e","fields":{"slug":"/lectures/todomvc-angular/11/","date":"2016-06-14T09:00:11.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 11 - Static Files","seriesId":20160611}}},{"node":{"id":"4a8f6634-d62d-5420-88d8-be93a5d66df2","fields":{"slug":"/lectures/todomvc-angular/12/","date":"2016-06-14T09:00:12.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 12 - APIs","seriesId":20160611}}},{"node":{"id":"0daa7082-4d43-531c-bc4b-96b05477b5e5","fields":{"slug":"/lectures/todomvc-angular/13/","date":"2016-06-16T09:00:13.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 13 - $http로 앵귤러 서비스 개선하기","seriesId":20160611}}}]}},"pageContext":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z","seriesId":20160611,"previous":{"fields":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","category":"series","permalink":"/lectures/todomvc-angular/6/","seriesId":20160611}},"next":{"fields":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","category":"series","permalink":"/lectures/todomvc-angular/3/","seriesId":20160611}}}}}