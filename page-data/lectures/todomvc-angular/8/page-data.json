{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/lectures/todomvc-angular/8/","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"ee82ec1d-fc51-5103-9e1f-66fee0004c7d","html":"<p>이전 포스트까지 해서 프론트에서 사용할 기능은 대부분 완성했다.\n그러고 보니 파일이 좀 길어진것 같다.\n앵귤러의 많은 기능 중 템플릿과 컨트롤러만 사용했기 때문에 그렇다.\n앵귤러의 장점 중 하나는 모듈화다.\n모놀리틱한 구조를 더 작은 단위로 모듈화시켜서 설계할 수 있는데 앵귤러는 그러한 구조를 만들 수 있는 기능을 제공한다.\n우리가 사용할 기능은 디렉티브(<a href=\"https://docs.angularjs.org/guide/directive\">Directive</a>)와 서비스(<a href=\"https://docs.angularjs.org/guide/services\">Service</a>)이다.</p>\n<p>간단하게 디렉티브는 템플릿 구조를 모듈화하는 기능이라고 보면된다.\n서비스는 자바스크립트 코드를 모듈화하는 것이라고 보면 된다.</p>\n<p>이번 포스트에서는 index.html 파일을 모듈화하여 디렉티브로 분리해 내는 방법에 대해 알아보겠다.\n그리고 다음 포스트는 서비스를 이용하여 콘트롤러를 분리하는 방법을 진행할 것이다.</p>\n<h2 id=\"투두-템플릿을-디렉티브로-분리\" style=\"position:relative;\"><a href=\"#%ED%88%AC%EB%91%90-%ED%85%9C%ED%94%8C%EB%A6%BF%EC%9D%84-%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C%EB%A1%9C-%EB%B6%84%EB%A6%AC\" aria-label=\"투두 템플릿을 디렉티브로 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>투두 템플릿을 디렉티브로 분리</h2>\n<p><code>ngRepeat</code>으로 투두 목록을 출력하는 코드를 <code>&#x3C;todo-item></code>으로 바꿔보자.</p>\n<p>index.html:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">ng-repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo in todos | filter:statusFilter<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list-unstyled<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- 1. 이 부분이 하나의 todo 를 출력하는 부분이다. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input-group<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input-group-addon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo.completed<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-control<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo.title<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input-group-btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-danger<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remove(todo.id)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          Remove\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">&lt;!-- 2. 위 코드를 아래 한 줄로 바꿔보자!!! --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-item</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-item</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>1번 코드를 주석 처리하고 2번 에서 사용한 <code>&#x3C;todo-item></code> 디렉티브를 만들겠다.\n먼저 js/directives/todoItem.js 파일을 만들어 아래 코드를 작성해 보자.</p>\n<p>js/directives/todoItem.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todoItem\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">restrict</span><span class=\"token operator\">:</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>todoItem&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>TodomvcCtrl</code> 컨트롤러를 만든것과 비슷한 방법으로 디렉티브를 만들 수 있다.\n<code>angular.module()</code>은 <code>controller()</code> 함수 뿐만이 아니라 <code>directive()</code> 함수를 제공하는데 이것을 이용해 <code>todoItem</code> 디렉티브를 만들어보자.\n정의는 <code>todoItem</code>으로 했지만 실제 사용할 때는 <code>&#x3C;todo-item></code> 으로 사용할 수 있다.\n<code>restrict: E</code>일 경우 엘레먼트로 바로 정의할 수 있다는 의미이다.\n<code>template</code> 문자열이 실제로 html로 변경할 부분이다.\n여기서는 간단히 \"todoItem\" 문자열만 출력했다.\n결과를 보면 정말 단순히 문자열만 보일 것이다.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result11.png\" alt=\"\"></p>\n<p>그럼 컨트롤러의 스코프 변수에 할당되어 있는 todo 데이터를 어떻게 디렉티브에서 사용할 수 있을까?\n디렉티브에도 스코프 변수가 있는데 이것을 사용하면된다.\n<code>컨트롤러 스코프변수 -> 템플릿 -> 디렉티브 스코프변수 -> 디렉티브 템플릿</code>\n이런 순서로 데이터가 흘러가는 것이다.</p>\n<p>디렉티브를 이렇게 사용해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-item</span> <span class=\"token attr-name\">todo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remove(todo.id)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-item</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>디렉티브에 todo와 remove 함수를 넘겨줬다.\n이것을 디렉티브에서는 자체 스코프 변수에 연결하여 사용할 수 있다.\n다시 디렉티브 코드를 보자</p>\n<p>js/directives/todoItem.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todoItem\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">restrict</span><span class=\"token operator\">:</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">scope</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 디렉티브 스코프 설정</span>\n      <span class=\"token literal-property property\">todo</span><span class=\"token operator\">:</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 양방향 바인딩</span>\n      <span class=\"token literal-property property\">remove</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 참고 바인딩. 함수 설정시 사용함</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">template</span><span class=\"token operator\">:</span>\n      <span class=\"token string\">'&lt;div class=\"input-group\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;span class=\"input-group-addon\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;input type=\"checkbox\" aria-label=\"...\" ng-model=\"todo.completed\" ng-click=\"update(todo)\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">\"&lt;/span>\"</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;input type=\"text\" class=\"form-control\" aria-label=\"...\"'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'ng-model=\"todo.title\" ng-blur=\"update(todo)\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;div class=\"input-group-btn\">'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">'&lt;button class=\"btn btn-danger\" ng-click=\"remove(todo)\">Remove&lt;/button>'</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">\"&lt;/div>\"</span> <span class=\"token operator\">+</span>\n      <span class=\"token string\">\"&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>디렉티브를 정의할때 <code>scope</code> 객체에 사용할 스코프 변수를 설정할 수 있다.\n<code>todo</code>는 데이터인데 출력 뿐만아니라 수정도 해야하기 때문에 양방향 바인딩 <code>'='</code>을 사용했다.\n<code>remove</code>는 이벤트 핸들러 함수이므로 참고용 <code>'&#x26;'</code>으로 사용했다.</p>\n<p><code>todo-item</code> 디렉티브를 사용하면 인덱스 파일을 훨씬 간단하게 만들 수 있다.\n8줄 코드가 1줄로 줄었다.</p>\n<p>index.html:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">ng-repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo in todos | filter:statusFilter<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list-unstyled<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>todo-item</span> <span class=\"token attr-name\">todo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>todo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">remove</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>remove(todo.id)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>todo-item</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result12.png\" alt=\"\"></p>\n<p>다른 것도 디렉티브로 모듈로 분리해보자.</p>","frontmatter":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","title":"앵귤러로 Todo앱 만들기 8 - Directive","tags":["angularjs","lecture"],"series":"앵귤러로 Todo앱 만들기","videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%ED%88%AC%EB%91%90-%ED%85%9C%ED%94%8C%EB%A6%BF%EC%9D%84-%EB%94%94%EB%A0%89%ED%8B%B0%EB%B8%8C%EB%A1%9C-%EB%B6%84%EB%A6%AC\">투두 템플릿을 디렉티브로 분리</a></li>\n</ul>","excerpt":"…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"d3e97582-39e9-520d-9e14-8fe110738b9f","frontmatter":{"slug":"/lectures/todomvc-angular/1/","date":"2016-06-12T09:00:01.000Z","title":"앵귤러로 Todo앱 만들기 1 - 노드설치","series":"앵귤러로 Todo앱 만들기"}},{"id":"13b3c935-d2ac-5800-8db6-d29d58ac37d8","frontmatter":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z","title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","series":"앵귤러로 Todo앱 만들기"}},{"id":"d6728453-94a6-50ee-9fb0-99fe1f85616a","frontmatter":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z","title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","series":"앵귤러로 Todo앱 만들기"}},{"id":"1879494f-0b85-54a7-a3b4-d6ac68d0f943","frontmatter":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z","title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"dfaa4414-ccb5-50a4-8a26-47db7d20844b","frontmatter":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"a159eb4f-df5f-5134-acf6-4546d1b4920f","frontmatter":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","series":"앵귤러로 Todo앱 만들기"}},{"id":"245789b6-16ac-5f89-af0f-aee6eb310bb4","frontmatter":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z","title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","series":"앵귤러로 Todo앱 만들기"}},{"id":"ee82ec1d-fc51-5103-9e1f-66fee0004c7d","frontmatter":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","title":"앵귤러로 Todo앱 만들기 8 - Directive","series":"앵귤러로 Todo앱 만들기"}},{"id":"8ecd73d7-ffd0-5b6a-803e-6cef1c2152bf","frontmatter":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","title":"앵귤러로 Todo앱 만들기 9 - Service","series":"앵귤러로 Todo앱 만들기"}},{"id":"c974eacb-5b7e-5c7f-a809-0ef22bb91480","frontmatter":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z","title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","series":"앵귤러로 Todo앱 만들기"}},{"id":"b98d154a-e979-5c5d-9432-8c91b153b5b5","frontmatter":{"slug":"/lectures/todomvc-angular/11/","date":"2016-06-14T09:00:11.000Z","title":"앵귤러로 Todo앱 만들기 11 - Static Files","series":"앵귤러로 Todo앱 만들기"}},{"id":"8f213432-2aaa-5045-b49e-92c23beb5ab3","frontmatter":{"slug":"/lectures/todomvc-angular/12/","date":"2016-06-14T09:00:12.000Z","title":"앵귤러로 Todo앱 만들기 12 - APIs","series":"앵귤러로 Todo앱 만들기"}},{"id":"b82ad82d-719a-5521-853a-993c5cfca0c4","frontmatter":{"slug":"/lectures/todomvc-angular/13/","date":"2016-06-16T09:00:13.000Z","title":"앵귤러로 Todo앱 만들기 13 - $http로 앵귤러 서비스 개선하기","series":"앵귤러로 Todo앱 만들기"}}]}},"pageContext":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","series":"앵귤러로 Todo앱 만들기","videoId":null,"previous":{"frontmatter":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z","title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}},"next":{"frontmatter":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","title":"앵귤러로 Todo앱 만들기 9 - Service","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}}}},"staticQueryHashes":["2263867198"]}