{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/lectures/todomvc-angular/9/","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"8ecd73d7-ffd0-5b6a-803e-6cef1c2152bf","html":"<p>다른 것도 디렉티브로 만들어 봤는지 모르겠다.\n웬만하면 직접 해보는 것이 유익하다.</p>\n<p>이번에는 컨트롤러를 쪼개 보자.\n컨트롤러 스코프 변수에는 <code>todos</code> 변수가 있는데 이것은 투두 목록을 담고 있는 것이다.\n그리고 <code>remove()</code>, <code>add()</code> 같은 것들은 투두 목록을 삭제하거나 사용자가 입력한 데이터를 투두 목록에 추가할수 있다.\n자세히 보면 컨트롤러에는 두 종류의 기능이 섞여있다.</p>\n<ol>\n<li>사용자 이벤트를 감지하고 템플릿에 데이터를 보내주는 역할, 즉 <strong>템플릿과 직접 연결되는 부분</strong></li>\n<li>그리고 todos 배열에서 투두를 제거하거나 추가하는 역할, 즉 <strong>데이터를 핸들링 하는 부분</strong></li>\n</ol>\n<p>우리는 1번 로직은 컨트롤러에 남겨두고 2번 로직을 <strong>서비스</strong> 라는 개념으로 분리할 것이다.</p>\n<h2 id=\"컨트롤러에서-서비스를-분리하자\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%97%90%EC%84%9C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EC%9E%90\" aria-label=\"컨트롤러에서 서비스를 분리하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨트롤러에서 서비스를 분리하자</h2>\n<p>앵귤러는 서비스라는 개념이 있는데 데이터 저장소, 그러니깐 여기서는 <code>todoStorage</code>를 만들때 사용할 수 있다.\n우리는 <code>angular.factory()</code> 함수를 이용해 서비스를 만들 것이다.\n사실 이 외에도 서비스를 만들 수 있는 함수는 세 가지나 더 있지만 사용할 때마다 헷갈린다.\n팩토리만 사용해도 웬만한 기능은 구현할 수 있다.</p>\n<p>js/services/todoStorage.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todomvc'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todomvcStorage'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">todos</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'요가 수행하기'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'어머니 용돈 드리기'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token keyword\">return</span> storage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>factory()</code> 함수로 <code>todomvcStorage</code>라는 앵귤러 서비스를 정의했다.\n서비스는 싱글톤이라 <code>todomvc</code> 모듈 내에서는 하나의 객체만 생성된다.\n<code>todos</code>가 실제로 데이터베이스 역할을 하고 데이터 접근은 <code>get()</code> 함수를 통해 이뤄진다.\n그럼 이 서비스를 사용할 컨트롤러 코드를 살펴보자.</p>\n<p>js/controllers/TodomvcCtrl.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular\n  <span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TodomvcCtrl\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$scope<span class=\"token punctuation\">,</span> todomvcStorage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $scope<span class=\"token punctuation\">.</span>todos <span class=\"token operator\">=</span> todomvcStorage<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>todomvcStorage</code> 서비스를 주입하고 기존 <code>$scope.todos</code>에 설정했던 배열을 제거했다.\n대신 서비스에서 정의한 <code>get()</code> 함수를 통해 투두 목록 데이터를 가져왔다.</p>\n<p>데이터 조회 기능을 만들었으니 추가, 삭제 기능도 만들어 보자.\n먼저 서비스 코드다.</p>\n<p>js/services/todoStorage.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvcStorage\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> storage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">todos</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"요가 수행하기\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"어머니 용돈 드리기\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> storage<span class=\"token punctuation\">.</span>todos\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">post</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todoTitle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> newId <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length\n        <span class=\"token operator\">?</span> <span class=\"token number\">1</span>\n        <span class=\"token operator\">:</span> storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">[</span>storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">var</span> newTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> newId<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> todoTitle<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n      storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newTodo<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">delete</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> deleltedTodoIdx <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> todo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deleltedTodoIdx <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n      storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>deleltedTodoIdx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function-variable function\">deleteCompleted</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> incompleteTodos <span class=\"token operator\">=</span> storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>todo<span class=\"token punctuation\">.</span>completed\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      angular<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span>incompleteTodos<span class=\"token punctuation\">,</span> storage<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> storage\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>post()</code> 함수는 새로운 투두를 추가하고 <code>delete()</code>는 기존 투두목록에서 삭제하는 함수다.\n이 서비스 함수를 이용해서 컨트롤러 함수를 다시 작성해 보자.</p>\n<p>js/controllers/TodomvcCtrl.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular\n  <span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TodomvcCtrl\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$scope<span class=\"token punctuation\">,</span> todomvcStorage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $scope<span class=\"token punctuation\">.</span>todos <span class=\"token operator\">=</span> todomvcStorage<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addTodo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todoTitle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      todoTitle <span class=\"token operator\">=</span> todoTitle<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>todoTitle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n      todomvcStorage<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>todoTitle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">remove</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n      todomvcStorage<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    $scope<span class=\"token punctuation\">.</span><span class=\"token function\">$watch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$scope<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"completed\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $scope<span class=\"token punctuation\">.</span>statusFilter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>$scope<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $scope<span class=\"token punctuation\">.</span>statusFilter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        $scope<span class=\"token punctuation\">.</span>statusFilter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">clearCompleted</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      todomvcStorage<span class=\"token punctuation\">.</span><span class=\"token function\">deleteCompleted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>데이터 변수와 이를 조작하는 함수는 모두 <code>todomvcStorage</code> 서비스로 위임했다.\n컨트롤러는 템플릿과 연결된 기능만 있다.\n이렇게 기능별로 코드를 모듈화 하는 것이 코드 읽기에 편할 뿐만 아니라 유지보수 하는데도 훨씬 좋다.</p>\n<h2 id=\"중간-정리\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC\" aria-label=\"중간 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중간 정리</h2>\n<p>여기까지 프론트 작업은 거의 다했다.\n다음 시간부터는 백엔드 작업을 진행할 예정이다.\n노드 위에 익스프레스 엔진을 얹고 우리가 만든 앵귤러 앱을 호스팅할 것이다.\n그리고 프론트에서 관리했던 데이터를 백엔드로 가져올 것이다.</p>\n<p>폴더 구조를 변경하자.\n<code>client</code> 폴더에 우리가 작성한 앵귤러 코드를 옮겨놓고,\n<code>server</code> 폴더에는 앞으로 작성할 노드 코드를 추가할 예정이다.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-12-result1.png\" alt=\"\"></p>","frontmatter":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","title":"앵귤러로 Todo앱 만들기 9 - Service","tags":["angularjs","lecture"],"series":"앵귤러로 Todo앱 만들기","videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%97%90%EC%84%9C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EB%B6%84%EB%A6%AC%ED%95%98%EC%9E%90\">컨트롤러에서 서비스를 분리하자</a></li>\n<li><a href=\"#%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC\">중간 정리</a></li>\n</ul>","excerpt":"다른 것도 디렉티브로 만들어 봤는지 모르겠다.\n웬만하면 직접 해보는 것이 유익하다. 이번에는 컨트롤러를 쪼개 보자.\n컨트롤러 스코프 변수에는 todos 변수가 있는데 이것은 투두 목록을 담고 있는 것이다.\n그리고 remove(), add…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"d3e97582-39e9-520d-9e14-8fe110738b9f","frontmatter":{"slug":"/lectures/todomvc-angular/1/","date":"2016-06-12T09:00:01.000Z","title":"앵귤러로 Todo앱 만들기 1 - 노드설치","series":"앵귤러로 Todo앱 만들기"}},{"id":"13b3c935-d2ac-5800-8db6-d29d58ac37d8","frontmatter":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z","title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","series":"앵귤러로 Todo앱 만들기"}},{"id":"d6728453-94a6-50ee-9fb0-99fe1f85616a","frontmatter":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z","title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","series":"앵귤러로 Todo앱 만들기"}},{"id":"1879494f-0b85-54a7-a3b4-d6ac68d0f943","frontmatter":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z","title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"dfaa4414-ccb5-50a4-8a26-47db7d20844b","frontmatter":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"a159eb4f-df5f-5134-acf6-4546d1b4920f","frontmatter":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","series":"앵귤러로 Todo앱 만들기"}},{"id":"245789b6-16ac-5f89-af0f-aee6eb310bb4","frontmatter":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z","title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","series":"앵귤러로 Todo앱 만들기"}},{"id":"ee82ec1d-fc51-5103-9e1f-66fee0004c7d","frontmatter":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","title":"앵귤러로 Todo앱 만들기 8 - Directive","series":"앵귤러로 Todo앱 만들기"}},{"id":"8ecd73d7-ffd0-5b6a-803e-6cef1c2152bf","frontmatter":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","title":"앵귤러로 Todo앱 만들기 9 - Service","series":"앵귤러로 Todo앱 만들기"}},{"id":"c974eacb-5b7e-5c7f-a809-0ef22bb91480","frontmatter":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z","title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","series":"앵귤러로 Todo앱 만들기"}},{"id":"b98d154a-e979-5c5d-9432-8c91b153b5b5","frontmatter":{"slug":"/lectures/todomvc-angular/11/","date":"2016-06-14T09:00:11.000Z","title":"앵귤러로 Todo앱 만들기 11 - Static Files","series":"앵귤러로 Todo앱 만들기"}},{"id":"8f213432-2aaa-5045-b49e-92c23beb5ab3","frontmatter":{"slug":"/lectures/todomvc-angular/12/","date":"2016-06-14T09:00:12.000Z","title":"앵귤러로 Todo앱 만들기 12 - APIs","series":"앵귤러로 Todo앱 만들기"}},{"id":"b82ad82d-719a-5521-853a-993c5cfca0c4","frontmatter":{"slug":"/lectures/todomvc-angular/13/","date":"2016-06-16T09:00:13.000Z","title":"앵귤러로 Todo앱 만들기 13 - $http로 앵귤러 서비스 개선하기","series":"앵귤러로 Todo앱 만들기"}}]}},"pageContext":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","series":"앵귤러로 Todo앱 만들기","videoId":null,"previous":{"frontmatter":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","title":"앵귤러로 Todo앱 만들기 8 - Directive","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}},"next":{"frontmatter":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z","title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}}}},"staticQueryHashes":["2263867198"]}