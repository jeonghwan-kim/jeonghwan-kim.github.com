{
    "componentChunkName": "component---src-templates-blog-post-index-tsx",
    "path": "/lectures/todomvc-angular/5/",
    "result": {"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"ab832974-daba-5662-a494-2d2cee5ed763","html":"<p>이번에는 <code>ngSubmit</code> 디렉티브를 이용해 투두를 추가하는 방법에 대해 알아보자.</p>\n<h2 id=\"템플릿-작성\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%9E%91%EC%84%B1\" aria-label=\"템플릿 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 작성</h2>\n<p>입력을 위해 텍스트 입력 필드와 추가 버튼을 만들자.\n입력필드는 마찬가지로 <code>ngModel</code> 디렉티브로 양방향 데이터 바인딩을 설정했다.\n<code>&#x3C;input type=\"text\" ng-model=\"newTodo\"></code>\n컨트롤러에서는 <code>newTodo</code>를 통해 데이터를 확인할수 있다.</p>\n<p>버튼이 좀 눈여겨 볼만한다.\n<code>&#x3C;button type=\"submit\">Add&#x3C;/button></code>\n이전에 사용했던 <code>ngClick</code>을 이용해 이벤트 핸들러를 걸어야 할것 같지만 그러지 않았다.\n간다하게 <code>submit</code> 타입으로 지정했다.\n대신 두 입력필드를 감싸는 <code>form</code> 태그에 <code>ng-submit</code>으로 이벤트 핸들러를 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">ng-submit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addTodo(newTodo)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>newTodo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Type todos<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autofocus</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Add<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이렇게 사용하는 이유는 폼 데이터를 입력하고 엔터를 입력했을 경우\n브라우져에서는 submit 이벤트가 발생하고 앵귤러는 <code>ng-submit</code>에 바인딩된 함수를 구동하는 것이다.\n간단히 말하면 입력하고 엔터키를 치면 바로 동작하도록 하기 위해 <code>ng-submit</code> 디렉티브를 사용한 것이다.</p>\n<p>화면을 확인해 보자.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result6.png\" alt=\"\"></p>\n<h2 id=\"컨트롤러-작성\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\" aria-label=\"컨트롤러 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨트롤러 작성</h2>\n<p>컨트롤러에서 투두를 추가하는 함수를 만들어 보자.\n템플릿에서 컨트롤러에 있는 함수를 사용하기 위해서는 역시 스코프 변수에 함수를 정의해야 한다.\n<code>$scope.addTodo</code> 함수를 정의해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"todomvc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TodomvcCtrl\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$scope</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addTodo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todoTitle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    todoTitle <span class=\"token operator\">=</span> todoTitle<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>todoTitle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">var</span> newId <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>$scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length\n      <span class=\"token operator\">?</span> <span class=\"token number\">1</span>\n      <span class=\"token operator\">:</span> $scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">[</span>$scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">var</span> newTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> newId<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> todoTitle<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">completed</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    $scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newTodo<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>기존 투두목록에서 새로운 식별자 <code>newId</code>를 만들어 투두를 추가하는 간단한 로직이다.\n결과를 확인해 보자!</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result7.png\" alt=\"\"></p>","frontmatter":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","tags":["angularjs","lecture"],"series":"앵귤러로 Todo앱 만들기","videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%9E%91%EC%84%B1\">템플릿 작성</a></li>\n<li><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\">컨트롤러 작성</a></li>\n</ul>","excerpt":"이번에는 ngSubmit 디렉티브를 이용해 투두를 추가하는 방법에 대해 알아보자. 템플릿 작성 입력을 위해 텍스트 입력 필드와 추가 버튼을 만들자.\n입력필드는 마찬가지로 ngModel 디렉티브로 양방향 데이터 바인딩을 설정했다.\n<input type=\"text\" ng-model=\"newTodo\">\n컨트롤러에서는 newTodo…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"2e94c765-2c0b-5ba9-87b5-63a1f12eac23","frontmatter":{"slug":"/lectures/todomvc-angular/1/","date":"2016-06-12T09:00:01.000Z","title":"앵귤러로 Todo앱 만들기 1 - 노드설치","series":"앵귤러로 Todo앱 만들기"}},{"id":"4d6947a3-62a3-5075-85c4-496bde227879","frontmatter":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z","title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","series":"앵귤러로 Todo앱 만들기"}},{"id":"a7409d13-ad1e-5005-87c1-be4ae5f77dcf","frontmatter":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z","title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","series":"앵귤러로 Todo앱 만들기"}},{"id":"092c9d4b-1d95-55d0-9bd3-bad5d548893b","frontmatter":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z","title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"ab832974-daba-5662-a494-2d2cee5ed763","frontmatter":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","series":"앵귤러로 Todo앱 만들기"}},{"id":"bd6b2bc5-b249-5abc-a636-2cf8012b25a6","frontmatter":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","series":"앵귤러로 Todo앱 만들기"}},{"id":"18eafc33-30a3-58e5-9f97-a4a93bcd175c","frontmatter":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z","title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","series":"앵귤러로 Todo앱 만들기"}},{"id":"981aa553-69a4-5810-a149-2ffe13bbef98","frontmatter":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z","title":"앵귤러로 Todo앱 만들기 8 - Directive","series":"앵귤러로 Todo앱 만들기"}},{"id":"8ca78d7a-7498-5145-96c8-2ab3bad07f55","frontmatter":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z","title":"앵귤러로 Todo앱 만들기 9 - Service","series":"앵귤러로 Todo앱 만들기"}},{"id":"c692f04e-51db-52f2-aa55-a770249f3549","frontmatter":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z","title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","series":"앵귤러로 Todo앱 만들기"}},{"id":"91023013-3318-5a52-808d-bc5981fa3063","frontmatter":{"slug":"/lectures/todomvc-angular/11/","date":"2016-06-14T09:00:11.000Z","title":"앵귤러로 Todo앱 만들기 11 - Static Files","series":"앵귤러로 Todo앱 만들기"}},{"id":"0e4be43c-d245-5f34-a434-5b7f3919f6cb","frontmatter":{"slug":"/lectures/todomvc-angular/12/","date":"2016-06-14T09:00:12.000Z","title":"앵귤러로 Todo앱 만들기 12 - APIs","series":"앵귤러로 Todo앱 만들기"}},{"id":"e52f285b-7144-59b3-849b-4112c4f141b3","frontmatter":{"slug":"/lectures/todomvc-angular/13/","date":"2016-06-16T09:00:13.000Z","title":"앵귤러로 Todo앱 만들기 13 - $http로 앵귤러 서비스 개선하기","series":"앵귤러로 Todo앱 만들기"}}]}},"pageContext":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","series":"앵귤러로 Todo앱 만들기","videoId":null,"previous":{"frontmatter":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z","title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}},"next":{"frontmatter":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","category":"연재물","series":"앵귤러로 Todo앱 만들기","videoId":null}}}},
    "staticQueryHashes": ["2263867198"]}