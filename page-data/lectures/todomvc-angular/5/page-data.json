{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/lectures/todomvc-angular/5/","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io","series":[{"id":20200102,"title":"프론트엔드 개발환경의 이해"},{"id":20181201,"title":"Node.js 코드랩"},{"id":20171002,"title":"Express.js 만들기"},{"id":20170422,"title":"함수형 프로그래밍"},{"id":20150222,"title":"Hapi.js로 API 서버 시작하기"},{"id":20160611,"title":"앵귤러로 Todo앱 만들기"}],"videos":[{"id":1,"url":"https://www.inflearn.com/course/프론트엔드-개발환경","thumb":"https://cdn.inflearn.com/public/courses/324671/course_cover/638eee1a-6381-402d-a17b-3724751414f1/frontend-env-eng.png","title":"프론트엔드 개발환경의 이해와 실습"},{"id":2,"url":"https://www.inflearn.com/course/vuejs","thumb":"https://cdn.inflearn.com/wp-content/uploads/kjh_Vuejs-3.jpg","title":"트렐로 개발로 배우는 Vuejs, Vuex, Vue-Router 프론트엔드 실전 기술"},{"id":3,"url":"https://www.inflearn.com/course/순수js-vuejs-개발-강좌","thumb":"https://cdn.inflearn.com/wp-content/uploads/vuejsandpure.png","title":"실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발"},{"id":4,"url":"https://www.inflearn.com/course/테스트주도개발-tdd-nodejs-api","thumb":"https://cdn.inflearn.com/wp-content/uploads/nodetdd.png","title":"테스트주도개발(TDD)로 만드는 NodeJS API 서버"},{"id":5,"url":"https://www.inflearn.com/course/tdd-견고한-소프트웨어-만들기","thumb":"https://cdn.inflearn.com/wp-content/uploads/software-1.jpg","title":"견고한 JS 소프트웨어 만들기"},{"id":6,"url":"https://www.youtube.com/watch?v=_QCNqV_EfzE","thumb":"/assets/imgs/youtube_20200407.jpg","title":"알아두면 쓸데있는 VSCode 노하우"}]}},"markdownRemark":{"id":"446e4236-46de-544f-851d-811a1539a334","excerpt":"…","html":"<p>이번에는 <code class=\"language-text\">ngSubmit</code> 디렉티브를 이용해 투두를 추가하는 방법에 대해 알아보자.</p>\n<h2 id=\"템플릿-작성\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%9E%91%EC%84%B1\" aria-label=\"템플릿 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿 작성</h2>\n<p>입력을 위해 텍스트 입력 필드와 추가 버튼을 만들자.\n입력필드는 마찬가지로 <code class=\"language-text\">ngModel</code> 디렉티브로 양방향 데이터 바인딩을 설정했다.\n<code class=\"language-text\">&lt;input type=&quot;text&quot; ng-model=&quot;newTodo&quot;&gt;</code>\n컨트롤러에서는 <code class=\"language-text\">newTodo</code>를 통해 데이터를 확인할수 있다.</p>\n<p>버튼이 좀 눈여겨 볼만한다.\n<code class=\"language-text\">&lt;button type=&quot;submit&quot;&gt;Add&lt;/button&gt;</code>\n이전에 사용했던 <code class=\"language-text\">ngClick</code>을 이용해 이벤트 핸들러를 걸어야 할것 같지만 그러지 않았다.\n간다하게 <code class=\"language-text\">submit</code> 타입으로 지정했다.\n대신 두 입력필드를 감싸는 <code class=\"language-text\">form</code> 태그에 <code class=\"language-text\">ng-submit</code>으로 이벤트 핸들러를 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">ng-submit</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>addTodo(newTodo)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>newTodo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Type todos<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autofocus</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Add<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이렇게 사용하는 이유는 폼 데이터를 입력하고 엔터를 입력했을 경우\n브라우져에서는 submit 이벤트가 발생하고 앵귤러는 <code class=\"language-text\">ng-submit</code>에 바인딩된 함수를 구동하는 것이다.\n간단히 말하면 입력하고 엔터키를 치면 바로 동작하도록 하기 위해 <code class=\"language-text\">ng-submit</code> 디렉티브를 사용한 것이다.</p>\n<p>화면을 확인해 보자.</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result6.png\"></p>\n<h2 id=\"컨트롤러-작성\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\" aria-label=\"컨트롤러 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨트롤러 작성</h2>\n<p>컨트롤러에서 투두를 추가하는 함수를 만들어 보자.\n템플릿에서 컨트롤러에 있는 함수를 사용하기 위해서는 역시 스코프 변수에 함수를 정의해야 한다.\n<code class=\"language-text\">$scope.addTodo</code> 함수를 정의해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todomvc'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TodomvcCtrl'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$scope</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addTodo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">todoTitle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          todoTitle <span class=\"token operator\">=</span> todoTitle<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>todoTitle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">var</span> newId <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>$scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span>\n              <span class=\"token number\">1</span> <span class=\"token operator\">:</span> $scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">[</span>$scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">var</span> newTodo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            id<span class=\"token operator\">:</span> newId<span class=\"token punctuation\">,</span>\n            title<span class=\"token operator\">:</span> todoTitle<span class=\"token punctuation\">,</span>\n            completed<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n          $scope<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>newTodo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기존 투두목록에서 새로운 식별자 <code class=\"language-text\">newId</code>를 만들어 투두를 추가하는 간단한 로직이다.\n결과를 확인해 보자!</p>\n<p><img src=\"/assets/imgs/2016/lecture-todomvc-angular-2-result7.png\"></p>","fields":{"date":"2016년 06월 12일","slug":"/lectures/todomvc-angular/5/","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","tags":["angularjs","lecture"],"seriesId":20160611,"videoId":null},"tableOfContents":"<ul>\n<li><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%9E%91%EC%84%B1\">템플릿 작성</a></li>\n<li><a href=\"#%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EC%9E%91%EC%84%B1\">컨트롤러 작성</a></li>\n</ul>"},"allMarkdownRemark":{"edges":[{"node":{"id":"7d5eb1b8-b89b-5a0a-a927-b054e8055119","fields":{"slug":"/lectures/todomvc-angular/1/","date":"2016-06-12T09:00:01.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 1 - 노드설치","seriesId":20160611}}},{"node":{"id":"9ff817f5-60d7-5fab-a2fb-43b956ee2251","fields":{"slug":"/lectures/todomvc-angular/2/","date":"2016-06-12T09:00:02.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 2 - 앵귤러 로딩","seriesId":20160611}}},{"node":{"id":"ef52a605-538c-51ad-9b6a-0c3a8f089b45","fields":{"slug":"/lectures/todomvc-angular/3/","date":"2016-06-12T09:00:03.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 3 - 컨트롤러","seriesId":20160611}}},{"node":{"id":"86483623-5b6e-5abd-a1fb-8df6ad678a6b","fields":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","seriesId":20160611}}},{"node":{"id":"446e4236-46de-544f-851d-811a1539a334","fields":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 5 - 새로운 투두 추가하기","seriesId":20160611}}},{"node":{"id":"479eff91-41cb-57e5-8c5b-bd827017db38","fields":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","seriesId":20160611}}},{"node":{"id":"37cb71da-f8ac-5618-9959-1d402617732a","fields":{"slug":"/lectures/todomvc-angular/7/","date":"2016-06-13T09:00:07.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 7 - 투두 목록 필터링","seriesId":20160611}}},{"node":{"id":"182c795e-5000-5400-9d4c-69e3c49bd053","fields":{"slug":"/lectures/todomvc-angular/8/","date":"2016-06-14T09:00:08.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 8 - Directive","seriesId":20160611}}},{"node":{"id":"abb95b4f-3d86-5de0-bd8a-09cd6f6c3bd0","fields":{"slug":"/lectures/todomvc-angular/9/","date":"2016-06-14T09:00:09.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 9 - Service","seriesId":20160611}}},{"node":{"id":"1daf2b69-46f7-57e5-a009-4f15419d1b0c","fields":{"slug":"/lectures/todomvc-angular/10/","date":"2016-06-14T09:00:10.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 10 - Express.js로 웹서버 만들기","seriesId":20160611}}},{"node":{"id":"5815f44a-44ac-57ec-857d-417f0aab901e","fields":{"slug":"/lectures/todomvc-angular/11/","date":"2016-06-14T09:00:11.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 11 - Static Files","seriesId":20160611}}},{"node":{"id":"4a8f6634-d62d-5420-88d8-be93a5d66df2","fields":{"slug":"/lectures/todomvc-angular/12/","date":"2016-06-14T09:00:12.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 12 - APIs","seriesId":20160611}}},{"node":{"id":"0daa7082-4d43-531c-bc4b-96b05477b5e5","fields":{"slug":"/lectures/todomvc-angular/13/","date":"2016-06-16T09:00:13.000Z"},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 13 - $http로 앵귤러 서비스 개선하기","seriesId":20160611}}}]}},"pageContext":{"slug":"/lectures/todomvc-angular/5/","date":"2016-06-12T09:00:05.000Z","seriesId":20160611,"previous":{"fields":{"slug":"/lectures/todomvc-angular/4/","date":"2016-06-12T09:00:04.000Z","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 4 - 투두 목록 출력하기","category":"series","permalink":"/lectures/todomvc-angular/4/","seriesId":20160611}},"next":{"fields":{"slug":"/lectures/todomvc-angular/6/","date":"2016-06-13T09:00:06.000Z","beforeGatsby":true},"frontmatter":{"title":"앵귤러로 Todo앱 만들기 6 - Bootstrap으로 꾸미기","category":"series","permalink":"/lectures/todomvc-angular/6/","seriesId":20160611}}}}}