{
    "componentChunkName": "component---src-templates-blog-post-index-tsx",
    "path": "/dev/2019/01/08/go-fmt.html",
    "result": {"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"66cf0204-79f9-5765-8ff4-dfca8e35ca97","html":"<p>Go 언어를 접하면서 가장 처음 사용하는 것이 fmt 패키지다. 기본적인 출력과 입력 포맷 관련한 기능을 제공하는데 이 글에서는 fmt에서 제공하는 함수와 타입의 사용법에 대해서 살펴보겠다.</p>\n<h2 id=\"템플릿\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿</h2>\n<p>fmt 패키지는 포맷 템플릿을 이해하는 것이 핵심이다. 이것은 출력할 텍스트와 동사(verb)라고 부르는 변수를 출력하는 방식으로 구성된 문자열이다. 가령 age라는 변수 값을 출력하려면 fmt 패키지의 Printf() 함수를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">age <span class=\"token operator\">:=</span> <span class=\"token number\">7</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age: %d\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"age: 7\"</span></code></pre></div>\n<p>정수 값을 출력할 때 사용하는 %d가 바로 동사인데 목적에 따라 다양한 기호를 사용한다.</p>\n<p>문자열 값을 출력하려면 %s를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">name <span class=\"token operator\">:=</span> <span class=\"token string\">\"Gopher\"</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Name: Gopher\"</span></code></pre></div>\n<p>기본 데이터 타입을 출력하기 위한 <a href=\"https://golang.org/pkg/fmt/#hdr-Printing\">다양한 동사</a> 사용법은 <a href=\"https://gobyexample.com/string-formatting\">Go by Example</a>을 참고하자.</p>\n<p>구조체 인스턴스도 동사를 지원하는데 %v를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> User <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token builtin\">string</span>\n    age  <span class=\"token builtin\">int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    u <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span><span class=\"token string\">\"Gopher\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%v\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {Gopher 10}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>구조체의 필드명까지 출력하려면 + 기호를 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%+v\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {name:Gopher, age:10}</span></code></pre></div>\n<p>기호를 추가하면 코드 정보까지 출력할 수 있다. 아마도 디버깅 용도로 사용하라는 의도 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#v\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// main.user{name:\"Gopher\", age:10}</span></code></pre></div>\n<p>출력시 길이(width)를 고정하려면 숫자를 추가한다. 가령 정수를 길이 6으로 고정하려면 %6d 처럼 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">age <span class=\"token operator\">:=</span> <span class=\"token number\">10</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|%6d|\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"|    10|\"</span></code></pre></div>\n<p>기본적으로 고정된 길이에서는 우측 정렬을 따른다. 만약 좌측으로 정렬하려면 - 기호를 숫자 앞에 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"|%-6d|\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"|10    |\"</span></code></pre></div>\n<p>제로 패딩(Zero Padding)도 지원하는데 고정 길이 값 앞에 0을 붙여 준다. 그러면 값을 제외한 나머지 빈 공간을 0으로 채워 출력할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%06d\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"000010\"</span></code></pre></div>\n<h2 id=\"표준-출력\" style=\"position:relative;\"><a href=\"#%ED%91%9C%EC%A4%80-%EC%B6%9C%EB%A0%A5\" aria-label=\"표준 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표준 출력</h2>\n<p>운영 체제의 표준 출력(os.Stdout)인 터미널로 결과를 전달하기 위한 세 가지 함수를 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">name <span class=\"token operator\">:=</span> <span class=\"token string\">\"World\"</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"HelloWorld\"</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> world<span class=\"token string\">\") // \"</span>Hello world\\n\"\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Hello world\"</span></code></pre></div>\n<p>Print() 함수는 단순히 문자열을 표준 출력으로 내보내서 터미널에 \"HelloWorld\"란 문자를 기록한다. 인자가 2개 이상일 경우 순서대로 붙여서 출력한다.</p>\n<p>반면 Println()은 여러개 인자를 출력할 때 사이사이 빈 문자를 넣는다. 마지막엔 개행문자까지 추가하기 때문에 가독성이 필요할 경우 Print()보다 Println()을 선호하는 편이다.</p>\n<p>Printf()는 앞에서 다루었듯이 문자열과 변수를 함께 출력할 때 사용한다. 동사를 포함한 템플릿 문자열과 변수를 인자로 받는다.</p>\n<h2 id=\"파일-출력\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%B6%9C%EB%A0%A5\" aria-label=\"파일 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일 출력</h2>\n<p>fmt 패키지 코드를 보면 Print() 함수는 내부적으로 Fprint() 함수를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Fprint</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stdout<span class=\"token punctuation\">,</span> a<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Fprint()는 파일(File) 출력을 의미하는 F로 시작하는데 첫 번째 인자로 io.Writer 타입을 받는다.\nPrint()는 표준출력인 os.Stdout를 넘겨 주기 때문에 표준 출력인 터미널에 기록하는 원리다.\n유닉스 시스템은 표준 입출력을 모두 파일로 처리한다 (/dev/stdin, dev/stdout, /dev/stderr)</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> <span class=\"token punctuation\">(</span>\n    Stdin <span class=\"token operator\">=</span> <span class=\"token function\">NewFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">uintptr</span><span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">.</span>Stdin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/stdin\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 표준 입력</span>\n    Stdout <span class=\"token operator\">=</span> <span class=\"token function\">NewFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">uintptr</span><span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">.</span>Stdout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/stdout\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 표준 출력</span>\n    Stderr <span class=\"token operator\">=</span> <span class=\"token function\">NewFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">uintptr</span><span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/stderr\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 표준 에러</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Fprint() 함수를 직접 사용하면 표준 출력 뿐만 아니라 파일에 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"bufio\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 파일과 쓰기 버퍼 생성</span>\n    f<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/result\"</span><span class=\"token punctuation\">)</span>\n    w <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewWriter</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 파일에 쓰기</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprint</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\\n\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 종료</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>실행한 결과 /tmp/result 파일이 생성되고 그 안에 \"Hello World\" 문자열이 기록되는 것을 확인할 수 있다.</p>\n<p>파일 출력은 앞에 \"F\"가 붙은 이름의 함수를 제공한다. 유심히 보면 표준 출력 함수와 비슷하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Fprint</span><span class=\"token punctuation\">(</span>w io<span class=\"token punctuation\">.</span>Writer<span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w io<span class=\"token punctuation\">.</span>Writer<span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w io<span class=\"token punctuation\">.</span>Writer<span class=\"token punctuation\">,</span> format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"문자열-만들기\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"문자열 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 만들기</h2>\n<p>파일을 의미하는 F처럼 문자열(String)을 의미하는 S로 시작하는 출력함수가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Sprint</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Sprintln</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span>format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span></code></pre></div>\n<p>이 함수들은 화면이나 파일에 출력하지 않고 문자열 값을 반환한다. 메모리에 출력하는 셈이다. 변수 값을 합쳐서 문자열을 만드는 경우 Sprintf()를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">name <span class=\"token operator\">:=</span> <span class=\"token string\">\"Gopher\"</span>\nmsg <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello %s\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// msg := \"Hello Gopher\"</span></code></pre></div>\n<h2 id=\"스캐닝\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BA%90%EB%8B%9D\" aria-label=\"스캐닝 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스캐닝</h2>\n<p>데이터를 입력받아 변수에 할당하는 것은 스캐닝(scanning)이라고 한다. fmt 패키지에는 출력을 위한 함수와 비슷한 종류의 스캐닝 함수를 제공한다. Scan() 함수는 표준 입력에서 데이터를 받을 때 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> name <span class=\"token builtin\">string</span>\n<span class=\"token keyword\">var</span> age  <span class=\"token builtin\">int</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s (%d)\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span></code></pre></div>\n<p>결과:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Gopher 10\nGopher (10)</code></pre></div>\n<p>Scan()를 포함해 표준입력 스캐닝 함수는 총 세 가지다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Scan</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Scanln</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Scanf</span><span class=\"token punctuation\">(</span>format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Scanln() 함수는 개행문자(엔터)를 마지막 입력으로 받는 점이 Scan()와 차이다. Scanf()는 동사를 이용하는 점에서 Printf()와 동일한 쓰임새다.</p>\n<p>파일, 문자열 출력처럼 스캐닝도 파일과 문자열 스캐닝 함수를 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Fscan</span><span class=\"token punctuation\">(</span>r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Fscanln</span><span class=\"token punctuation\">(</span>r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Fscanf</span><span class=\"token punctuation\">(</span>r io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Sscan</span><span class=\"token punctuation\">(</span>str <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Sscanln</span><span class=\"token punctuation\">(</span>str <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Sscanf</span><span class=\"token punctuation\">(</span>str <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"에러-출력\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EC%B6%9C%EB%A0%A5\" aria-label=\"에러 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 출력</h2>\n<p>fmt 패키지에는 Errorf() 함수는 화면에 출력하지 않고 에러 메세지가 담긴 errors 타입의 인스턴스를 만들어 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span>format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">,</span> a<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수 반환 값으로 에러를 리턴할 때 주로 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>f form<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 중복 유저 발생시 에러를 반환</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"duplicated user\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"stringer\" style=\"position:relative;\"><a href=\"#stringer\" aria-label=\"stringer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stringer</h2>\n<p>Go에서는 \"er\"로 끝나는 인터페이스 네이밍 규칙이 있다. Stringer라는 이름의 인터페이스는 문자열 관련한 인터페이스라는 것을 추측을 할 수 있는데 출력 함수의 특정 동사가 이 인터페이스를 사용하는 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Stringer <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>기본 패키지에 보면 Stringer 인테페이스를 따르는 구조체가 있는데 net.IP 와 bytes.Buffer의 String() 메소드가 그렇다.</p>\n<p>Name과 Age 프로퍼티를 가지고 있는 User 구조체가 Stringer 인터페이스를 충족하도록 만들어 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">type</span> User <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n   Name <span class=\"token builtin\">string</span>\n   Age  <span class=\"token builtin\">int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// String 은 Stringer 인터페이스를 구현한다</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>a User<span class=\"token punctuation\">)</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s (%d)\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span>Age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   u <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span><span class=\"token string\">\"Gopher\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Gopher (7)\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약 String() 메소드를 구현하지 않고 u 인스턴스를 출력하면 \"{Gopher 7}\" 결과가 나왔을 것이다. 위 예제에서는 String() 메소드를 구현하여 Stringer 인터페이스를 충족시켰기 때문에 \"Gopher (7)\" 이란 결과가 나온 것이다.</p>\n<p>이와 유사하게 GoStringer는 구조체 인스턴스를 출력할 때 문자열을 반환하도록하는 인터페이스다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> GoStringer <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">GoString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>GoString() 메소드를 구현해서 User 구조체가 GoStringer 인터페이스를 만족하도록 해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// GoString 은 GoStriner 인터페이스를 충족한다</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>u User<span class=\"token punctuation\">)</span> <span class=\"token function\">GoString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User: %s (%d)\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">.</span>Age<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   u <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span><span class=\"token string\">\"Gopher\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%#v\\n\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"User: Gopher (7)\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>GoString() 메소드 구현 전에 \"%#v\" 동사로 출력하면 \"main.User{Name:\"Gopher\", Age:7}\" 결과가 나올 것이다. 구현 후에는 메소드에서 반환한 것처럼 \"User: Gopher (7)\"로 결과가 나온다.</p>\n<h2 id=\"사용자-정의-출력\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%B6%9C%EB%A0%A5\" aria-label=\"사용자 정의 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 정의 출력</h2>\n<p>Stringer나 GoStringer 인터페이스를 구현함으로써 fmt 패키지가 제공하는 출력 함수의 결과 일부를 변경할 수 있었다. 출력 형식을 좀 더 자유롭게 제어 할 수 있는데 Formatter와 State 인터페이스를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Formatter <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>f State<span class=\"token punctuation\">,</span> c <span class=\"token builtin\">rune</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> State <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Write is the function to call to emit formatted output to be printed.</span>\n    <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>b <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Width returns the value of the width option and whether it has been set.</span>\n    <span class=\"token function\">Width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>wid <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ok <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Precision returns the value of the precision option and whether it has been set.</span>\n    <span class=\"token function\">Precision</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>prec <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ok <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Flag reports whether the flag c, a character, has been set.</span>\n    <span class=\"token function\">Flag</span><span class=\"token punctuation\">(</span>c <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>계속해서 User 타입을 이용해서 코드를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>u User<span class=\"token punctuation\">)</span> <span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>f fmt<span class=\"token punctuation\">.</span>State<span class=\"token punctuation\">,</span> c <span class=\"token builtin\">rune</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   w<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   p<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Precision</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n   f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"^\"</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">.</span>Age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n   f<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   u <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span><span class=\"token string\">\"Gopher\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n   fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%6.3s\\n\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"^^^^^^Gopher7$$$\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Format() 함수의 인자인 f는 Width()와 Precision() 메소드를 제공하는데 동사 숫자 값의 소수점 앞 부분과 뒷 부분을 각 각 조회할 수 있다. 값을 출력하기 위해서는 Write() 메소드를 사용한다. 위 예제는 동사에 지정한 숫자만큼 특정 기호를 반복하고 그 중간에 User 타입의 값을 출력한다.</p>\n<p>한편 스캐닝도 사용자 정의 형식을 지원하는데 Scanner와 ScanState 인터페이스가 그 역할을 한다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>C를 처음 접할때 마주한 printf(), scanf() 처럼 Go fmt 패키지도 유사한 네이밍을 사용한다. 새로운 언어임에도 불구하고 꽤 친숙하다.\n문서에서도 C 스타일의 동사를 사용한다고 말한다. 좀 더 심플한 방법으로 말이다. (The format 'verbs' are derived from C's but are simpler.)</p>\n<p>정리해 보면 총 세 가지 출력 및 스캔 함수를 제공한다. Print/Scan, Println/Scanln, Printf/Scanf</p>\n<p>입출력 대상에 따라서 표준출력, 파일(F), 문자열(S)을 지원한다.</p>\n<p>에러를 만들 때는 fmt.Errorf()를 사용한다.</p>\n<p>사용자 형식을 정의하려면 Stringer, GoStringer를 사용한다. Fommter/Scanner 와 State/ScanState를 사용하면 훨씬 구체적으로 포맷을 제어할 수 있다.</p>","frontmatter":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z","title":"Go fmt 패키지","tags":["go"],"series":null,"videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF\">템플릿</a></li>\n<li><a href=\"#%ED%91%9C%EC%A4%80-%EC%B6%9C%EB%A0%A5\">표준 출력</a></li>\n<li><a href=\"#%ED%8C%8C%EC%9D%BC-%EC%B6%9C%EB%A0%A5\">파일 출력</a></li>\n<li><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\">문자열 만들기</a></li>\n<li><a href=\"#%EC%8A%A4%EC%BA%90%EB%8B%9D\">스캐닝</a></li>\n<li><a href=\"#%EC%97%90%EB%9F%AC-%EC%B6%9C%EB%A0%A5\">에러 출력</a></li>\n<li><a href=\"#stringer\">Stringer</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%B6%9C%EB%A0%A5\">사용자 정의 출력</a></li>\n<li><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>","excerpt":"Go 언어를 접하면서 가장 처음 사용하는 것이 fmt 패키지다. 기본적인 출력과 입력 포맷 관련한 기능을 제공하는데 이 글에서는 fmt에서 제공하는 함수와 타입의 사용법에 대해서 살펴보겠다. 템플릿 fmt 패키지는 포맷 템플릿을 이해하는 것이 핵심이다. 이것은 출력할 텍스트와 동사(verb)라고 부르는 변수를 출력하는 방식으로 구성된 문자열이다. 가령 age라는 변수 값을 출력하려면 fmt 패키지의 Printf() 함수를 사용한다. 정수 값을 출력할 때 사용하는 %d가 바로 동사인데 목적에 따라 다양한 기호를 사용한다. 문자열 값을 출력하려면 %s를 사용한다. 기본 데이터 타입을 출력하기 위한 다양한 동사 사용법은 Go by Example을 참고하자. 구조체 인스턴스도 동사를 지원하는데 %v를 사용한다. 구조체의 필드명까지 출력하려면 + 기호를 붙인다. 기호를 추가하면 코드 정보까지 출력할 수 있다. 아마도 디버깅 용도로 사용하라는 의도 같다. 출력시 길이(width…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"074e39b1-9462-5ecb-aaea-21a023ebe483","frontmatter":{"slug":"/elastic-beanstalk/","date":"2014-07-12T08:18:53.000Z","title":"Elastic Beanstalk","series":null}},{"id":"0f88cd5b-41df-530b-90fb-f00558327576","frontmatter":{"slug":"/아마존-s3를-이용한-이미지-업로드-서버-구축/","date":"2014-07-23T08:31:17.000Z","title":"아마존 S3를 이용한 이미지 업로드 서버 구축","series":null}},{"id":"204f727f-33f8-5d87-8d6d-daab61b0ce03","frontmatter":{"slug":"/트위터-부트스트랩-소스분석/","date":"2014-07-26T08:31:45.000Z","title":"트위터 부트스트랩 소스분석","series":null}},{"id":"f9294936-d5a4-5a25-8956-12f97d7610bd","frontmatter":{"slug":"/노드에서-세션을-이용한-로그인아웃-구현/","date":"2014-07-31T08:32:17.000Z","title":"노드에서 세션을 이용한 로그인/아웃 구현","series":null}},{"id":"e93bdb2f-6490-5827-b95d-183d6dd3ff09","frontmatter":{"slug":"/angular-fullstack-로딩-속도-개선/","date":"2014-08-02T08:33:03.000Z","title":"Angular-fullstack 로딩 속도 개선","series":null}},{"id":"e919e01e-3e58-5d2c-a03e-61d7cfb2807b","frontmatter":{"slug":"/log-io를-이용한-beanstalk-로그-모니터링/","date":"2014-08-08T08:33:35.000Z","title":"log.io를 이용한 beanstalk 로그 모니터링","series":null}},{"id":"44078c1d-42ef-5f69-9d13-79965b5ac204","frontmatter":{"slug":"/노드-실행모드에-따른-환경설정/","date":"2014-08-14T16:42:51.000Z","title":"노드 실행모드에 따른 환경설정","series":null}},{"id":"23ceaeae-905d-56ad-b86d-77f6cfa0591c","frontmatter":{"slug":"/expressjs-4-0-마이그레이션/","date":"2014-08-21T16:43:14.000Z","title":"expressjs 4.0 마이그레이션","series":null}},{"id":"f4120d8f-370f-5d57-8c2c-bc5784df92c9","frontmatter":{"slug":"/underscore-js/","date":"2015-01-05T22:16:09.000Z","title":"underscore.js","series":null}},{"id":"1a446722-166d-5a0d-99f2-7a64542dcc1d","frontmatter":{"slug":"/angular-form/","date":"2015-01-09T19:02:17.000Z","title":"Angular Form","series":null}},{"id":"c7eb8db9-618d-5d37-82cf-6e2dda183d26","frontmatter":{"slug":"/wordpress-study-01-misfit-kr/","date":"2015-01-09T21:52:58.000Z","title":"WordPress study 01 & misfit.kr","series":null}},{"id":"6af8ae32-268d-5893-84a7-c7cfe56ac849","frontmatter":{"slug":"/워드프레스-ssh2-설정/","date":"2015-01-10T15:27:00.000Z","title":"워드프레스 SSH2 설정","series":null}},{"id":"15452c5f-2728-51d4-860d-348fa3928369","frontmatter":{"slug":"/angularjs-passport로-인증구현/","date":"2015-01-17T12:34:54.000Z","title":"AngularJS, Passport로 인증구현","series":null}},{"id":"0808dd63-1640-5690-963f-865b47c073fb","frontmatter":{"slug":"/eb-cli-툴-사용법-정리/","date":"2015-01-17T14:10:57.000Z","title":"eb-cli 툴 사용법 정리","series":null}},{"id":"4771e1c3-3520-5251-b629-4015bc6f3a00","frontmatter":{"slug":"/resource-캐쉬-설정/","date":"2015-01-18T21:39:09.000Z","title":"$resource 캐쉬 설정","series":null}},{"id":"918d7407-7598-5c82-983c-ae8937014cdd","frontmatter":{"slug":"/꼬리에-꼬리를-무는-timeout/","date":"2015-01-22T01:05:37.000Z","title":"꼬리에 꼬리를 무는 setTimeout()","series":null}},{"id":"69036df4-b1d0-54bb-acb7-559da7ae55bb","frontmatter":{"slug":"/resource와-service/","date":"2015-01-22T01:13:07.000Z","title":"$resource와 service","series":null}},{"id":"54c1f7d7-c706-5e2b-8df0-f29ec064c3b1","frontmatter":{"slug":"/브라우져에서-아마존-s3-파일-업로드/","date":"2015-01-24T17:32:45.000Z","title":"브라우져에서 아마존 S3 파일 업로드","series":null}},{"id":"e5efc7b3-9af8-51c9-944b-d39735b943f7","frontmatter":{"slug":"/bit-operation/","date":"2015-02-07T23:08:18.000Z","title":"비트 연산","series":null}},{"id":"9729b6f6-773e-5adf-867e-94bfcbf1ed65","frontmatter":{"slug":"/http-테스트-코드-작성/","date":"2015-02-10T10:00:11.000Z","title":"$http 테스트 코드 작성","series":null}},{"id":"a0437991-1646-5508-9d31-b911eeca735a","frontmatter":{"slug":"/wordpress-and-grunt/","date":"2015-02-18T21:35:59.000Z","title":"워드프레스에 Grunt 설정하기","series":null}},{"id":"b5170d0b-1157-5552-965f-37e595d22e0c","frontmatter":{"slug":"/서버-다운타임-없이-빈스톡-갈아타기/","date":"2015-03-05T20:47:38.000Z","title":"서버 다운타임 없이 빈스톡 갈아타기","series":null}},{"id":"46e6e040-d3c9-5d2c-bfc2-b4bb87848870","frontmatter":{"slug":"/몽고db-인덱스-외/","date":"2015-03-10T00:10:10.000Z","title":"몽고DB 인덱스 외","series":null}},{"id":"413074b2-2e59-542a-9030-23e59814203f","frontmatter":{"slug":"/wordpress-and-jquery/","date":"2015-03-11T00:16:00.000Z","title":"워드프레스와 제이쿼리 등","series":null}},{"id":"889b1bae-f176-5fd4-b4f5-33230ed6afb0","frontmatter":{"slug":"/plugins-in-wordpress/","date":"2015-03-12T20:32:16.000Z","title":"워드프레스 플러그인 정리","series":null}},{"id":"3744f5f2-f0d9-58ed-b9ee-630b25f1f41e","frontmatter":{"slug":"앵귤러-디렉티브-등/","date":"2015-03-18T22:04:01.000Z","title":"앵귤러 디렉티브 등","series":null}},{"id":"d338ce23-8b3d-5c0d-82e8-916220b939d0","frontmatter":{"slug":"/options-메쏘드에-대해/","date":"2015-03-19T23:14:17.000Z","title":"options 메쏘드에 대해","series":null}},{"id":"93fb188b-f10f-5a06-a521-e6b96221cce7","frontmatter":{"slug":"/앵귤러-서비스에-템플릿-로딩/","date":"2015-03-23T20:28:13.000Z","title":"앵귤러 서비스에 템플릿 로딩","series":null}},{"id":"28567cc3-c4f0-5337-ad9e-f18bd31fca58","frontmatter":{"slug":"/fileupload-in-expressjs/","date":"2015-03-28T14:13:12.000Z","title":"익스프레스 파일 업로드","series":null}},{"id":"3aa5d8fa-dc49-5037-ac9a-86a48359a9d6","frontmatter":{"slug":"/how-to-build-wordpress-child-theme/","date":"2015-03-28T15:07:50.000Z","title":"워드프레스 자식 테마 만들기","series":null}},{"id":"97646c10-462e-53a7-8a18-9177d42c6550","frontmatter":{"slug":"/custom-menu-in-wordpress/","date":"2015-03-28T15:43:26.000Z","title":"워드프레스 커스텀 메뉴 추가하기","series":null}},{"id":"9bd34a0f-f8e2-5fbf-b470-c9cf492fd0cd","frontmatter":{"slug":"/ui-route로-라우팅-인증-구현/","date":"2015-04-01T23:38:41.000Z","title":"ui-route로 라우팅 인증 구현","series":null}},{"id":"676fa1d0-57ef-55cc-9f8e-1eeba1a2c2da","frontmatter":{"slug":"/angularjs-스터디-노트/","date":"2015-04-02T18:16:34.000Z","title":"AngularJS 스터디 노트","series":null}},{"id":"f6b82347-e35f-5f70-8176-c79f6e4e72eb","frontmatter":{"slug":"/how-to-run-nodejs-and-php-by-using-nginx/","date":"2015-04-10T10:04:00.000Z","title":"nginx를 이용하여 nodejs와 php 어플리케이션 함께 구동하기","series":null}},{"id":"e7d6f5cd-dc6b-5fb3-85a2-1cc78a013097","frontmatter":{"slug":"/server-side-loggin-in-angular/","date":"2015-05-05T23:45:45.000Z","title":"프론트에서 잡지 못한 예외를 서버에 리포팅하는 방법","series":null}},{"id":"aa8b2f7c-95c0-585f-9030-c96bba4757d9","frontmatter":{"slug":"/oauth2-0-in-rest-api/","date":"2015-06-11T15:31:20.000Z","title":"REST api에 OAuth2.0 구현","series":null}},{"id":"c1b999f4-a28c-5f04-87cf-57c57636bf2c","frontmatter":{"slug":"/google-material-design/","date":"2015-06-14T15:20:29.000Z","title":"Google Material Design","series":null}},{"id":"35de4e4b-0ffa-5b1a-acf1-c72d32958013","frontmatter":{"slug":"/이니페이-모바일-결제-신용카드-개발-후기/","date":"2015-06-18T09:03:02.000Z","title":"이니페이 모바일 결제 (신용카드) 개발 후기","series":null}},{"id":"8f012730-ebb0-54bf-8734-665eab179597","frontmatter":{"slug":"/momentjs/","date":"2015-06-19T08:12:10.000Z","title":"momentjs","series":null}},{"id":"6b775440-c691-534a-9f19-259485ff1388","frontmatter":{"slug":"/이니페이-모바일-결제-계좌이체-개발-후기/","date":"2015-06-26T09:14:45.000Z","title":"이니페이 모바일 결제 (계좌이체) 개발 후기","series":null}},{"id":"5bfe06a0-dbae-5dac-ad6d-a021b13064f8","frontmatter":{"slug":"/socket-io를-이용한-실시간-웹-구현/","date":"2015-07-07T22:14:13.000Z","title":"Socket.io를 이용한 실시간 웹 구현","series":null}},{"id":"81cf0551-147f-5663-bbda-3a0c38fc08f2","frontmatter":{"slug":"/mi-band-moves-rocket-pocket/","date":"2015-07-19T19:25:06.000Z","title":"Mi Band, Moves, Rocket Pocket","series":null}},{"id":"4427dad5-c1ac-5e66-b1fd-89db83414924","frontmatter":{"slug":"/ngform-클래스명-활용하기/","date":"2015-07-21T23:47:11.000Z","title":"ngForm 클래스명 활용하기","series":null}},{"id":"56093c40-2bd1-5e48-8cda-e2dd58e94c59","frontmatter":{"slug":"/passport-google-oauth-구글-인증-모듈/","date":"2015-07-23T21:50:03.000Z","title":"passport-google-oauth 구글 인증 모듈","series":null}},{"id":"503b5d42-5852-54af-af19-533876536be0","frontmatter":{"slug":"/ngform-밸리데이터-활용/","date":"2015-07-24T09:10:27.000Z","title":"ngForm 밸리데이터 활용","series":null}},{"id":"3545455a-fc78-51cf-9de4-156a9feafd07","frontmatter":{"slug":"/ngform-사용자-정의-밸리데이터-만들기/","date":"2015-07-24T21:08:44.000Z","title":"ngForm 사용자 정의 밸리데이터 만들기","series":null}},{"id":"b835cf78-7917-5cd5-8ba7-b036dea91910","frontmatter":{"slug":"/dusk-theme-in-webstorm/","date":"2015-07-26T21:42:47.000Z","title":"웹스톰 Dusk 테마","series":null}},{"id":"7fc6c2d9-90ce-5120-82b0-c9066182e83e","frontmatter":{"slug":"/이미지-업로드-1-multer-모듈로-파일-업로드/","date":"2015-07-27T17:09:22.000Z","title":"이미지 업로드 - 1. multer 모듈로 파일 업로드","series":null}},{"id":"aaef094d-295e-5915-a332-3f36d11a6a35","frontmatter":{"slug":"/이미지-업로드-2-gm-모듈로-이미지-리사이징/","date":"2015-07-27T17:10:21.000Z","title":"이미지 업로드 – 2. gm 모듈로 이미지 리사이징","series":null}},{"id":"7d48f051-cfc7-59cb-9cbb-b47a86575f95","frontmatter":{"slug":"/리눅스-데몬으로-노드-어플리케이션-관리하기/","date":"2015-07-29T23:04:12.000Z","title":"리눅스 데몬으로 노드 어플리케이션 관리하기","series":null}},{"id":"937cb0c4-565c-59c9-ac20-e2f126d88f6e","frontmatter":{"slug":"/express-js-1-설치와-구조/","date":"2015-07-30T22:12:40.000Z","title":"Express.js - 1. 설치와 구조","series":null}},{"id":"3fda9a9c-1c5a-515e-98a1-07c793b74b42","frontmatter":{"slug":"/express-js-2-라우팅/","date":"2015-08-03T09:56:22.000Z","title":"Express.js - 2. 라우팅","series":null}},{"id":"273ede44-8603-5f16-9483-8458082c441e","frontmatter":{"slug":"/express-js-3-템플릿jade/","date":"2015-08-04T21:00:46.000Z","title":"Express.js - 3. 템플릿(Jade)","series":null}},{"id":"e148e7a4-a266-5280-b1bd-496f157c0a71","frontmatter":{"slug":"/grunt-open/","date":"2015-08-10T09:38:30.000Z","title":"grunt open","series":null}},{"id":"38d06f2c-f005-5bc7-b35c-82efd040dc1b","frontmatter":{"slug":"/oh-my-zsh로-터미널-꾸미기/","date":"2015-08-10T14:41:05.000Z","title":"Oh My Zsh로 터미널 꾸미기","series":null}},{"id":"4b5dc6d1-7aed-5688-860c-16d27c38f31d","frontmatter":{"slug":"/postdigest와-timeout/","date":"2015-08-12T00:35:20.000Z","title":"$$postDigest()와 $timeout()","series":null}},{"id":"fb3279a3-681c-5555-b37c-5c97b40c399d","frontmatter":{"slug":"/resource로-rest-api-사용하기/","date":"2015-08-13T23:32:53.000Z","title":"$resource로 REST api 사용하기","series":null}},{"id":"c2dec1c9-ffa0-505b-9f04-d697696d02f9","frontmatter":{"slug":"/sequalize-쿼리/","date":"2015-08-22T15:22:13.000Z","title":"sequalize 쿼리","series":null}},{"id":"a8086324-7e1b-5296-b607-1d84fef41f2a","frontmatter":{"slug":"/아톰-에디터-외모-변경하기/","date":"2015-08-30T11:28:05.000Z","title":"아톰 에디터 외모 변경하기","series":null}},{"id":"2fc5fe33-7c2a-510a-871b-4f457d896f8b","frontmatter":{"slug":"/카페24-sms-node-모듈/","date":"2015-08-31T14:16:34.000Z","title":"카페24 SMS node 모듈","series":null}},{"id":"7a228443-cbba-5862-8b98-7a98e358a4b5","frontmatter":{"slug":"/개발-절차에-도커-적용하기/","date":"2015-09-02T11:13:03.000Z","title":"개발 절차에 도커 적용하기","series":null}},{"id":"d1036bcc-f4c9-51cd-ba28-43205c9f3e58","frontmatter":{"slug":"/docker-git/","date":"2015-09-07T10:55:26.000Z","title":"Docker + Git","series":null}},{"id":"39772152-4263-537b-affd-771481e4f464","frontmatter":{"slug":"/크론을-사용할때-서버-시간을-정확히-맞추자/","date":"2015-09-08T20:10:54.000Z","title":"크론을 사용할때 서버 시간을 정확히 맞추자","series":null}},{"id":"d4aa64a5-a46a-5c7e-b278-da0737905207","frontmatter":{"slug":"/깃git-서버-만들기/","date":"2015-09-08T20:12:06.000Z","title":"깃(git) 서버 만들기","series":null}},{"id":"828260be-baa1-566d-85d5-d77f91993f24","frontmatter":{"slug":"/agenda/","date":"2015-09-10T23:03:16.000Z","title":"Agenda","series":null}},{"id":"df222da4-63e1-58ed-b2e9-6f69ae65b630","frontmatter":{"slug":"/안쓰는-imac을-맥북-외장-모니터로-사용하자/","date":"2015-09-11T21:56:33.000Z","title":"안쓰는 iMac을 맥북 외장 모니터로 사용하자!","series":null}},{"id":"628cf529-c626-57d7-8781-33b248b0b83a","frontmatter":{"slug":"/익스프레스-api-서버-테스트-코드-작성하기/","date":"2015-09-15T11:55:36.000Z","title":"익스프레스 API 서버 테스트 코드 작성하기","series":null}},{"id":"439a02f9-7719-5cc5-84f1-cb197409faef","frontmatter":{"slug":"/forever-and-docker/","date":"2015-09-19T14:12:03.000Z","title":"Forever와 Docker","series":null}},{"id":"8b2e5a62-014b-5270-a86f-fc8e7b20b414","frontmatter":{"slug":"/docker-usage/","date":"2015-09-19T15:16:40.000Z","title":"도커 활용기","series":null}},{"id":"f1c5f417-e70c-5c58-97af-86014239af28","frontmatter":{"slug":"/원격로그인ssh-접속/","date":"2015-09-23T09:27:20.000Z","title":"원격로그인(SSH) 접속","series":null}},{"id":"06119aa3-b7b9-5e48-b551-1553f8d3b209","frontmatter":{"slug":"/mysql-데이터베이스-삭제-에러/","date":"2015-09-27T12:27:46.000Z","title":"mysql 데이터베이스 삭제 에러","series":null}},{"id":"6080b844-1486-5a56-bc59-25ec32433eb1","frontmatter":{"slug":"/osx-노트-글꼴-변경/","date":"2015-09-28T15:48:23.000Z","title":"osx 노트 글꼴 변경","series":null}},{"id":"70c44386-cbe0-5bb5-b95a-8ed5469697f1","frontmatter":{"slug":"/git-push-이벤트를-slack-채널로-보내기/","date":"2015-10-01T19:59:03.000Z","title":"git push 이벤트를 slack 채널로 보내기","series":null}},{"id":"d7e5dd64-6e16-53fc-947c-8ba2d36d8b27","frontmatter":{"slug":"/simpletest-php-unit-test/","date":"2015-10-13T17:17:22.000Z","title":"SimpleTest & php unit test","series":null}},{"id":"623096d3-2899-55d3-b34e-20ac75d9ca97","frontmatter":{"slug":"/도커에서-몽고디비-컨테이너-사용하기/","date":"2015-10-16T17:33:59.000Z","title":"도커에서 몽고디비 컨테이너 사용하기","series":null}},{"id":"d4a6e92f-61b9-58f8-98d4-91ba93f6fa28","frontmatter":{"slug":"/앵귤러로-만든-spa-프로그램을-아마존웹서비스-s3에서-웹/","date":"2015-10-27T10:08:59.000Z","title":"앵귤러로 만든 spa 프로그램을 아마존웹서비스 s3에서 웹호스팅 하는 방법","series":null}},{"id":"070923bb-57d4-5e42-b47a-60e295f93708","frontmatter":{"slug":"/서버-구동시-버전-체크/","date":"2015-10-30T09:29:05.000Z","title":"서버 구동시 버전 체크","series":null}},{"id":"1488f369-186d-5eea-b98c-debe06c57479","frontmatter":{"slug":"/karma와-watch로-유닛테스트-코드-개발하기/","date":"2015-11-04T10:49:41.000Z","title":"karma와 watch로 유닛테스트 코드 개발하기","series":null}},{"id":"83ac8cd3-e4bc-529d-bbb4-05ddd8680f93","frontmatter":{"slug":"/karma에-리포터-추가하기/","date":"2015-11-11T19:44:34.000Z","title":"karma에 리포터 추가하기","series":null}},{"id":"7b80997c-47db-5a01-b7d3-b4e4e23dfe55","frontmatter":{"slug":"/atom-에디터-플러그인-정리/","date":"2015-11-11T20:34:05.000Z","title":"Atom 에디터 플러그인 정리","series":null}},{"id":"57c637b5-6fd6-5661-a67a-0a042f84d473","frontmatter":{"slug":"/기존-프로젝트와-swagger-ui-연동하기/","date":"2015-11-24T20:33:24.000Z","title":"기존 프로젝트와 Swagger-ui 연동하기","series":null}},{"id":"deb05ab5-cf7a-5079-a7c4-4e8d41613382","frontmatter":{"slug":"/atom-플러그인-atom-sync/","date":"2015-11-25T20:48:34.000Z","title":"Atom 플러그인: atom-sync","series":null}},{"id":"a42f3c6f-afbe-599c-b1ba-3e494ae58325","frontmatter":{"slug":"/카카오-인증-테스트/","date":"2015-11-28T18:53:58.000Z","title":"카카오 인증 테스트","series":null}},{"id":"067cb020-a4b6-50bf-8301-caf3a9e88b4e","frontmatter":{"slug":"/ghost-라우팅-로직-분석/","date":"2015-11-30T22:40:51.000Z","title":"Ghost 라우팅 로직 분석","series":null}},{"id":"d43f46a4-2abe-5ff3-b9d2-fb60b09aecc6","frontmatter":{"slug":"/페이스북-토큰-권한-확인-주소/","date":"2015-12-02T14:46:07.000Z","title":"페이스북 토큰 권한 확인 주소","series":null}},{"id":"33267128-7dc2-598e-8fea-417fac4105cb","frontmatter":{"slug":"/기존-mysql에-장고-어드민-붙이기/","date":"2015-12-02T20:19:58.000Z","title":"기존 데이터베이스에 장고 어드민 통합하기","series":null}},{"id":"5618304a-c98c-51b4-913d-cfea72db5883","frontmatter":{"slug":"/gunicorn-장고-어드민-프로덕션-서버에-구동하기/","date":"2015-12-03T17:12:21.000Z","title":"gunicorn: 장고 어드민 프로덕션 서버에 구동하기","series":null}},{"id":"a6b7ae9c-8783-5193-8cc9-0b7a3e8c043c","frontmatter":{"slug":"/우분투에-django-admin-mysql-python-설치/","date":"2015-12-03T18:04:28.000Z","title":"우분투에 Django-admin, mysql-python 설치","series":null}},{"id":"9a5b6050-f550-5d60-ae51-8e218cbd0895","frontmatter":{"slug":"/mongodump-is-not-working-on-cronjob/","date":"2015-12-07T20:55:16.000Z","title":"mongodump 크론잡이 동작하지 않을 때","series":null}},{"id":"fb7eac54-5385-5250-bd31-9a539f88f2ce","frontmatter":{"slug":"/swagger-node/","date":"2015-12-11T11:40:31.000Z","title":"Swagger-node로 express 시작하기","series":null}},{"id":"ccfa77b6-5873-524d-9dcf-b5d96bef80e8","frontmatter":{"slug":"/javascript-decorator-pattern/","date":"2015-12-13T08:20:53.000Z","title":"Javascript Decorator Pattern","series":null}},{"id":"1b2752b4-06d2-5ea1-8742-aff047a5f1eb","frontmatter":{"slug":"/ng-plualize-단수-복수형-처리/","date":"2015-12-21T09:56:48.000Z","title":"ng-plualize 단수, 복수형 처리","series":null}},{"id":"44029db8-0fee-5a7f-bd67-00d0a54669fe","frontmatter":{"slug":"/2015-블로그-결산","date":"2016-01-01T22:42:19.000Z","title":"2015 블로그 결산","series":null}},{"id":"a72ff113-bb2c-5772-8b57-9caaaac10baf","frontmatter":{"slug":"/boot2docker-업데이트-v1-9/","date":"2016-01-03T18:26:20.000Z","title":"boot2docker 업데이트 (v1.9)","series":null}},{"id":"cea322b8-e6bf-570a-8067-6202292a7426","frontmatter":{"slug":"/mocha/","date":"2016-01-05T00:02:30.000Z","title":"NodeJS에서 가장 많이 사용하는 테스트 프레임웍, Mocha","series":null}},{"id":"2f650674-e408-5778-91f6-53ecf790b22c","frontmatter":{"slug":"/naming-uploaded-file-on-wordpress/","date":"2016-01-11T21:15:30.000Z","title":"워드프레스 파일 업로드 시 파일명 처리","series":null}},{"id":"ed89b772-cee1-5d8f-8680-68339ae34d6f","frontmatter":{"slug":"/add-fk-on-sequelize-migration/","date":"2016-01-12T22:17:40.000Z","title":"Sequelize로 마이그레이션 시 외래키 추가하기","series":null}},{"id":"66d6bdf2-1682-5093-8dd8-0c2fe37c40b5","frontmatter":{"slug":"/sequelize-migration/","date":"2016-01-14T09:21:17.000Z","title":"Sequelize 마이그레이션","series":null}},{"id":"d5946e62-e76c-55a6-9e2f-7d5be4fea3aa","frontmatter":{"slug":"/sequelize-model/","date":"2016-01-26T23:27:50.000Z","title":"Sequelize Modeling","series":null}},{"id":"74c2f2bf-31c1-52be-8396-67735ff4df32","frontmatter":{"slug":"/aws-서울-리전으로-블로그-이동/","date":"2016-01-30T19:35:32.000Z","title":"AWS 서울 리전으로 블로그 이동","series":null}},{"id":"22e37b6b-acc2-5299-8193-7d84e5c2d97e","frontmatter":{"slug":"/lodash/","date":"2016-01-31T15:14:43.000Z","title":"lodash","series":null}},{"id":"7400b75f-6e1a-52aa-9d2c-72a832b0e5b2","frontmatter":{"slug":"/morgan-helper/","date":"2016-02-01T08:29:51.000Z","title":"morgan-helper","series":null}},{"id":"e1d91cf1-f64a-5d9d-8c90-5b23f03a2af9","frontmatter":{"slug":"/sequelize-seed-시드-데이터-관리하기/","date":"2016-02-03T12:02:53.000Z","title":"Sequelize Seed - 시드 데이터 관리하기","series":null}},{"id":"90a02da2-2b5d-5495-a4d5-ad29ff45e437","frontmatter":{"slug":"/2016/02/07/from-wordpress-to-jekyll.html","date":"2016-02-07T00:00:00.000Z","title":"워드프레스에서 지킬로 블로그 이동","series":null}},{"id":"31533bac-be80-5a0e-ab0c-30486cc91391","frontmatter":{"slug":"/2016/02/07/jekyll-customizing.html","date":"2016-02-07T00:00:00.000Z","title":"Jekyll 커스터마이징 1 - 코멘트와 페이지네이션","series":null}},{"id":"d26caebe-5c94-5449-a635-2e87a1dc349e","frontmatter":{"slug":"/2016/02/20/beanstalk-in-seoul.html","date":"2016-02-20T00:00:00.000Z","title":"서울에서 Elastic Beanstalk 사용하기","series":null}},{"id":"0f550ec0-3a76-56e2-b495-4f46fcb841da","frontmatter":{"slug":"/2016/02/28/http-test-with-nock-mocha.html","date":"2016-02-28T00:00:00.000Z","title":"Nock, Mocha로 HTTP 테스트하기","series":null}},{"id":"8d627668-0604-516d-91c2-2b58e217f576","frontmatter":{"slug":"/2016/02/29/jekyll-tag.html","date":"2016-02-29T00:00:00.000Z","title":"Jekyll 커스터마이징 2 - 태그","series":null}},{"id":"998d294e-d3f3-55cb-b895-dc3fc1b1e4dc","frontmatter":{"slug":"/2016/03/21/must-use-error-in-reject.html","date":"2016-03-21T00:00:00.000Z","title":"Promise.reject()에 에러 객체를 넘겨줘야하는 이유","series":null}},{"id":"74b82911-12f0-5174-8d7a-06d8a7475d3b","frontmatter":{"slug":"/2016/03/29/mobile-rest-api.html","date":"2016-03-29T00:00:00.000Z","title":"서버 개발자 입장에서 바라본 모바일 API 디자인","series":null}},{"id":"11ce40bf-534f-5a87-9f7f-c24a52704666","frontmatter":{"slug":"/2016/04/28/es6.html","date":"2016-04-28T00:00:00.000Z","title":"ECMAScript2015(ES6)로 Node.JS 코딩하기","series":null}},{"id":"8961d13a-5d7a-5f6a-bc82-2323d4b69528","frontmatter":{"slug":"/2016/05/13/image-resizing-with-lambda.html","date":"2016-05-13T00:00:00.000Z","title":"람다를 이용해 이미지 리사이징 서버 만들기","series":null}},{"id":"d88c13cd-bc9f-5d5f-8a78-f021156edb9b","frontmatter":{"slug":"/2016/05/13/swagger-parser.html","date":"2016-05-13T00:00:00.000Z","title":"스웨거 문서 문법 체크하기","series":null}},{"id":"a202ae08-18a8-5947-9beb-6bae46201c62","frontmatter":{"slug":"/2016/05/17/aws-submit-2016.html","date":"2016-05-17T00:00:00.000Z","title":"AWS Summit 2016 참관 후기","series":null}},{"id":"1be92fa3-e888-5baf-8d48-304c0835a51a","frontmatter":{"slug":"/2016/06/29/querystring-body-in-express.html","date":"2016-06-29T00:00:00.000Z","title":"노드에서는 쿼리스트링 인코딩을 어떻게 처리할까?","series":null}},{"id":"71e017d0-bcdb-5b4d-9153-898d2866d371","frontmatter":{"slug":"/2016/07/13/sequelize-transaction.html","date":"2016-07-13T00:00:00.000Z","title":"Sequelize Transaction 사용할때 주의할 점","series":null}},{"id":"f03b0d04-612e-5de3-aad0-4098f41a290f","frontmatter":{"slug":"/2016/07/19/babel.html","date":"2016-07-19T00:00:00.000Z","title":"Babel로 ES6 코드 사용하기","series":null}},{"id":"2c6f54fe-0d97-5c3a-a43c-3216c26c0cda","frontmatter":{"slug":"/2016/07/28/istanbul.html","date":"2016-07-28T00:00:00.000Z","title":"Istanbul로 코드 커버리지 측정하기","series":null}},{"id":"ee775602-4101-529e-b01f-4de89bb5fe4c","frontmatter":{"slug":"/2016/08/03/ionic-hello-world.html","date":"2016-08-03T00:00:00.000Z","title":"Ionic으로 Hello world 시작하기","series":null}},{"id":"85a991c8-2ec0-5660-99f0-ab12a2e62089","frontmatter":{"slug":"/2016/08/10/nvm.html","date":"2016-08-10T00:00:00.000Z","title":"NVM으로 노드 버전 관리하기","series":null}},{"id":"a310a804-58e9-5e7e-9cc4-6a34a02a07e0","frontmatter":{"slug":"/2016/08/11/pyenv.html","date":"2016-08-11T00:00:00.000Z","title":"PYENV로 파이썬 버전 관리하기","series":null}},{"id":"86332ae4-e8df-5cea-8f04-7fc818cefe38","frontmatter":{"slug":"/2016/08/16/git-alias.html","date":"2016-08-16T00:00:00.000Z","title":"Git Alias 사용법: 깃 단축키 설정하는 방법 ","series":null}},{"id":"a2904f39-4b0b-56b4-aa7c-c57a192169ca","frontmatter":{"slug":"/2016/08/20/angular-facts-easy-to-miss.html","date":"2016-08-20T00:00:00.000Z","title":"앵귤러 개발자가 놓치기 쉬운 10가지 사실들","series":null}},{"id":"03fc6bce-616f-5cf1-881c-b91e2117df9f","frontmatter":{"slug":"/2016/08/23/about-angular2-quickstart-libraries.html","date":"2016-08-23T00:00:00.000Z","title":"Angular2 Quickstart에서 사용하는 라이브러리는 왜 이렇게 많을까?","series":null}},{"id":"3aea8aca-cfbc-5186-90ee-854f3e3d1e52","frontmatter":{"slug":"/2016/09/03/jscon2016.html","date":"2016-09-03T00:00:00.000Z","title":"JSCON 2016 참관 후기","series":null}},{"id":"1d670601-41cf-599d-aaba-707bf8461b68","frontmatter":{"slug":"/2016/09/27/imac-kernel-panic.html","date":"2016-09-27T00:00:00.000Z","title":"아이맥, 커널 패닉에 빠지다","series":null}},{"id":"3c2b419b-6302-548a-b4b1-2e614d497faf","frontmatter":{"slug":"/2016/10/13/how-to-make-yeoman-generator.html","date":"2016-10-13T00:00:00.000Z","title":"Yeoman 제너레이터 만들기","series":null}},{"id":"aecfdd81-63fe-527f-9617-906389e8e191","frontmatter":{"slug":"/2016/11/29/flow.html","date":"2016-11-29T00:00:00.000Z","title":"WebStorm에 Flow 기능 사용 후기","series":null}},{"id":"41bb8ced-10e8-50b0-afb3-6ef6bb929997","frontmatter":{"slug":"/2016/12/15/coroutine.html","date":"2016-12-15T00:00:00.000Z","title":"제너레이터와 프라미스를 이용한 비동기 처리","series":null}},{"id":"5ba7813d-77c8-59dc-9eed-927a0b38454f","frontmatter":{"slug":"/etc/2017/01/02/review-2016.html","date":"2017-01-02T00:00:00.000Z","title":"2016년을 보내며","series":null}},{"id":"9cdcc8f6-e441-5aeb-b711-e01bfbcc7010","frontmatter":{"slug":"/toy_project/2017/01/09/reading-book.html","date":"2017-01-09T00:00:00.000Z","title":"토이프로젝트_독서노트","series":null}},{"id":"57f8cc6c-456b-52ad-8452-de022281434d","frontmatter":{"slug":"/toy_project/2017/01/16/facebook-analysis.html","date":"2017-01-16T00:00:00.000Z","title":"토이프로젝트_페이스북 분석기","series":null}},{"id":"4120a468-f87e-513d-8a13-b8c5aee149b6","frontmatter":{"slug":"/etc/2017/01/16/so-you-want-to-be-a-functional-programmer-part-6.html","date":"2017-01-16T00:00:00.000Z","title":"함수형 프로그래머가 되고 싶다고? 파트6","series":null}},{"id":"cebffc83-e62e-50f8-b850-a83420421dba","frontmatter":{"slug":"/toy_project/2017/01/17/life-tracker.html","date":"2017-01-17T00:00:00.000Z","title":"토이프로젝트_라이프트래커","series":null}},{"id":"2856a138-4706-56bd-b0c8-02c2117f129d","frontmatter":{"slug":"/node/2017/01/27/node-io-deep.html","date":"2017-01-27T00:00:00.000Z","title":"노드 개발자가 IO 작업을 시작하면 무슨일이 일어날까?","series":null}},{"id":"b6377c8e-66f4-5d53-adec-96d9f178f80a","frontmatter":{"slug":"/node/2017/02/06/utf8mb4-in-sequelize.html","date":"2017-02-06T00:00:00.000Z","title":"시퀄라이즈에서 이모티콘 저장하기","series":null}},{"id":"35d91bb5-98f3-5f4f-8db9-cb45193f9787","frontmatter":{"slug":"/js/2017/02/17/dependency-injection.html","date":"2017-02-17T00:00:00.000Z","title":"의존성 주입","series":null}},{"id":"9128e181-bfa8-593c-84d9-1fc0d44a4ec1","frontmatter":{"slug":"/aws/2017/03/06/apex.html","date":"2017-03-06T00:00:00.000Z","title":"Apex로 좀 더 편리한 람다 개발환경 만들기","series":null}},{"id":"de5007a0-1a75-5736-9cd7-b4885fde9582","frontmatter":{"slug":"/vue/2017/03/27/vue.html","date":"2017-03-27T00:00:00.000Z","title":"Vue.js 살펴보기","series":null}},{"id":"ed24b3fb-491f-595a-9515-2e9cb8e46e6c","frontmatter":{"slug":"/tool/2017/03/28/jasmine.html","date":"2017-03-28T00:00:00.000Z","title":"자스민으로 프론트엔드 테스트 코드 작성하기","series":null}},{"id":"15650a98-04e9-5937-9da5-3a2fee5ed806","frontmatter":{"slug":"/vue/2017/03/29/is-vue-better-than-angular-react.html","date":"2017-03-29T00:00:00.000Z","title":"과연 Vue.js가 앵귤러나 리엑트보다 좋을까?","series":null}},{"id":"d72a9a2b-6f5f-539b-bc75-0204b32fb4b0","frontmatter":{"slug":"/vue/2017/04/19/vue-component-test.html","date":"2017-04-19T00:00:00.000Z","title":"Vue 글로벌 컴포넌트 테스트","series":null}},{"id":"453c7708-f823-5e2e-af12-c62bf207733e","frontmatter":{"slug":"/js/2017/05/15/webpack.html","date":"2017-05-15T00:00:00.000Z","title":"웹팩의 기본 개념","series":null}},{"id":"659a231a-ee47-567e-9166-0b1775cebc2c","frontmatter":{"slug":"/js/2017/05/22/webpack-file-loader.html","date":"2017-05-22T00:00:00.000Z","title":"웹팩의 file-loader와 url-loader","series":null}},{"id":"e9f157e6-ad70-52fa-89db-c06e7eb3e1cf","frontmatter":{"slug":"/node/2017/07/03/node-stream-you-need-to-know.html","date":"2017-07-03T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 1편","series":null}},{"id":"e524157f-c01b-561d-b3f0-e413a955b115","frontmatter":{"slug":"/node/2017/08/07/node-stream-you-need-to-know-2.html","date":"2017-08-07T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 2편","series":null}},{"id":"dc76eecc-3b55-566c-998a-1cbc7ba552e5","frontmatter":{"slug":"/node/2017/08/12/node-stream-you-need-to-know-3.html","date":"2017-08-12T00:00:00.000Z","title":"Node.js Stream 당신이 알아야할 모든 것 3편","series":null}},{"id":"e8ce11af-8f30-5d39-9a5a-97eaaf441224","frontmatter":{"slug":"/node/2017/08/17/express-error-handling.html","date":"2017-08-17T00:00:00.000Z","title":"에러 처리를 위한 익스프레스 가이드","series":null}},{"id":"112e7a7e-f3d7-5d7a-b093-ff4362b35552","frontmatter":{"slug":"/tool/2017/09/16/gulp-workflow-for-frentend-development.html","date":"2017-09-16T00:00:00.000Z","title":"프론트엔드 개발을 위한 Gulp","series":null}},{"id":"67a4c35a-c35a-5a93-9f2c-6d8ac9681c14","frontmatter":{"slug":"/2017/10/22/js-context-binding.html","date":"2017-10-22T00:00:00.000Z","title":"자바스크립트 this 바인딩 우선순위","series":null}},{"id":"360d64a9-9f15-5f15-bd8a-bcea9e9f7ee1","frontmatter":{"slug":"/2018/01/01/review-2017.html","date":"2018-01-01T00:00:00.000Z","title":"2017년을 보내며","series":null}},{"id":"a43e82bd-515a-52e5-8cd2-ff2d4ba8c800","frontmatter":{"slug":"/2018/01/25/before-jquery.html","date":"2018-01-25T00:00:00.000Z","title":"jQuery 보다 먼저 알았으면 좋았을 것들","series":null}},{"id":"7ca873e9-65c0-5146-8237-22bddbe34e4e","frontmatter":{"slug":"/2018/03/26/vue-authentication.html","date":"2018-03-26T00:00:00.000Z","title":"Vuex, Vue-router, Axios를 이용한 SPA 인증 구현","series":null}},{"id":"56113f8b-657d-5959-9894-211bf5014d62","frontmatter":{"slug":"/2018/04/07/vue-router.html","date":"2018-04-07T00:00:00.000Z","title":"Vue-Router 살펴보기","series":null}},{"id":"87de7890-8c89-5f56-8d88-fe82603df83d","frontmatter":{"slug":"/2018/05/12/extended-component.html","date":"2018-05-12T00:00:00.000Z","title":"UI 컴포넌트 확장","series":null}},{"id":"314520a6-e832-5048-b62a-2e68f19402ce","frontmatter":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z","title":"VueJS 폼 검증","series":null}},{"id":"3de6aef7-0330-5ccc-bde8-07317f92521c","frontmatter":{"slug":"/2018/07/16/react-app-overview.html","date":"2018-07-16T00:00:00.000Z","title":"React로 만든 프로젝트 톺아보기","series":null}},{"id":"d891a845-4c2e-527a-95ca-0627cb35c907","frontmatter":{"slug":"/2018/08/19/express-travis-beanstalk.html","date":"2018-08-19T00:00:00.000Z","title":"리액트, 노드 백엔드 통합 후 CI 연동하기","series":null}},{"id":"8a02ec18-6cab-5e07-b2df-0c4e47584448","frontmatter":{"slug":"/2018/10/13/ant-design-101.html","date":"2018-10-13T00:00:00.000Z","title":"앤트 디자인 - 어드민 개발을 위한 프레임웍","series":null}},{"id":"6ab56ddf-2cce-58f2-ac63-3a7ab486890d","frontmatter":{"slug":"/2018/10/21/aws-sns-to-slack.html","date":"2018-10-21T00:00:00.000Z","title":"AWS를 슬랙으로 모니터링","series":null}},{"id":"a2c3f320-56f4-5bb8-9776-9525cae7f813","frontmatter":{"slug":"/2018/11/08/remote-work.html","date":"2018-11-08T00:00:00.000Z","title":"비오는 날, 집에서 일하기 좋은 날씨다","series":null}},{"id":"43f5ac37-fff8-57a4-ae63-b8f954d8e1c3","frontmatter":{"slug":"/series/2018/12/01/node-web-0_index.html","date":"2018-12-01T00:00:00.000Z","title":"🌳[Node.js 코드랩] 소개 및 목차","series":null}},{"id":"9832bcac-0792-56f7-bc6e-b342698962c0","frontmatter":{"slug":"/think/2018/12/22/codelab-review.html","date":"2018-12-22T00:00:00.000Z","title":"코드랩 시리즈를 마치고 느낀점","series":null}},{"id":"4b3b25aa-2bcf-5b3f-adb3-e5c03c8c5be2","frontmatter":{"slug":"/think/2019/01/03/record.html","date":"2019-01-03T00:00:00.000Z","title":"기록","series":null}},{"id":"66cf0204-79f9-5765-8ff4-dfca8e35ca97","frontmatter":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z","title":"Go fmt 패키지","series":null}},{"id":"c407bbb9-4210-5775-9a60-3017d9905811","frontmatter":{"slug":"/dev/2019/01/14/go-time.html","date":"2019-01-14T00:00:00.000Z","title":"Go time 패키지","series":null}},{"id":"bcf80caf-500c-5ea0-8bf6-ef54d781eff0","frontmatter":{"slug":"/dev/2019/01/18/go-encoding-json.html","date":"2019-01-18T00:00:00.000Z","title":"Go encoding/json 패키지","series":null}},{"id":"d6a20d9d-d9eb-5b85-80d2-e808bf97d1e3","frontmatter":{"slug":"/dev/2019/02/07/go-net-http.html","date":"2019-02-07T00:00:00.000Z","title":"Go net/http 패키지","series":null}},{"id":"4ba7dfdb-4056-5737-8f76-be00ac8a5133","frontmatter":{"slug":"/dev/2019/02/18/go-todo-web-application.html","date":"2019-02-18T00:00:00.000Z","title":"Go로 투두 웹 어플리케이션 만들기","series":null}},{"id":"21085b17-99ef-5505-af1b-a6e75d2b62b4","frontmatter":{"slug":"/think/2019/04/15/change-pain-concentration.html","date":"2019-04-15T00:00:00.000Z","title":"변화와 고통 그리고 집중","series":null}},{"id":"3df02d9c-cf0c-5823-99ae-e22692fba2fa","frontmatter":{"slug":"/think/2019/04/26/running-machine-load.html","date":"2019-04-26T00:00:00.000Z","title":"러닝머신과 도로 위","series":null}},{"id":"e0b31087-d6ad-5e2f-9056-2ccff1e5be27","frontmatter":{"slug":"/dev/2019/06/25/react-ts.html","date":"2019-06-25T00:00:00.000Z","title":"리액트, 타입스크립트 시작하기","series":null}},{"id":"a15b1fa7-c186-55cf-b971-19647a9deb22","frontmatter":{"slug":"/dev/2019/07/08/react-router-ts.html","date":"2019-07-08T00:00:00.000Z","title":"리액트 라우터 사용하기 (타입스크립트 버전)","series":null}},{"id":"5fe2d73c-24c5-5eab-80e2-d1dbe13d776e","frontmatter":{"slug":"/dev/2019/07/15/react-redux-ts.html","date":"2019-07-15T00:00:00.000Z","title":"리액트 리덕스 사용하기 (타입스크립트 버전)","series":null}},{"id":"1a890f3c-1c7c-5d44-81c6-2eaba42b2435","frontmatter":{"slug":"/dev/2019/07/22/react-saga-ts-1.html","date":"2019-07-22T00:00:00.000Z","title":"리덕스 사가 사용하기 (타입스크립트 버전) - 1편","series":null}},{"id":"dea55f0e-7737-5714-9443-fba757dffe64","frontmatter":{"slug":"/dev/2019/07/29/react-saga-ts-2.html","date":"2019-07-29T00:00:00.000Z","title":"리덕스 사가 사용하기 (타입스크립트 버전) - 2편","series":null}},{"id":"1d3326c8-67b6-5289-abc5-8f7006534840","frontmatter":{"slug":"/dev/2019/08/12/ie-cache.html","date":"2019-08-12T00:00:00.000Z","title":"IE의 ajax 캐시 이슈를 처리하는 방법","series":null}},{"id":"5c063b09-581f-58bc-9270-725dfdfb3bb7","frontmatter":{"slug":"/dev/2020/01/28/component-design.html","date":"2020-01-28T00:00:00.000Z","title":"컴포넌트의 역할 분리","series":null}},{"id":"805e79cc-55d7-5ea0-ab94-6be502efab6b","frontmatter":{"slug":"/dev/2020/02/10/git-usage.html","date":"2020-02-10T00:00:00.000Z","title":"깃(Git) 개념과 상황별 팁","series":null}},{"id":"abc5b962-3286-503f-88e0-8f4e1088b8b2","frontmatter":{"slug":"/dev/2020/03/09/flex.html","date":"2020-03-09T00:00:00.000Z","title":"플렉스(flex) 박스, 한 번 정리하고 가자","series":null}},{"id":"1ed03344-ad91-598d-8ef4-c88a827d320a","frontmatter":{"slug":"/dev/2020/03/20/role-based-react-router.html","date":"2020-03-20T00:00:00.000Z","title":"리액트 라우터를 활용한 권한별 라우팅 제어","series":null}},{"id":"aaad5576-74ed-56ee-8f06-5e6eb593432f","frontmatter":{"slug":"/dev/2020/03/24/circular-dependancy.html","date":"2020-03-24T00:00:00.000Z","title":"순환 참조","series":null}},{"id":"c446c409-ab23-5345-ba31-afbdde7a2e9d","frontmatter":{"slug":"/think/2020/03/27/imac-ssd-replacement.html","date":"2020-03-27T00:00:00.000Z","title":"오래된 아이맥, SSD 교체하기","series":null}},{"id":"ba6e4b54-107c-54fd-9d46-6016ba981f5b","frontmatter":{"slug":"/think/2020/03/30/remote-work.html","date":"2020-03-30T00:00:00.000Z","title":"슬기로운 재택생활","series":null}},{"id":"6d60e670-7f29-5e64-8b70-ee48bb8676a9","frontmatter":{"slug":"/dev/2020/04/05/vscode.html","date":"2020-04-05T00:00:00.000Z","title":"알아두면 쓸데있는 VSCode 노하우","series":null}},{"id":"9e3d1c8e-8666-5f11-afde-ef82ed7dcf67","frontmatter":{"slug":"/dev/2020/04/18/interface-to-class.html","date":"2020-04-18T00:00:00.000Z","title":"인터페이스만 사용하다가 클래스를 다시 보았다","series":null}},{"id":"c7ee235c-2361-5766-a69c-ae8a45e48486","frontmatter":{"slug":"/dev/2020/04/30/nodemon-EADDRINUSE.html","date":"2020-04-30T00:00:00.000Z","title":"노드몬(nodemon) 사용시 포트 충돌 이슈","series":null}},{"id":"7533dec3-4b29-5b3a-8afe-84ff6998e58d","frontmatter":{"slug":"think/2020/05/11/test.html","date":"2020-05-11T00:00:00.000Z","title":"테스트 코드는 꼭 필요한가요?","series":null}},{"id":"ac25a7b7-74db-51ea-be90-584f2f3d443c","frontmatter":{"slug":"/dev/2020/05/18/filename.html","date":"2020-05-18T00:00:00.000Z","title":"파일명 컨벤션과 웹팩/노드 오류","series":null}},{"id":"6a5c753f-338b-5804-9ed2-9624149559e9","frontmatter":{"slug":"/dev/2020/05/25/supertest.html","date":"2020-05-25T00:00:00.000Z","title":"Node.js로 만든 API 테스트(supertest)","series":null}},{"id":"d0866d1d-38e8-544f-813f-4ec1a870c492","frontmatter":{"slug":"/dev/2020/06/08/html5-form-validation.html","date":"2020-06-08T00:00:00.000Z","title":"HTML5 폼 검증에 대해 정리해 보자","series":null}},{"id":"3e75a06b-ecc5-55ca-b749-9777ada224fd","frontmatter":{"slug":"/dev/2020/06/20/passport.html","date":"2020-06-20T00:00:00.000Z","title":"패스포트 동작 원리와 인증 구현","series":null}},{"id":"cbfcbe35-071d-52f6-ad2d-287c1eea6904","frontmatter":{"slug":"/dev/2020/06/27/node-sass.html","date":"2020-06-27T00:00:00.000Z","title":"node-sass가 노드 버전에 의존적이 이유","series":null}},{"id":"01148b49-e327-5861-8a16-32821900b2d5","frontmatter":{"slug":"/dev/2020/07/06/sequelize-model.html","date":"2020-07-06T00:00:00.000Z","title":"시퀄라이즈 Model 클래스 활용하기","series":null}},{"id":"bea86ec8-71d2-553f-b16d-41e2ade2a96c","frontmatter":{"slug":"/dev/2020/07/18/webpack-dev-middleware.html","date":"2020-07-18T00:00:00.000Z","title":"웹팩 개발 서버로 부족하다면 webpack-dev-middleware를 사용해 보자","series":null}},{"id":"aa2cc795-c444-5961-bad1-430b25228113","frontmatter":{"slug":"/dev/2020/07/30/gatsby.html","date":"2020-07-30T00:00:00.000Z","title":"Gatsby.js 훑어보기","series":null}},{"id":"04d01cb3-6f52-50b8-9d51-a78b9ff407d8","frontmatter":{"slug":"/dev/2020/08/15/react-helmet.html","date":"2020-08-15T00:00:00.000Z","title":"react-helmet의 동작 방식","series":null}},{"id":"7565246b-33bc-5814-a673-7bb83fc20536","frontmatter":{"slug":"/dev/2020/08/19/gatsby-image.html","date":"2020-08-19T00:00:00.000Z","title":"개츠비의 이미지 처리 방식","series":null}},{"id":"99400347-75f4-5290-a3a0-9ee76ba504f4","frontmatter":{"slug":"/dev/2020/08/21/gatsby-prefetch.html","date":"2020-08-21T00:00:00.000Z","title":"개츠비 프리로딩과 프리패치","series":null}},{"id":"a37aecc8-3853-5647-8644-d6d2652caeea","frontmatter":{"slug":"/dev/2020/10/10/mobx.html","date":"2020-10-10T00:00:00.000Z","title":"상태관리 라이브러리 mobx","series":null}},{"id":"e1a2b701-acb7-52ce-a379-9f28701536c6","frontmatter":{"slug":"/dev/2020/10/25/styled-components.html","date":"2020-10-25T00:00:00.000Z","title":"styled-component로 리액트 컴포넌트 만들기","series":null}},{"id":"0d59cddc-08ac-5888-a869-2303e7dd42d5","frontmatter":{"slug":"/think/2020/11/01/work-density.html","date":"2020-11-01T00:00:00.000Z","title":"업무 밀도","series":null}},{"id":"f033f74d-74dd-531a-bbf9-45190d8fee4c","frontmatter":{"slug":"/dev/2020/11/08/serverless-1.html","date":"2020-11-08T00:00:00.000Z","title":"서버리스 웹 애플리케이션 만들기","series":null}},{"id":"aa28e9e8-8dd9-56c4-bab1-785a1230f1c5","frontmatter":{"slug":"/think/2020/11/14/the-reason-i-write.html","date":"2020-11-14T00:00:00.000Z","title":"블로그에 글을 쓰는 이유","series":null}},{"id":"7e6576c8-9cbf-5955-9221-cfed230a9bcb","frontmatter":{"slug":"/think/2020/12/21/happy-now.html","date":"2020-12-21T00:00:00.000Z","title":"\"당장 야금야금 부지런히 행복해야 돼\"","series":null}},{"id":"d30a19a5-a934-5348-b8f4-aa101f10096d","frontmatter":{"slug":"/think/2020/12/29/frontend-developer-roles.html","date":"2020-12-29T00:00:00.000Z","title":"프론트엔드 개발자의 역할","series":null}},{"id":"fbd0cf8f-5bfa-5e5d-8b46-be29fe77bcaa","frontmatter":{"slug":"/think/2021/01/07/sense-of-balence.html","date":"2021-01-07T00:00:00.000Z","title":"균형 감각","series":null}},{"id":"74cf28eb-9189-5832-ac7f-649357ac2126","frontmatter":{"slug":"/think/2021/01/05/2020.html","date":"2021-01-15T00:00:00.000Z","title":"아, 전설적인 한 해였다","series":null}},{"id":"aac493e8-4638-595e-8482-df54e26f62a7","frontmatter":{"slug":"/2021-01-scrap","date":"2021-01-31T00:00:00.000Z","title":"2021-01 스크랩","series":null}},{"id":"9dd6b638-7130-5902-b1a3-73e45475839b","frontmatter":{"slug":"/2021-02-scrap","date":"2021-02-28T00:00:00.000Z","title":"2021-02 스크랩","series":null}},{"id":"a9171532-e8c0-5ff1-9606-6437e2733b55","frontmatter":{"slug":"/dev/2021/03/08/babel-typescript.html","date":"2021-03-08T00:00:00.000Z","title":"babel-loader와 ts-loader의 빌드 결과가 다른 현상","series":null}},{"id":"98420aad-1b2e-513f-ad6a-7e06f8494e96","frontmatter":{"slug":"/dev/2021/03/18/type-guard.html","date":"2021-03-18T00:00:00.000Z","title":"유니온 타입과 타입 가드","series":null}},{"id":"7512278a-0cb8-556f-acd7-a8da451aa331","frontmatter":{"slug":"/dev/2021/03/22/i18n.html","date":"2021-03-22T00:00:00.000Z","title":"어플리케이션 다국어 기능과 번역가와 협업 방법","series":null}},{"id":"39ac178f-a3f1-550c-ad1c-2e1f448e1e89","frontmatter":{"slug":"/dev/2021/03/29/lambda-limits.html","date":"2021-03-29T00:00:00.000Z","title":"AWS 람다 용량 관리","series":null}},{"id":"1df20322-bc4a-555a-8b7b-1bbaa1a805e1","frontmatter":{"slug":"/2021-03-scrap","date":"2021-03-31T00:00:00.000Z","title":"2021-03 스크랩","series":null}},{"id":"374b4535-49b2-57ae-af8c-acfe259f5d71","frontmatter":{"slug":"/dev/2021/04/01/aws-lambda-cold-start.html","date":"2021-04-01T00:00:00.000Z","title":"AWS 람다 초기 응답 속도 개선하기","series":null}},{"id":"992678cd-553c-5eec-b410-f771661db0ec","frontmatter":{"slug":"/think/2021/04/29/my-first-capacitive-keyboard.html","date":"2021-04-29T00:00:00.000Z","title":"나의 첫 무접점 키보드 ","series":null}},{"id":"db0eb4db-e8e7-53ea-97b6-90b08f8f66ce","frontmatter":{"slug":"/2021-04-scrap","date":"2021-04-30T00:00:00.000Z","title":"2021-04 스크랩","series":null}},{"id":"cd2d3e17-d50f-5c0e-a84b-60bf38832e4a","frontmatter":{"slug":"/dev/2021/05/05/react-context.html","date":"2021-05-05T00:00:00.000Z","title":"리액트 컨텍스트","series":null}},{"id":"e3d4977a-2f56-550c-b5b6-ae699ea40f0e","frontmatter":{"slug":"/dev/2021/05/17/css-variable.html","date":"2021-05-17T00:00:00.000Z","title":"CSS 변수와 웹사이트 테마","series":null}},{"id":"b444f9a0-f081-556e-90fb-cfdc08180dcc","frontmatter":{"slug":"/2021-06-scrap","date":"2021-06-30T00:00:00.000Z","title":"2021-06 스크랩","series":null}},{"id":"f984c1ad-3fec-57b6-a99b-75371528af2d","frontmatter":{"slug":"/think/2021/07/19/design-system-and-streaming.html","date":"2021-07-19T00:00:00.000Z","title":"디자인시스템과 라이브 방송","series":null}},{"id":"e747904c-3b1d-5f51-93c1-41832d9402c9","frontmatter":{"slug":"/2021-07-scrap","date":"2021-07-31T00:00:00.000Z","title":"2021-07 스크랩","series":null}},{"id":"f47bac45-3a35-525d-b197-9381d44b7849","frontmatter":{"slug":"/dev/2021/08/09/testing-frontend.html","date":"2021-08-09T00:00:00.000Z","title":"프론트엔드 테스트할 기회가 생겼다","series":null}},{"id":"f77f8eac-eff1-5e91-b07d-392246ebd823","frontmatter":{"slug":"/think/2021/08/23/customizing-keyboard.html","date":"2021-08-23T00:00:00.000Z","title":"한성 키보드를 매직 키보드와 유사하게 사용하기","series":null}},{"id":"f017374f-35c0-549f-9ae7-c79828805c4f","frontmatter":{"slug":"/dev/2021/08/26/utterances.html","date":"2021-08-26T00:00:00.000Z","title":"블로그 댓글 서비스 교체: Utterances","series":null}},{"id":"b25ba24d-89af-575a-93df-d81fc85a6b53","frontmatter":{"slug":"/dev/2021/08/31/disqus-to-utterances.html","date":"2021-08-31T00:00:00.000Z","title":"블로그 댓글 서비스 교체: Disqus → Utterances 데이터 이관 ","series":null}},{"id":"8e1da121-6d13-5083-9774-764e7b68fa52","frontmatter":{"slug":"/2021-08-scrap","date":"2021-08-31T00:00:00.000Z","title":"2021-08 스크랩","series":null}},{"id":"4c3e8153-d4d6-50c8-a49a-73bc5602540d","frontmatter":{"slug":"/2021-09-scrap","date":"2021-09-30T00:00:00.000Z","title":"2021-09 스크랩","series":null}},{"id":"780bc86f-d562-5d9e-8f18-654b86bb888d","frontmatter":{"slug":"/dev/2021/10/29/return-to-intellij.html","date":"2021-10-29T00:00:00.000Z","title":"최근에 발견한 인텔리제이 기능과 플러그인","series":null}},{"id":"3176fb65-d5f2-5b44-b79b-86e688a491af","frontmatter":{"slug":"/2021-10-scrap","date":"2021-10-31T00:00:00.000Z","title":"2021-10 스크랩","series":null}},{"id":"f83c88c8-8353-5def-91a8-be60fc835b8b","frontmatter":{"slug":"/2021-11-scrap","date":"2021-11-30T00:00:00.000Z","title":"2021-11 스크랩","series":null}},{"id":"13a0dee0-866c-5ab2-b04b-bd01ee179de0","frontmatter":{"slug":"/2022-01-scrap","date":"2022-01-31T00:00:00.000Z","title":"2022-01 스크랩","series":null}},{"id":"52956110-9617-5083-97f3-4ef83287995f","frontmatter":{"slug":"/2022/02/28/scrap","date":"2022-02-28T00:00:00.000Z","title":"2022-02 스크랩","series":null}},{"id":"f099d10e-6531-5e9a-8377-862c75c3a7e9","frontmatter":{"slug":"/dev/2022/03/29/react-form-and-formik.html","date":"2022-03-29T00:00:00.000Z","title":"리액트로 폼(Form) 다루기","series":null}},{"id":"4a6751ec-e2d3-56ae-afa2-72002d3c6bbd","frontmatter":{"slug":"/2022/03/31/scrap","date":"2022-03-31T00:00:00.000Z","title":"2022-03 스크랩","series":null}},{"id":"c9d23876-b93c-586b-9231-d2726093a5fa","frontmatter":{"slug":"/dev/2022/04/11/use-state.html","date":"2022-04-11T00:00:00.000Z","title":"리액트 useState는 어떤 모습일까?","series":null}},{"id":"a6aff91a-32ef-58e3-89d4-0badc43c4891","frontmatter":{"slug":"/dev/2022/04/24/use-effect.html","date":"2022-04-24T00:00:00.000Z","title":"리액트 useEffect는 어떤 모습일까?","series":null}},{"id":"8de7d896-c96a-5c6b-9faf-967ef5891800","frontmatter":{"slug":"/dev/2022/04/28/use-context.html","date":"2022-04-28T00:00:00.000Z","title":"리액트 useContext는 어떤 모습일까?","series":null}},{"id":"5f43d3af-cf49-59b7-be4d-531798b2558e","frontmatter":{"slug":"/2022/04/30/scrap","date":"2022-04-30T00:00:00.000Z","title":"2022-04 스크랩","series":null}},{"id":"c8bce8d5-bd59-5653-b5a8-69e1c95b1727","frontmatter":{"slug":"/dev/2022/05/06/react-router.html","date":"2022-05-06T00:00:00.000Z","title":"리액트 라우터 만들기 ","series":null}},{"id":"44f09dcd-815b-51b5-a64f-153f11704dd3","frontmatter":{"slug":"/2022/05/20/react-strict-mode","date":"2022-05-20T00:00:00.000Z","title":"리액트 StrictMode","series":null}},{"id":"bc3a3b27-045e-53fb-ba1c-eb87ce52a3de","frontmatter":{"slug":"/2022/05/28/react-high-order-component","date":"2022-05-28T00:00:00.000Z","title":"리액트 고차 컴포넌트(HOC)","series":null}},{"id":"8308a913-da9e-58f4-98bb-3c5004f60802","frontmatter":{"slug":"/2022/05/31/scrap","date":"2022-05-31T00:00:00.000Z","title":"2022-05 스크랩","series":null}},{"id":"901176fd-3ca7-5ccd-858c-532053b40646","frontmatter":{"slug":"/2022/05/31/react-ref","date":"2022-05-31T00:00:00.000Z","title":"리액트 Ref","series":null}},{"id":"dfe9493b-0f0a-5f04-9f2a-3e91919d3275","frontmatter":{"slug":"/2022/06/02/react-portal","date":"2022-06-02T00:00:00.000Z","title":"리액트 Portal","series":null}},{"id":"df227d3c-3841-59e3-ad3a-a468d143c5b9","frontmatter":{"slug":"/2022/06/30/scrap","date":"2022-06-30T00:00:00.000Z","title":"2022-06 스크랩","series":null}},{"id":"33fa88c5-eb3d-5147-8c5c-eb6275b88c83","frontmatter":{"slug":"/2022/07/31/npm-workspace","date":"2022-07-31T00:00:00.000Z","title":"NPM 워크스페이스와 모노레포","series":null}}]}},"pageContext":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z","series":null,"videoId":null,"previous":{"frontmatter":{"slug":"/think/2019/01/03/record.html","date":"2019-01-03T00:00:00.000Z","title":"기록","category":null,"series":null,"videoId":null}},"next":{"frontmatter":{"slug":"/dev/2019/01/14/go-time.html","date":"2019-01-14T00:00:00.000Z","title":"Go time 패키지","category":"개발","series":null,"videoId":null}}}},
    "staticQueryHashes": ["3044774879"]}