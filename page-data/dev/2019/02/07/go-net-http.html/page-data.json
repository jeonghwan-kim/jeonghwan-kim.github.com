{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/dev/2019/02/07/go-net-http.html","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"d6a20d9d-d9eb-5b85-80d2-e808bf97d1e3","excerpt":"웹 어플리케이션을 개발하려고 Go 언어를 살펴보기 시작했다.\n앞서 정리한 몇 가지 기본 패키지는 net/http 패키지를 사용하기 위한 준비 과정이라 생각하자.\n이번에는 네트웍 프로그래밍을 위한 net/http 패키지 사용법을 정리해 보겠다. Get 요청하기 브라우져는 사용자가 입력한…","html":"<p>웹 어플리케이션을 개발하려고 Go 언어를 살펴보기 시작했다.\n<a href=\"/tags#go\">앞서 정리한 몇 가지 기본 패키지</a>는 net/http 패키지를 사용하기 위한 준비 과정이라 생각하자.\n이번에는 네트웍 프로그래밍을 위한 net/http 패키지 사용법을 정리해 보겠다.</p>\n<h2 id=\"get-요청하기\" style=\"position:relative;\"><a href=\"#get-%EC%9A%94%EC%B2%AD%ED%95%98%EA%B8%B0\" aria-label=\"get 요청하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get 요청하기</h2>\n<p>브라우져는 사용자가 입력한 url를 통해 해당 웹페이지를 요청한다.\n이처럼 웹상의 리소스를 요청하려면 패키지의 <strong>Get</strong> 함수를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>resp <span class=\"token operator\">*</span>Response<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>요청 주소 url을 인자로 받아 Response를 반환하는 함수다.\n예제로 구글의 robots.txt 파일을 요청해서 응답 결과를 확인해겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">url <span class=\"token operator\">:=</span> <span class=\"token string\">\"https://google.com/robots.txt\"</span>\n\nresp<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\nrobots<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\nresp<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> robots<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get으로 요청하여 서버로 부터 응답을 받으면 데이터를 읽은 뒤 Close 함수로 바디를 닫아 주어야 한다.</p>\n<p>터미널에 출력하면 수신한 파일 내용을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">User-agent: *\nDisallow: /search\nAllow: /search/about\n// 생략</code></pre></div>\n<h2 id=\"client와-request로-요청-제어하기\" style=\"position:relative;\"><a href=\"#client%EC%99%80-request%EB%A1%9C-%EC%9A%94%EC%B2%AD-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0\" aria-label=\"client와 request로 요청 제어하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client와 Request로 요청 제어하기</h2>\n<p>Get 함수는 내부에서 <strong>Client</strong> 구조체를 사용하고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>resp <span class=\"token operator\">*</span>Response<span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> DefaultClient<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> DefaultClient <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>Client<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>요청에 대한 세부적인 제어를 하려면 Client를 하나 생성해야 한다.\n가령 자동으로 리다이렉트하는 서버일 경우 요청단에서 이를 차단하여 한 번만 요청할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">client <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>http<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">{</span>\n  CheckRedirect<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>req <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">,</span> via <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redirectPolicyFunc()\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span>ErrUseLastResponse <span class=\"token comment\">// 자동 리다이렉트 하지 않음</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Client 생성시 CheckRedirect 훅에 리다이렉트 관련 동작을 정의했다.\nErrUseLastResponse 값을 리턴하면 리다이렉트를 처리할때 다음 요청을 보내지 않겠다는 의미다.</p>\n<p>더불어 <strong>Request</strong> 구조체도 필요한데 NewRequest 함수로 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">NewRequest</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> url <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> body io<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Request<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>요청 메소드, 주소, 바디 데이터를 인자로 받아 Request를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">req<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">NewRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://google.com/robots.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\nreq<span class=\"token punctuation\">.</span>Header<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"set-cookie\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"foo=bar\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 헤더값 설정</span></code></pre></div>\n<p>반환된 Request는 헤더 정보를 담고있는 Header의 Add 메소드로 요청 헤더를 설정할 수 있다.</p>\n<p>이렇게 준비한 Client와 Request로 요청을 보내기 위해 Client의 Do 메소드를 사용하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>Client<span class=\"token punctuation\">)</span> <span class=\"token function\">Do</span><span class=\"token punctuation\">(</span>req <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Response<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이것은 응답 정보를 담은 Response를 반환하기 때문에 ReadAll 함수로 읽을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">resp<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Do</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span>\nrobots<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> ioutil<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAll</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span>\nresp<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> robots<span class=\"token punctuation\">)</span></code></pre></div>\n<p>서버를 구동한뒤 요청을 보내보면 리다이렉트 요청을 하지 않았기 때문에 다음과 같은 응답을 받게 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">redirectPolicyFunc()\n\n&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;\n&lt;TITLE&gt;301 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;\n&lt;H1&gt;301 Moved&lt;/H1&gt;\nThe document has moved\n&lt;A HREF=&quot;https://www.google.com/robots.txt&quot;&gt;here&lt;/A&gt;.\n&lt;/BODY&gt;&lt;/HTML&gt;</code></pre></div>\n<h2 id=\"서버-구현을-위한-handler\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EA%B5%AC%ED%98%84%EC%9D%84-%EC%9C%84%ED%95%9C-handler\" aria-label=\"서버 구현을 위한 handler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 구현을 위한 Handler</h2>\n<p>브라우져가 서버로 요청을 만들면 서버는 해당 요청을 처리하고 응답한다.\n이러한 요청/응답 패턴을 추상화한 것이 바로 <strong>Handler</strong> 인터페이스다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Handler <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>ResponseWriter<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>웹 서버에서 \"핸들러\"라는 이름은 보통 라우팅할 때 경로에 따른 로직을 가리킬 때 사용한다.\nHandler 인터페이스도 마찬가지 역할을 하는데 ServeHTTP 메소드가 응답 헤더와 데이터를 ResponseWriter로 보내는 역할을 한다.</p>\n<h2 id=\"서버를-구동하는-listenandserve\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B5%AC%EB%8F%99%ED%95%98%EB%8A%94-listenandserve\" aria-label=\"서버를 구동하는 listenandserve permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버를 구동하는 ListenAndServe</h2>\n<p>Handler 인터페이스는 어디에서 사용할까? 가장 쉽게 발견할 수 있는 곳이 바로 서버를 구동하는 <strong>ListenAndServe</strong> 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span>addr <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> handler Handler<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span></code></pre></div>\n<p>리슨할 주소 정보와 핸들러를 인자로 받아 서버를 요청대기상태로 만드는 일을하는 함수다.</p>\n<h2 id=\"정적-파일-서버를-만들수-있는-fileserve\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%88%98-%EC%9E%88%EB%8A%94-fileserve\" aria-label=\"정적 파일 서버를 만들수 있는 fileserve permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 파일 서버를 만들수 있는 FileServe</h2>\n<p>그럼 Handler 구현체는 뭐가 있을까? 정적 파일을 호스팅하는 <strong>FileServer</strong> 함수가 이를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>root FileSystem<span class=\"token punctuation\">)</span> Handler</code></pre></div>\n<p>웹 프론트엔드 개발시 정적서버를 띄워서 작업하는 경우 파이썬의 SimpleHTTPServer 같은 프로그램을 사용해서 로컬 환경에 개발 서버를 띄운다.\nGo를 이용하면 이런 서버를 만드는데 한 줄이면 충분하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>코드를 실행하면 서버가 구동될 것이다. 브라우져로 확인해 보면 public 폴더의 정적파일이 다운로드 되는것을 확인 할수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ tree ./\n./\n├── main.go\n└── public\n    ├── index.html\n    ├── script.js\n    └── style.css\n\n$ go run main.go</code></pre></div>\n<p>￼\n<img src=\"/assets/imgs/2019/02/07/static-file-server-test.jpg\" alt=\"정적파일 서버 테스트\"></p>\n<h2 id=\"핸들러를-등록하는-handle과-handlefunc\" style=\"position:relative;\"><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC%EB%A5%BC-%EB%93%B1%EB%A1%9D%ED%95%98%EB%8A%94-handle%EA%B3%BC-handlefunc\" aria-label=\"핸들러를 등록하는 handle과 handlefunc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핸들러를 등록하는 Handle과 HandleFunc</h2>\n<p>이번엔 다양한 핸들러를 등록해 보자. <strong>Handle</strong> 함수가 본격적으로 핸들러를 등록하는 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span>pattern <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> handler Handler<span class=\"token punctuation\">)</span></code></pre></div>\n<p>url 패턴과 연결할 핸들러를 등록하는 방식이다. 이를 이용해 위에서 구현한 파일 서버를 만들어 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./public\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>핸들러 로직을 만들고 싶다면 <strong>HandlerFunc</strong>을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span>pattern <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> handler <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>ResponseWriter<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>가령 \"/api\" url에 대한 핸들러 함수를 등록하고 싶다면 아래 코드로 시작할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 핸들러 로직을 작성한다.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"request로-요청-쿼리-접근하기\" style=\"position:relative;\"><a href=\"#request%EB%A1%9C-%EC%9A%94%EC%B2%AD-%EC%BF%BC%EB%A6%AC-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\" aria-label=\"request로 요청 쿼리 접근하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request로 요청 쿼리 접근하기</h2>\n<p>핸들러 로직을 작성하려면 먼저 요청 정보에 접근할 수 있어야 할 것이다. <strong>Request</strong> 구조체는 요청 정보를 추상화한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Request <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n  Method <span class=\"token builtin\">string</span>\n  URL    <span class=\"token operator\">*</span>url<span class=\"token punctuation\">.</span>URL\n  Header Header\n  Body   io<span class=\"token punctuation\">.</span>ReadCloser\n  Host   <span class=\"token builtin\">string</span>\n  Form   url<span class=\"token punctuation\">.</span>Values\n  <span class=\"token comment\">// 생략</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>쿼리 문자열은 URL을 통해 접근할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"URL: %#v\\n\\nQuery: %#v\\n\\nname: %s\\n\"</span><span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>서버를 구동하고 요청을 보내 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl &quot;localhost:8080?name=Gopher&quot;</code></pre></div>\n<p>서버 로그에 다음과 같이 요청 정보가 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">URL: &amp;url.URL{Scheme:&quot;&quot;, Opaque:&quot;&quot;, User:(*url.Userinfo)(nil), Host:&quot;&quot;, Path:&quot;/&quot;, RawPath:&quot;&quot;, ForceQuery:false, RawQuery:&quot;name=Gopher&quot;, Fragment:&quot;&quot;}\n\nQuery: url.Values{&quot;name&quot;:[]string{&quot;Gopher&quot;}}\n\nname: Gopher</code></pre></div>\n<h2 id=\"responsewriter로-응답하기\" style=\"position:relative;\"><a href=\"#responsewriter%EB%A1%9C-%EC%9D%91%EB%8B%B5%ED%95%98%EA%B8%B0\" aria-label=\"responsewriter로 응답하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ResponseWriter로 응답하기</h2>\n<p>핸들러 함수 인자 중 <strong>ResponseWriter</strong>가 응답을 위한 구조체다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> ResponseWriter <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> Header\n  <span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>statusCode <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Write 메소드가 io.Writer 인터페이를 충족하기 때문에 fmt.Fprintf 함수로 출력을 보낼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w io<span class=\"token punctuation\">.</span>Writer<span class=\"token punctuation\">,</span> format <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">...</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> err <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"URL: %#v\\n\\nQuery: %#v\\n\\nname: %s\\n\"</span><span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>서버를 구동하고 요청을 보내면 서버 터미널에 찍현던 로그가 응답 데이터로 전달된다.</p>\n<h2 id=\"요청-바디-처리\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%B2%AD-%EB%B0%94%EB%94%94-%EC%B2%98%EB%A6%AC\" aria-label=\"요청 바디 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요청 바디 처리</h2>\n<p>Request 구조체 안을 잘 살펴보면 io.ReadCloser 타입의 Body가 있는데 요청 바디 데이터를 담고 있는 녀석이다.\n이를 Go 구조체로 변경하기 위해서는 encoding/json 패키지를 같이 사용한다.</p>\n<p>먼저 요청 바디를 담을 User 구조체를 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> User <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n  Id <span class=\"token builtin\">int</span> <span class=\"token string\">`json:\"id\"`</span>\n  Name <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"name\"`</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 핸들러에서 바디데이터를 디코딩한다. (encoding/json에 대한 설명은 <a href=\"/dev/2019/01/18/go-encoding-json.html\">Go encoding/json 패키지</a> 참고)</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> u User\n  json<span class=\"token punctuation\">.</span><span class=\"token function\">NewDecoder</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>u<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%+v\"</span><span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>서버를 구동하고 요청 바디를 보내 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl &quot;localhost:8080&quot; -d &#39;{&quot;id&quot;:1,&quot;name&quot;:&quot;Gopher&quot;}&#39;</code></pre></div>\n<p>서버측 로그를 확인하면 다음과 같이 디코딩된 구조체가 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{Id:1 Name:Gopher}</code></pre></div>\n<h2 id=\"json-데이터-응답하기\" style=\"position:relative;\"><a href=\"#json-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%91%EB%8B%B5%ED%95%98%EA%B8%B0\" aria-label=\"json 데이터 응답하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON 데이터 응답하기</h2>\n<p>요청 바디 처리와 반대로 JSON 응답은 구조체를 JSON 형식의 문자열로 인코딩한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  u <span class=\"token operator\">:=</span> User<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Gopher\"</span><span class=\"token punctuation\">}</span>\n  enc <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">NewEncoder</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span>\n\n  enc<span class=\"token punctuation\">.</span><span class=\"token function\">Encode</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>먼저 User 값을 담은 u를 만든다.\nNewEncoder를 만들때 io.Writer를 충족하는 ResponseWriter를 인자로 전달해서 엔코더 enc를 만들 수 있다.</p>\n<p>ResponseWriter의 Header() 함수는 Header를 반환하는데 Set() 메소드로 헤더 값을 설정할 수 있다.\nContent-Type을 \"application/json\"으로 설정하여 JSON 응답임을 알린다.</p>\n<p>마지막으로 User 값 u를 인코딩하여 보내준다.</p>\n<p>서버를 구동하고 요청을 보내면 다음과 같이 JSON 응답을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl &quot;localhost:8080&quot; -d &#39;{&quot;id&quot;:1,&quot;name&quot;:&quot;Gopher&quot;}&#39;  -vs\n\n&lt; Content-Type: application/json\n\n{&quot;id&quot;:1,&quot;name&quot;:&quot;Gopher&quot;}</code></pre></div>\n<h2 id=\"에러-응답을-위한-error\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC-%EC%9D%91%EB%8B%B5%EC%9D%84-%EC%9C%84%ED%95%9C-error\" aria-label=\"에러 응답을 위한 error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에러 응답을 위한 Error</h2>\n<p>서버가 정상 응답만하는 것은 아니다. 에러 처리야 말로 신뢰성 있는 서버를 만드는 필수 조건이다.\n<strong>Error</strong> 클라이언트에게 에러 헤더와 데이터를 응답하는 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>w ResponseWriter<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> code <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>에러 문자열 error와 헤더에 설정할 에러코드 code를 인자로 받아 ResponsWriter로 응답하는 함수다.</p>\n<p>password 쿼리 문자열을 검증해서 에러를 응답하는 핸들러 함수를 만들어 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  pw <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> pw <span class=\"token operator\">==</span> <span class=\"token string\">\"mypassword\"</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not Authorized\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span>StatusUnauthorized<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Error 함수 세 번째 인자에 Unauthorized를 의미하는 401 정수를 전달할 수도 있지만 미리 정의된 상수를 이용하는 것이 더 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n  StatusContinue <span class=\"token operator\">=</span> <span class=\"token number\">100</span>        <span class=\"token comment\">// RFC 7231, 6.2.1</span>\n  <span class=\"token comment\">// 생략</span>\n  StatusOK <span class=\"token operator\">=</span> <span class=\"token number\">200</span>              <span class=\"token comment\">// RFC 7231, 6.3.1</span>\n  <span class=\"token comment\">// 생략</span>\n  StatusMultipleChoices <span class=\"token operator\">=</span> <span class=\"token number\">300</span> <span class=\"token comment\">// RFC 7231, 6.4.1</span>\n  <span class=\"token comment\">// 생략</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>password 쿼리 문자열 없이 요청하면 다음과 같이 에러 응답을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl &quot;localhost:8080&quot; -vs\n\n&lt; HTTP/1.1 401 Unauthorized\n\nNot Authorized</code></pre></div>\n<h2 id=\"notfound-에러\" style=\"position:relative;\"><a href=\"#notfound-%EC%97%90%EB%9F%AC\" aria-label=\"notfound 에러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NotFound 에러</h2>\n<p>404 처럼 잘 알려진 에러는 미리 만들어 놓은 함수 <strong>NotFound</strong> 혹은 <strong>NotFoundHandler</strong> 함수를 사용하면 간편하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">NotFound</span><span class=\"token punctuation\">(</span>w ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">NotFoundHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> Handler <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span>NotFound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수 시그니쳐가 이제 눈에 익는다.\nNotFound는 핸들러 함수 시그니처와 같고, NotFoundHandler는 Handler 타입을 반환한다.\n따라서 Handle이나 HandleFunc 함수로 등록할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span>NotFound<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// http.Handle(\"/\", http.NotFoundHandler())</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"리다이렉트-처리\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%8B%A4%EC%9D%B4%EB%A0%89%ED%8A%B8-%EC%B2%98%EB%A6%AC\" aria-label=\"리다이렉트 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리다이렉트 처리</h2>\n<p>에러는 아니지만 리다이렉트 응답도 NotFound와 비슷한 시그니처의 함수를 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Redirect</span><span class=\"token punctuation\">(</span>w ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">,</span> url <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> code <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">RedirectHandler</span><span class=\"token punctuation\">(</span>url <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> code <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> Handler</code></pre></div>\n<p>\"/will-be-redirected\" 로 요청하면 \"/api\"로 리다이렉트하는 핸들러를 구현해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/will-be-redirected\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">Redirect</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span>StatusMovedPermanently<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// http.Handle(\"/will-be-redirected\", http.RedirectHandler(\"/api\", http.StatusMovedPermanently))</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>net/http 패키지는 네트웍 요청과 응답을 위한 방법을 제공한다.</p>\n<p>Get은 서버로 요청을 만들때 사용하는 함수다. 세부적인 제어를 하려면 Request와 Client 구조체를 사용한다.</p>\n<p>응답 처리를 위한 핸들러는 모두 Handler 인터페이스를 따른다.</p>\n<p>ListenAndServe 함수에 Handler 를 전달할수 있는데 가장 간단한 것이 FileServer 함\b수로 만든 핸들러다. 정적 파일 서버를 만드는데 사용한다.</p>\n<p>Handle도 Handler를 등록할수 있다. HandleFunc 함수는 핸들러 로직을 작성하여 등록한다.</p>\n<p>Request는 요청 정보를 추상화한 구조체다.</p>\n<p>ResponseWriter는 응답을 위한 인터페이스다.</p>\n<p>에러를 응답할 땐 Error함수를 사용하고 자주 사용하는 응답을 위한 NotFound, NotFoundHandler, Redirect, RedirectHandler가 마련되어 있다.</p>","fields":{"dateStr":"2019년 02월 07일","date":"2019-02-07T00:00:00.000Z","slug":"/dev/2019/02/07/go-net-http.html"},"frontmatter":{"title":"Go net/http 패키지","tags":["go"],"seriesId":null,"videoId":null,"featured_image":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#get-%EC%9A%94%EC%B2%AD%ED%95%98%EA%B8%B0\">Get 요청하기</a></li>\n<li><a href=\"#client%EC%99%80-request%EB%A1%9C-%EC%9A%94%EC%B2%AD-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0\">Client와 Request로 요청 제어하기</a></li>\n<li><a href=\"#%EC%84%9C%EB%B2%84-%EA%B5%AC%ED%98%84%EC%9D%84-%EC%9C%84%ED%95%9C-handler\">서버 구현을 위한 Handler</a></li>\n<li><a href=\"#%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B5%AC%EB%8F%99%ED%95%98%EB%8A%94-listenandserve\">서버를 구동하는 ListenAndServe</a></li>\n<li><a href=\"#%EC%A0%95%EC%A0%81-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%88%98-%EC%9E%88%EB%8A%94-fileserve\">정적 파일 서버를 만들수 있는 FileServe</a></li>\n<li><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC%EB%A5%BC-%EB%93%B1%EB%A1%9D%ED%95%98%EB%8A%94-handle%EA%B3%BC-handlefunc\">핸들러를 등록하는 Handle과 HandleFunc</a></li>\n<li><a href=\"#request%EB%A1%9C-%EC%9A%94%EC%B2%AD-%EC%BF%BC%EB%A6%AC-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0\">Request로 요청 쿼리 접근하기</a></li>\n<li><a href=\"#responsewriter%EB%A1%9C-%EC%9D%91%EB%8B%B5%ED%95%98%EA%B8%B0\">ResponseWriter로 응답하기</a></li>\n<li><a href=\"#%EC%9A%94%EC%B2%AD-%EB%B0%94%EB%94%94-%EC%B2%98%EB%A6%AC\">요청 바디 처리</a></li>\n<li><a href=\"#json-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%91%EB%8B%B5%ED%95%98%EA%B8%B0\">JSON 데이터 응답하기</a></li>\n<li><a href=\"#%EC%97%90%EB%9F%AC-%EC%9D%91%EB%8B%B5%EC%9D%84-%EC%9C%84%ED%95%9C-error\">에러 응답을 위한 Error</a></li>\n<li><a href=\"#notfound-%EC%97%90%EB%9F%AC\">NotFound 에러</a></li>\n<li><a href=\"#%EB%A6%AC%EB%8B%A4%EC%9D%B4%EB%A0%89%ED%8A%B8-%EC%B2%98%EB%A6%AC\">리다이렉트 처리</a></li>\n<li><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>"},"series":null,"video":null,"allMarkdownRemark":{"nodes":[{"id":"074e39b1-9462-5ecb-aaea-21a023ebe483","fields":{"slug":"/elastic-beanstalk/","date":"2014-07-12T08:18:53.000Z"},"frontmatter":{"title":"Elastic Beanstalk","seriesId":null}},{"id":"0f88cd5b-41df-530b-90fb-f00558327576","fields":{"slug":"/%ec%95%84%eb%a7%88%ec%a1%b4-s3%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-%ec%84%9c%eb%b2%84-%ea%b5%ac%ec%b6%95/","date":"2014-07-23T08:31:17.000Z"},"frontmatter":{"title":"아마존 S3를 이용한 이미지 업로드 서버 구축","seriesId":null}},{"id":"204f727f-33f8-5d87-8d6d-daab61b0ce03","fields":{"slug":"/%ed%8a%b8%ec%9c%84%ed%84%b0-%eb%b6%80%ed%8a%b8%ec%8a%a4%ed%8a%b8%eb%9e%a9-%ec%86%8c%ec%8a%a4%eb%b6%84%ec%84%9d/","date":"2014-07-26T08:31:45.000Z"},"frontmatter":{"title":"트위터 부트스트랩 소스분석","seriesId":null}},{"id":"f9294936-d5a4-5a25-8956-12f97d7610bd","fields":{"slug":"/%eb%85%b8%eb%93%9c%ec%97%90%ec%84%9c-%ec%84%b8%ec%85%98%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%eb%a1%9c%ea%b7%b8%ec%9d%b8%ec%95%84%ec%9b%83-%ea%b5%ac%ed%98%84/","date":"2014-07-31T08:32:17.000Z"},"frontmatter":{"title":"노드에서 세션을 이용한 로그인/아웃 구현","seriesId":null}},{"id":"e93bdb2f-6490-5827-b95d-183d6dd3ff09","fields":{"slug":"/angular-fullstack-%eb%a1%9c%eb%94%a9-%ec%86%8d%eb%8f%84-%ea%b0%9c%ec%84%a0/","date":"2014-08-02T08:33:03.000Z"},"frontmatter":{"title":"Angular-fullstack 로딩 속도 개선","seriesId":null}},{"id":"e919e01e-3e58-5d2c-a03e-61d7cfb2807b","fields":{"slug":"/log-io%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-beanstalk-%eb%a1%9c%ea%b7%b8-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81/","date":"2014-08-08T08:33:35.000Z"},"frontmatter":{"title":"log.io를 이용한 beanstalk 로그 모니터링","seriesId":null}},{"id":"44078c1d-42ef-5f69-9d13-79965b5ac204","fields":{"slug":"/%eb%85%b8%eb%93%9c-%ec%8b%a4%ed%96%89%eb%aa%a8%eb%93%9c%ec%97%90-%eb%94%b0%eb%a5%b8-%ed%99%98%ea%b2%bd%ec%84%a4%ec%a0%95/","date":"2014-08-14T16:42:51.000Z"},"frontmatter":{"title":"노드 실행모드에 따른 환경설정","seriesId":null}},{"id":"23ceaeae-905d-56ad-b86d-77f6cfa0591c","fields":{"slug":"/expressjs-4-0-%eb%a7%88%ec%9d%b4%ea%b7%b8%eb%a0%88%ec%9d%b4%ec%85%98/","date":"2014-08-21T16:43:14.000Z"},"frontmatter":{"title":"expressjs 4.0 마이그레이션","seriesId":null}},{"id":"f4120d8f-370f-5d57-8c2c-bc5784df92c9","fields":{"slug":"/underscore-js/","date":"2015-01-05T22:16:09.000Z"},"frontmatter":{"title":"underscore.js","seriesId":null}},{"id":"1a446722-166d-5a0d-99f2-7a64542dcc1d","fields":{"slug":"/angular-form/","date":"2015-01-09T19:02:17.000Z"},"frontmatter":{"title":"Angular Form","seriesId":null}},{"id":"c7eb8db9-618d-5d37-82cf-6e2dda183d26","fields":{"slug":"/wordpress-study-01-misfit-kr/","date":"2015-01-09T21:52:58.000Z"},"frontmatter":{"title":"WordPress study 01 &#8211; misfit.kr","seriesId":null}},{"id":"6af8ae32-268d-5893-84a7-c7cfe56ac849","fields":{"slug":"/%ec%9b%8c%eb%93%9c%ed%94%84%eb%a0%88%ec%8a%a4-ssh2-%ec%84%a4%ec%a0%95/","date":"2015-01-10T15:27:00.000Z"},"frontmatter":{"title":"워드프레스 SSH2 설정","seriesId":null}},{"id":"15452c5f-2728-51d4-860d-348fa3928369","fields":{"slug":"/angularjs-passport%eb%a1%9c-%ec%9d%b8%ec%a6%9d%ea%b5%ac%ed%98%84/","date":"2015-01-17T12:34:54.000Z"},"frontmatter":{"title":"AngularJS, Passport로 인증구현","seriesId":null}},{"id":"0808dd63-1640-5690-963f-865b47c073fb","fields":{"slug":"/eb-cli-%ed%88%b4-%ec%82%ac%ec%9a%a9%eb%b2%95-%ec%a0%95%eb%a6%ac/","date":"2015-01-17T14:10:57.000Z"},"frontmatter":{"title":"eb-cli 툴 사용법 정리","seriesId":null}},{"id":"4771e1c3-3520-5251-b629-4015bc6f3a00","fields":{"slug":"/resource-%ec%ba%90%ec%89%ac-%ec%84%a4%ec%a0%95/","date":"2015-01-18T21:39:09.000Z"},"frontmatter":{"title":"$resource 캐쉬 설정","seriesId":null}},{"id":"918d7407-7598-5c82-983c-ae8937014cdd","fields":{"slug":"/%ea%bc%ac%eb%a6%ac%ec%97%90-%ea%bc%ac%eb%a6%ac%eb%a5%bc-%eb%ac%b4%eb%8a%94-timeout/","date":"2015-01-22T01:05:37.000Z"},"frontmatter":{"title":"꼬리에 꼬리를 무는 setTimeout()","seriesId":null}},{"id":"69036df4-b1d0-54bb-acb7-559da7ae55bb","fields":{"slug":"/resource%ec%99%80-service/","date":"2015-01-22T01:13:07.000Z"},"frontmatter":{"title":"$resource와 service","seriesId":null}},{"id":"54c1f7d7-c706-5e2b-8df0-f29ec064c3b1","fields":{"slug":"/%eb%b8%8c%eb%9d%bc%ec%9a%b0%ec%a0%b8%ec%97%90%ec%84%9c-%ec%95%84%eb%a7%88%ec%a1%b4-s3-%ed%8c%8c%ec%9d%bc-%ec%97%85%eb%a1%9c%eb%93%9c/","date":"2015-01-24T17:32:45.000Z"},"frontmatter":{"title":"브라우져에서 아마존 S3 파일 업로드","seriesId":null}},{"id":"e5efc7b3-9af8-51c9-944b-d39735b943f7","fields":{"slug":"/bit-operation/","date":"2015-02-07T23:08:18.000Z"},"frontmatter":{"title":"비트 연산","seriesId":null}},{"id":"9729b6f6-773e-5adf-867e-94bfcbf1ed65","fields":{"slug":"/http-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1/","date":"2015-02-10T10:00:11.000Z"},"frontmatter":{"title":"$http 테스트 코드 작성","seriesId":null}},{"id":"a0437991-1646-5508-9d31-b911eeca735a","fields":{"slug":"/wordpress-and-grunt/","date":"2015-02-18T21:35:59.000Z"},"frontmatter":{"title":"워드프레스에 Grunt 설정하기","seriesId":null}},{"id":"b5170d0b-1157-5552-965f-37e595d22e0c","fields":{"slug":"/%ec%84%9c%eb%b2%84-%eb%8b%a4%ec%9a%b4%ed%83%80%ec%9e%84-%ec%97%86%ec%9d%b4-%eb%b9%88%ec%8a%a4%ed%86%a1-%ea%b0%88%ec%95%84%ed%83%80%ea%b8%b0/","date":"2015-03-05T20:47:38.000Z"},"frontmatter":{"title":"서버 다운타임 없이 빈스톡 갈아타기","seriesId":null}},{"id":"46e6e040-d3c9-5d2c-bfc2-b4bb87848870","fields":{"slug":"/%eb%aa%bd%ea%b3%a0db-%ec%9d%b8%eb%8d%b1%ec%8a%a4-%ec%99%b8/","date":"2015-03-10T00:10:10.000Z"},"frontmatter":{"title":"몽고DB 인덱스 외","seriesId":null}},{"id":"413074b2-2e59-542a-9030-23e59814203f","fields":{"slug":"/wordpress-and-jquery/","date":"2015-03-11T00:16:00.000Z"},"frontmatter":{"title":"워드프레스와 제이쿼리 등","seriesId":null}},{"id":"889b1bae-f176-5fd4-b4f5-33230ed6afb0","fields":{"slug":"/plugins-in-wordpress/","date":"2015-03-12T20:32:16.000Z"},"frontmatter":{"title":"워드프레스 플러그인 정리","seriesId":null}},{"id":"3744f5f2-f0d9-58ed-b9ee-630b25f1f41e","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac-%eb%94%94%eb%a0%89%ed%8b%b0%eb%b8%8c-%eb%93%b1/","date":"2015-03-18T22:04:01.000Z"},"frontmatter":{"title":"앵귤러 디렉티브 등","seriesId":null}},{"id":"d338ce23-8b3d-5c0d-82e8-916220b939d0","fields":{"slug":"/options-%eb%a9%94%ec%8f%98%eb%93%9c%ec%97%90-%eb%8c%80%ed%95%b4/","date":"2015-03-19T23:14:17.000Z"},"frontmatter":{"title":"options 메쏘드에 대해","seriesId":null}},{"id":"93fb188b-f10f-5a06-a521-e6b96221cce7","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%97%90-%ed%85%9c%ed%94%8c%eb%a6%bf-%eb%a1%9c%eb%94%a9/","date":"2015-03-23T20:28:13.000Z"},"frontmatter":{"title":"앵귤러 서비스에 템플릿 로딩","seriesId":null}},{"id":"28567cc3-c4f0-5337-ad9e-f18bd31fca58","fields":{"slug":"/fileupload-in-expressjs/","date":"2015-03-28T14:13:12.000Z"},"frontmatter":{"title":"익스프레스 파일 업로드","seriesId":null}},{"id":"3aa5d8fa-dc49-5037-ac9a-86a48359a9d6","fields":{"slug":"/how-to-build-wordpress-child-theme/","date":"2015-03-28T15:07:50.000Z"},"frontmatter":{"title":"워드프레스 자식 테마 만들기","seriesId":null}},{"id":"97646c10-462e-53a7-8a18-9177d42c6550","fields":{"slug":"/custom-menu-in-wordpress/","date":"2015-03-28T15:43:26.000Z"},"frontmatter":{"title":"워드프레스 커스텀 메뉴 추가하기","seriesId":null}},{"id":"9bd34a0f-f8e2-5fbf-b470-c9cf492fd0cd","fields":{"slug":"/ui-route%eb%a1%9c-%eb%9d%bc%ec%9a%b0%ed%8c%85-%ec%9d%b8%ec%a6%9d-%ea%b5%ac%ed%98%84/","date":"2015-04-01T23:38:41.000Z"},"frontmatter":{"title":"ui-route로 라우팅 인증 구현","seriesId":null}},{"id":"f6b82347-e35f-5f70-8176-c79f6e4e72eb","fields":{"slug":"/how-to-run-nodejs-and-php-by-using-nginx/","date":"2015-04-10T10:04:00.000Z"},"frontmatter":{"title":"nginx를 이용하여 nodejs와 php 어플리케이션 함께 구동하기","seriesId":null}},{"id":"e7d6f5cd-dc6b-5fb3-85a2-1cc78a013097","fields":{"slug":"/server-side-loggin-in-angular/","date":"2015-05-05T23:45:45.000Z"},"frontmatter":{"title":"프론트에서 잡지 못한 예외를 서버에 리포팅하는 방법","seriesId":null}},{"id":"aa8b2f7c-95c0-585f-9030-c96bba4757d9","fields":{"slug":"/oauth2-0-in-rest-api/","date":"2015-06-11T15:31:20.000Z"},"frontmatter":{"title":"REST api에 OAuth2.0 구현","seriesId":null}},{"id":"c1b999f4-a28c-5f04-87cf-57c57636bf2c","fields":{"slug":"/google-material-design/","date":"2015-06-14T15:20:29.000Z"},"frontmatter":{"title":"Google Material Design","seriesId":null}},{"id":"35de4e4b-0ffa-5b1a-acf1-c72d32958013","fields":{"slug":"/%ec%9d%b4%eb%8b%88%ed%8e%98%ec%9d%b4-%eb%aa%a8%eb%b0%94%ec%9d%bc-%ea%b2%b0%ec%a0%9c-%ec%8b%a0%ec%9a%a9%ec%b9%b4%eb%93%9c-%ea%b0%9c%eb%b0%9c-%ed%9b%84%ea%b8%b0/","date":"2015-06-18T09:03:02.000Z"},"frontmatter":{"title":"이니페이 모바일 결제 (신용카드) 개발 후기","seriesId":null}},{"id":"8f012730-ebb0-54bf-8734-665eab179597","fields":{"slug":"/momentjs/","date":"2015-06-19T08:12:10.000Z"},"frontmatter":{"title":"momentjs","seriesId":null}},{"id":"6b775440-c691-534a-9f19-259485ff1388","fields":{"slug":"/%ec%9d%b4%eb%8b%88%ed%8e%98%ec%9d%b4-%eb%aa%a8%eb%b0%94%ec%9d%bc-%ea%b2%b0%ec%a0%9c-%ea%b3%84%ec%a2%8c%ec%9d%b4%ec%b2%b4-%ea%b0%9c%eb%b0%9c-%ed%9b%84%ea%b8%b0/","date":"2015-06-26T09:14:45.000Z"},"frontmatter":{"title":"이니페이 모바일 결제 (계좌이체) 개발 후기","seriesId":null}},{"id":"5bfe06a0-dbae-5dac-ad6d-a021b13064f8","fields":{"slug":"/socket-io%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%8b%a4%ec%8b%9c%ea%b0%84-%ec%9b%b9-%ea%b5%ac%ed%98%84/","date":"2015-07-07T22:14:13.000Z"},"frontmatter":{"title":"Socket.io를 이용한 실시간 웹 구현","seriesId":null}},{"id":"81cf0551-147f-5663-bbda-3a0c38fc08f2","fields":{"slug":"/mi-band-moves-rocket-pocket/","date":"2015-07-19T19:25:06.000Z"},"frontmatter":{"title":"Mi Band, Moves, Rocket Pocket","seriesId":null}},{"id":"4427dad5-c1ac-5e66-b1fd-89db83414924","fields":{"slug":"/ngform-%ed%81%b4%eb%9e%98%ec%8a%a4%eb%aa%85-%ed%99%9c%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-07-21T23:47:11.000Z"},"frontmatter":{"title":"ngForm 클래스명 활용하기","seriesId":null}},{"id":"56093c40-2bd1-5e48-8cda-e2dd58e94c59","fields":{"slug":"/passport-google-oauth-%ea%b5%ac%ea%b8%80-%ec%9d%b8%ec%a6%9d-%eb%aa%a8%eb%93%88/","date":"2015-07-23T21:50:03.000Z"},"frontmatter":{"title":"passport-google-oauth 구글 인증 모듈","seriesId":null}},{"id":"503b5d42-5852-54af-af19-533876536be0","fields":{"slug":"/ngform-%eb%b0%b8%eb%a6%ac%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%99%9c%ec%9a%a9/","date":"2015-07-24T09:10:27.000Z"},"frontmatter":{"title":"ngForm 밸리데이터 활용","seriesId":null}},{"id":"3545455a-fc78-51cf-9de4-156a9feafd07","fields":{"slug":"/ngform-%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%a0%95%ec%9d%98-%eb%b0%b8%eb%a6%ac%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%a7%8c%eb%93%a4%ea%b8%b0/","date":"2015-07-24T21:08:44.000Z"},"frontmatter":{"title":"ngForm 사용자 정의 밸리데이터 만들기","seriesId":null}},{"id":"b835cf78-7917-5cd5-8ba7-b036dea91910","fields":{"slug":"/dusk-theme-in-webstorm/","date":"2015-07-26T21:42:47.000Z"},"frontmatter":{"title":"웹스톰 Dusk 테마","seriesId":null}},{"id":"7fc6c2d9-90ce-5120-82b0-c9066182e83e","fields":{"slug":"/%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-1-multer-%eb%aa%a8%eb%93%88%eb%a1%9c-%ed%8c%8c%ec%9d%bc-%ec%97%85%eb%a1%9c%eb%93%9c/","date":"2015-07-27T17:09:22.000Z"},"frontmatter":{"title":"이미지 업로드 - 1. multer 모듈로 파일 업로드","seriesId":null}},{"id":"aaef094d-295e-5915-a332-3f36d11a6a35","fields":{"slug":"/%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-2-gm-%eb%aa%a8%eb%93%88%eb%a1%9c-%ec%9d%b4%eb%af%b8%ec%a7%80-%eb%a6%ac%ec%82%ac%ec%9d%b4%ec%a7%95/","date":"2015-07-27T17:10:21.000Z"},"frontmatter":{"title":"이미지 업로드 – 2. gm 모듈로 이미지 리사이징","seriesId":null}},{"id":"7d48f051-cfc7-59cb-9cbb-b47a86575f95","fields":{"slug":"/%eb%a6%ac%eb%88%85%ec%8a%a4-%eb%8d%b0%eb%aa%ac%ec%9c%bc%eb%a1%9c-%eb%85%b8%eb%93%9c-%ec%96%b4%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ea%b4%80%eb%a6%ac%ed%95%98%ea%b8%b0/","date":"2015-07-29T23:04:12.000Z"},"frontmatter":{"title":"리눅스 데몬으로 노드 어플리케이션 관리하기","seriesId":null}},{"id":"937cb0c4-565c-59c9-ac20-e2f126d88f6e","fields":{"slug":"/express-js-1-%ec%84%a4%ec%b9%98%ec%99%80-%ea%b5%ac%ec%a1%b0/","date":"2015-07-30T22:12:40.000Z"},"frontmatter":{"title":"Express.js - 1. 설치와 구조","seriesId":null}},{"id":"3fda9a9c-1c5a-515e-98a1-07c793b74b42","fields":{"slug":"/express-js-2-%eb%9d%bc%ec%9a%b0%ed%8c%85/","date":"2015-08-03T09:56:22.000Z"},"frontmatter":{"title":"Express.js - 2. 라우팅","seriesId":null}},{"id":"273ede44-8603-5f16-9483-8458082c441e","fields":{"slug":"/express-js-3-%ed%85%9c%ed%94%8c%eb%a6%bfjade/","date":"2015-08-04T21:00:46.000Z"},"frontmatter":{"title":"Express.js - 3. 템플릿(Jade)","seriesId":null}},{"id":"e148e7a4-a266-5280-b1bd-496f157c0a71","fields":{"slug":"/grunt-open/","date":"2015-08-10T09:38:30.000Z"},"frontmatter":{"title":"grunt open","seriesId":null}},{"id":"38d06f2c-f005-5bc7-b35c-82efd040dc1b","fields":{"slug":"/oh-my-zsh%eb%a1%9c-%ed%84%b0%eb%af%b8%eb%84%90-%ea%be%b8%eb%af%b8%ea%b8%b0/","date":"2015-08-10T14:41:05.000Z"},"frontmatter":{"title":"Oh My Zsh로 터미널 꾸미기","seriesId":null}},{"id":"4b5dc6d1-7aed-5688-860c-16d27c38f31d","fields":{"slug":"/postdigest%ec%99%80-timeout/","date":"2015-08-12T00:35:20.000Z"},"frontmatter":{"title":"$$postDigest()와 $timeout()","seriesId":null}},{"id":"fb3279a3-681c-5555-b37c-5c97b40c399d","fields":{"slug":"/resource%eb%a1%9c-rest-api-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-08-13T23:32:53.000Z"},"frontmatter":{"title":"$resource로 REST api 사용하기","seriesId":null}},{"id":"c2dec1c9-ffa0-505b-9f04-d697696d02f9","fields":{"slug":"/sequalize-%ec%bf%bc%eb%a6%ac/","date":"2015-08-22T15:22:13.000Z"},"frontmatter":{"title":"sequalize 쿼리","seriesId":null}},{"id":"a8086324-7e1b-5296-b607-1d84fef41f2a","fields":{"slug":"/%ec%95%84%ed%86%b0-%ec%97%90%eb%94%94%ed%84%b0-%ec%99%b8%eb%aa%a8-%eb%b3%80%ea%b2%bd%ed%95%98%ea%b8%b0/","date":"2015-08-30T11:28:05.000Z"},"frontmatter":{"title":"아톰 에디터 외모 변경하기","seriesId":null}},{"id":"2fc5fe33-7c2a-510a-871b-4f457d896f8b","fields":{"slug":"/%ec%b9%b4%ed%8e%9824-sms-node-%eb%aa%a8%eb%93%88/","date":"2015-08-31T14:16:34.000Z"},"frontmatter":{"title":"카페24 SMS node 모듈","seriesId":null}},{"id":"7a228443-cbba-5862-8b98-7a98e358a4b5","fields":{"slug":"/%ea%b0%9c%eb%b0%9c-%ec%a0%88%ec%b0%a8%ec%97%90-%eb%8f%84%ec%bb%a4-%ec%a0%81%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-09-02T11:13:03.000Z"},"frontmatter":{"title":"개발 절차에 도커 적용하기","seriesId":null}},{"id":"d1036bcc-f4c9-51cd-ba28-43205c9f3e58","fields":{"slug":"/docker-git/","date":"2015-09-07T10:55:26.000Z"},"frontmatter":{"title":"Docker + Git","seriesId":null}},{"id":"39772152-4263-537b-affd-771481e4f464","fields":{"slug":"/%ed%81%ac%eb%a1%a0%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%a0%eb%95%8c-%ec%84%9c%eb%b2%84-%ec%8b%9c%ea%b0%84%ec%9d%84-%ec%a0%95%ed%99%95%ed%9e%88-%eb%a7%9e%ec%b6%94%ec%9e%90/","date":"2015-09-08T20:10:54.000Z"},"frontmatter":{"title":"크론을 사용할때 서버 시간을 정확히 맞추자","seriesId":null}},{"id":"d4aa64a5-a46a-5c7e-b278-da0737905207","fields":{"slug":"/%ea%b9%83git-%ec%84%9c%eb%b2%84-%eb%a7%8c%eb%93%a4%ea%b8%b0/","date":"2015-09-08T20:12:06.000Z"},"frontmatter":{"title":"깃(git) 서버 만들기","seriesId":null}},{"id":"828260be-baa1-566d-85d5-d77f91993f24","fields":{"slug":"/agenda/","date":"2015-09-10T23:03:16.000Z"},"frontmatter":{"title":"Agenda","seriesId":null}},{"id":"df222da4-63e1-58ed-b2e9-6f69ae65b630","fields":{"slug":"/%ec%95%88%ec%93%b0%eb%8a%94-imac%ec%9d%84-%eb%a7%a5%eb%b6%81-%ec%99%b8%ec%9e%a5-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a1%9c-%ec%82%ac%ec%9a%a9%ed%95%98%ec%9e%90/","date":"2015-09-11T21:56:33.000Z"},"frontmatter":{"title":"안쓰는 iMac을 맥북 외장 모니터로 사용하자!","seriesId":null}},{"id":"628cf529-c626-57d7-8781-33b248b0b83a","fields":{"slug":"/%ec%9d%b5%ec%8a%a4%ed%94%84%eb%a0%88%ec%8a%a4-api-%ec%84%9c%eb%b2%84-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1%ed%95%98%ea%b8%b0/","date":"2015-09-15T11:55:36.000Z"},"frontmatter":{"title":"익스프레스 API 서버 테스트 코드 작성하기","seriesId":null}},{"id":"439a02f9-7719-5cc5-84f1-cb197409faef","fields":{"slug":"/forever-and-docker/","date":"2015-09-19T14:12:03.000Z"},"frontmatter":{"title":"Forever와 Docker","seriesId":null}},{"id":"8b2e5a62-014b-5270-a86f-fc8e7b20b414","fields":{"slug":"/docker-usage/","date":"2015-09-19T15:16:40.000Z"},"frontmatter":{"title":"도커 활용기","seriesId":null}},{"id":"f1c5f417-e70c-5c58-97af-86014239af28","fields":{"slug":"/%ec%9b%90%ea%b2%a9%eb%a1%9c%ea%b7%b8%ec%9d%b8ssh-%ec%a0%91%ec%86%8d/","date":"2015-09-23T09:27:20.000Z"},"frontmatter":{"title":"원격로그인(SSH) 접속","seriesId":null}},{"id":"06119aa3-b7b9-5e48-b551-1553f8d3b209","fields":{"slug":"/mysql-%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4-%ec%82%ad%ec%a0%9c-%ec%97%90%eb%9f%ac/","date":"2015-09-27T12:27:46.000Z"},"frontmatter":{"title":"mysql 데이터베이스 삭제 에러","seriesId":null}},{"id":"6080b844-1486-5a56-bc59-25ec32433eb1","fields":{"slug":"/osx-%eb%85%b8%ed%8a%b8-%ea%b8%80%ea%bc%b4-%eb%b3%80%ea%b2%bd/","date":"2015-09-28T15:48:23.000Z"},"frontmatter":{"title":"osx 노트 글꼴 변경","seriesId":null}},{"id":"70c44386-cbe0-5bb5-b95a-8ed5469697f1","fields":{"slug":"/git-push-%ec%9d%b4%eb%b2%a4%ed%8a%b8%eb%a5%bc-slack-%ec%b1%84%eb%84%90%eb%a1%9c-%eb%b3%b4%eb%82%b4%ea%b8%b0/","date":"2015-10-01T19:59:03.000Z"},"frontmatter":{"title":"git push 이벤트를 slack 채널로 보내기","seriesId":null}},{"id":"d7e5dd64-6e16-53fc-947c-8ba2d36d8b27","fields":{"slug":"/simpletest-php-unit-test/","date":"2015-10-13T17:17:22.000Z"},"frontmatter":{"title":"SimpleTest &#8211; php unit test","seriesId":null}},{"id":"623096d3-2899-55d3-b34e-20ac75d9ca97","fields":{"slug":"/%eb%8f%84%ec%bb%a4%ec%97%90%ec%84%9c-%eb%aa%bd%ea%b3%a0%eb%94%94%eb%b9%84-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-10-16T17:33:59.000Z"},"frontmatter":{"title":"도커에서 몽고디비 컨테이너 사용하기","seriesId":null}},{"id":"d4a6e92f-61b9-58f8-98d4-91ba93f6fa28","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac%eb%a1%9c-%eb%a7%8c%eb%93%a0-spa-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%a8%ec%9d%84-%ec%95%84%eb%a7%88%ec%a1%b4%ec%9b%b9%ec%84%9c%eb%b9%84%ec%8a%a4-s3%ec%97%90%ec%84%9c-%ec%9b%b9/","date":"2015-10-27T10:08:59.000Z"},"frontmatter":{"title":"앵귤러로 만든 spa 프로그램을 아마존웹서비스 s3에서 웹호스팅 하는 방법","seriesId":null}},{"id":"070923bb-57d4-5e42-b47a-60e295f93708","fields":{"slug":"/%ec%84%9c%eb%b2%84-%ea%b5%ac%eb%8f%99%ec%8b%9c-%eb%b2%84%ec%a0%84-%ec%b2%b4%ed%81%ac/","date":"2015-10-30T09:29:05.000Z"},"frontmatter":{"title":"서버 구동시 버전 체크","seriesId":null}},{"id":"1488f369-186d-5eea-b98c-debe06c57479","fields":{"slug":"/karma%ec%99%80-watch%eb%a1%9c-%ec%9c%a0%eb%8b%9b%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ea%b0%9c%eb%b0%9c%ed%95%98%ea%b8%b0/","date":"2015-11-04T10:49:41.000Z"},"frontmatter":{"title":"karma와 watch로 유닛테스트 코드 개발하기","seriesId":null}},{"id":"83ac8cd3-e4bc-529d-bbb4-05ddd8680f93","fields":{"slug":"/karma%ec%97%90-%eb%a6%ac%ed%8f%ac%ed%84%b0-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0/","date":"2015-11-11T19:44:34.000Z"},"frontmatter":{"title":"karma에 리포터 추가하기","seriesId":null}},{"id":"7b80997c-47db-5a01-b7d3-b4e4e23dfe55","fields":{"slug":"/atom-%ec%97%90%eb%94%94%ed%84%b0-%ed%94%8c%eb%9f%ac%ea%b7%b8%ec%9d%b8-%ec%a0%95%eb%a6%ac/","date":"2015-11-11T20:34:05.000Z"},"frontmatter":{"title":"Atom 에디터 플러그인 정리","seriesId":null}},{"id":"57c637b5-6fd6-5661-a67a-0a042f84d473","fields":{"slug":"/%ea%b8%b0%ec%a1%b4-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%ec%99%80-swagger-ui-%ec%97%b0%eb%8f%99%ed%95%98%ea%b8%b0/","date":"2015-11-24T20:33:24.000Z"},"frontmatter":{"title":"기존 프로젝트와 Swagger-ui 연동하기","seriesId":null}},{"id":"deb05ab5-cf7a-5079-a7c4-4e8d41613382","fields":{"slug":"/atom-%ed%94%8c%eb%9f%ac%ea%b7%b8%ec%9d%b8-atom-sync/","date":"2015-11-25T20:48:34.000Z"},"frontmatter":{"title":"Atom 플러그인: atom-sync","seriesId":null}},{"id":"a42f3c6f-afbe-599c-b1ba-3e494ae58325","fields":{"slug":"/%ec%b9%b4%ec%b9%b4%ec%98%a4-%ec%9d%b8%ec%a6%9d-%ed%85%8c%ec%8a%a4%ed%8a%b8/","date":"2015-11-28T18:53:58.000Z"},"frontmatter":{"title":"카카오 인증 테스트","seriesId":null}},{"id":"067cb020-a4b6-50bf-8301-caf3a9e88b4e","fields":{"slug":"/ghost-%eb%9d%bc%ec%9a%b0%ed%8c%85-%eb%a1%9c%ec%a7%81-%eb%b6%84%ec%84%9d/","date":"2015-11-30T22:40:51.000Z"},"frontmatter":{"title":"Ghost 라우팅 로직 분석","seriesId":null}},{"id":"d43f46a4-2abe-5ff3-b9d2-fb60b09aecc6","fields":{"slug":"/%ed%8e%98%ec%9d%b4%ec%8a%a4%eb%b6%81-%ed%86%a0%ed%81%b0-%ea%b6%8c%ed%95%9c-%ed%99%95%ec%9d%b8-%ec%a3%bc%ec%86%8c/","date":"2015-12-02T14:46:07.000Z"},"frontmatter":{"title":"페이스북 토큰 권한 확인 주소","seriesId":null}},{"id":"33267128-7dc2-598e-8fea-417fac4105cb","fields":{"slug":"/%ea%b8%b0%ec%a1%b4-mysql%ec%97%90-%ec%9e%a5%ea%b3%a0-%ec%96%b4%eb%93%9c%eb%af%bc-%eb%b6%99%ec%9d%b4%ea%b8%b0/","date":"2015-12-02T20:19:58.000Z"},"frontmatter":{"title":"기존 데이터베이스에 장고 어드민 통합하기","seriesId":null}},{"id":"5618304a-c98c-51b4-913d-cfea72db5883","fields":{"slug":"/gunicorn-%ec%9e%a5%ea%b3%a0-%ec%96%b4%eb%93%9c%eb%af%bc-%ed%94%84%eb%a1%9c%eb%8d%95%ec%85%98-%ec%84%9c%eb%b2%84%ec%97%90-%ea%b5%ac%eb%8f%99%ed%95%98%ea%b8%b0/","date":"2015-12-03T17:12:21.000Z"},"frontmatter":{"title":"gunicorn: 장고 어드민 프로덕션 서버에 구동하기","seriesId":null}},{"id":"a6b7ae9c-8783-5193-8cc9-0b7a3e8c043c","fields":{"slug":"/%ec%9a%b0%eb%b6%84%ed%88%ac%ec%97%90-django-admin-mysql-python-%ec%84%a4%ec%b9%98/","date":"2015-12-03T18:04:28.000Z"},"frontmatter":{"title":"우분투에 Django-admin, mysql-python 설치","seriesId":null}},{"id":"9a5b6050-f550-5d60-ae51-8e218cbd0895","fields":{"slug":"/mongodump-is-not-working-on-cronjob/","date":"2015-12-07T20:55:16.000Z"},"frontmatter":{"title":"mongodump 크론잡이 동작하지 않을 때","seriesId":null}},{"id":"fb7eac54-5385-5250-bd31-9a539f88f2ce","fields":{"slug":"/swagger-node/","date":"2015-12-11T11:40:31.000Z"},"frontmatter":{"title":"Swagger-node로 express 시작하기","seriesId":null}},{"id":"ccfa77b6-5873-524d-9dcf-b5d96bef80e8","fields":{"slug":"/javascript-decorator-pattern/","date":"2015-12-13T08:20:53.000Z"},"frontmatter":{"title":"Javascript Decorator Pattern","seriesId":null}},{"id":"1b2752b4-06d2-5ea1-8742-aff047a5f1eb","fields":{"slug":"/ng-plualize-%eb%8b%a8%ec%88%98-%eb%b3%b5%ec%88%98%ed%98%95-%ec%b2%98%eb%a6%ac/","date":"2015-12-21T09:56:48.000Z"},"frontmatter":{"title":"ng-plualize 단수, 복수형 처리","seriesId":null}},{"id":"44029db8-0fee-5a7f-bd67-00d0a54669fe","fields":{"slug":"/2015-%eb%b8%94%eb%a1%9c%ea%b7%b8-%ea%b2%b0%ec%82%b0/","date":"2016-01-01T22:42:19.000Z"},"frontmatter":{"title":"2015 블로그 결산","seriesId":null}},{"id":"a72ff113-bb2c-5772-8b57-9caaaac10baf","fields":{"slug":"/boot2docker-%ec%97%85%eb%8d%b0%ec%9d%b4%ed%8a%b8-v1-9/","date":"2016-01-03T18:26:20.000Z"},"frontmatter":{"title":"boot2docker 업데이트 (v1.9)","seriesId":null}},{"id":"cea322b8-e6bf-570a-8067-6202292a7426","fields":{"slug":"/mocha/","date":"2016-01-05T00:02:30.000Z"},"frontmatter":{"title":"NodeJS에서 가장 많이 사용하는 테스트 프레임웍, Mocha","seriesId":null}},{"id":"2f650674-e408-5778-91f6-53ecf790b22c","fields":{"slug":"/naming-uploaded-file-on-wordpress/","date":"2016-01-11T21:15:30.000Z"},"frontmatter":{"title":"워드프레스 파일 업로드 시 파일명 처리","seriesId":null}},{"id":"ed89b772-cee1-5d8f-8680-68339ae34d6f","fields":{"slug":"/add-fk-on-sequelize-migration/","date":"2016-01-12T22:17:40.000Z"},"frontmatter":{"title":"Sequelize로 마이그레이션 시 외래키 추가하기","seriesId":null}},{"id":"66d6bdf2-1682-5093-8dd8-0c2fe37c40b5","fields":{"slug":"/sequelize-migration/","date":"2016-01-14T09:21:17.000Z"},"frontmatter":{"title":"Sequelize 마이그레이션","seriesId":null}},{"id":"d5946e62-e76c-55a6-9e2f-7d5be4fea3aa","fields":{"slug":"/sequelize-model/","date":"2016-01-26T23:27:50.000Z"},"frontmatter":{"title":"Sequelize Modeling","seriesId":null}},{"id":"74c2f2bf-31c1-52be-8396-67735ff4df32","fields":{"slug":"/aws-%ec%84%9c%ec%9a%b8-%eb%a6%ac%ec%a0%84%ec%9c%bc%eb%a1%9c-%eb%b8%94%eb%a1%9c%ea%b7%b8-%ec%9d%b4%eb%8f%99/","date":"2016-01-30T19:35:32.000Z"},"frontmatter":{"title":"AWS 서울 리전으로 블로그 이동","seriesId":null}},{"id":"22e37b6b-acc2-5299-8193-7d84e5c2d97e","fields":{"slug":"/lodash/","date":"2016-01-31T15:14:43.000Z"},"frontmatter":{"title":"lodash","seriesId":null}},{"id":"7400b75f-6e1a-52aa-9d2c-72a832b0e5b2","fields":{"slug":"/morgan-helper/","date":"2016-02-01T08:29:51.000Z"},"frontmatter":{"title":"morgan-helper","seriesId":null}},{"id":"e1d91cf1-f64a-5d9d-8c90-5b23f03a2af9","fields":{"slug":"/sequelize-seed-%ec%8b%9c%eb%93%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b4%80%eb%a6%ac%ed%95%98%ea%b8%b0/","date":"2016-02-03T12:02:53.000Z"},"frontmatter":{"title":"Sequelize Seed - 시드 데이터 관리하기","seriesId":null}},{"id":"90a02da2-2b5d-5495-a4d5-ad29ff45e437","fields":{"slug":"/2016/02/07/from-wordpress-to-jekyll.html","date":"2016-02-07T00:00:00.000Z"},"frontmatter":{"title":"워드프레스에서 지킬로 블로그 이동","seriesId":null}},{"id":"31533bac-be80-5a0e-ab0c-30486cc91391","fields":{"slug":"/2016/02/07/jekyll-customizing.html","date":"2016-02-07T00:00:00.000Z"},"frontmatter":{"title":"Jekyll 커스터마이징 1 - 코멘트와 페이지네이션","seriesId":null}},{"id":"d26caebe-5c94-5449-a635-2e87a1dc349e","fields":{"slug":"/2016/02/20/beanstalk-in-seoul.html","date":"2016-02-20T00:00:00.000Z"},"frontmatter":{"title":"서울에서 Elastic Beanstalk 사용하기","seriesId":null}},{"id":"0f550ec0-3a76-56e2-b495-4f46fcb841da","fields":{"slug":"/2016/02/28/http-test-with-nock-mocha.html","date":"2016-02-28T00:00:00.000Z"},"frontmatter":{"title":"Nock, Mocha로 HTTP 테스트하기","seriesId":null}},{"id":"8d627668-0604-516d-91c2-2b58e217f576","fields":{"slug":"/2016/02/29/jekyll-tag.html","date":"2016-02-29T00:00:00.000Z"},"frontmatter":{"title":"Jekyll 커스터마이징 2 - 태그","seriesId":null}},{"id":"998d294e-d3f3-55cb-b895-dc3fc1b1e4dc","fields":{"slug":"/2016/03/21/must-use-error-in-reject.html","date":"2016-03-21T00:00:00.000Z"},"frontmatter":{"title":"Promise.reject()에 에러 객체를 넘겨줘야하는 이유","seriesId":null}},{"id":"74b82911-12f0-5174-8d7a-06d8a7475d3b","fields":{"slug":"/2016/03/29/mobile-rest-api.html","date":"2016-03-29T00:00:00.000Z"},"frontmatter":{"title":"서버 개발자 입장에서 바라본 모바일 API 디자인","seriesId":null}},{"id":"11ce40bf-534f-5a87-9f7f-c24a52704666","fields":{"slug":"/2016/04/28/es6.html","date":"2016-04-28T00:00:00.000Z"},"frontmatter":{"title":"ECMAScript2015(ES6)로 Node.JS 코딩하기","seriesId":null}},{"id":"8961d13a-5d7a-5f6a-bc82-2323d4b69528","fields":{"slug":"/2016/05/13/image-resizing-with-lambda.html","date":"2016-05-13T00:00:00.000Z"},"frontmatter":{"title":"람다를 이용해 이미지 리사이징 서버 만들기","seriesId":null}},{"id":"d88c13cd-bc9f-5d5f-8a78-f021156edb9b","fields":{"slug":"/2016/05/13/swagger-parser.html","date":"2016-05-13T00:00:00.000Z"},"frontmatter":{"title":"스웨거 문서 문법 체크하기","seriesId":null}},{"id":"a202ae08-18a8-5947-9beb-6bae46201c62","fields":{"slug":"/2016/05/17/aws-submit-2016.html","date":"2016-05-17T00:00:00.000Z"},"frontmatter":{"title":"AWS Summit 2016 참관 후기","seriesId":null}},{"id":"1be92fa3-e888-5baf-8d48-304c0835a51a","fields":{"slug":"/2016/06/29/querystring-body-in-express.html","date":"2016-06-29T00:00:00.000Z"},"frontmatter":{"title":"노드에서는 쿼리스트링 인코딩을 어떻게 처리할까?","seriesId":null}},{"id":"71e017d0-bcdb-5b4d-9153-898d2866d371","fields":{"slug":"/2016/07/13/sequelize-transaction.html","date":"2016-07-13T00:00:00.000Z"},"frontmatter":{"title":"Sequelize Transaction 사용할때 주의할 점","seriesId":null}},{"id":"f03b0d04-612e-5de3-aad0-4098f41a290f","fields":{"slug":"/2016/07/19/babel.html","date":"2016-07-19T00:00:00.000Z"},"frontmatter":{"title":"Babel로 ES6 코드 사용하기","seriesId":null}},{"id":"2c6f54fe-0d97-5c3a-a43c-3216c26c0cda","fields":{"slug":"/2016/07/28/istanbul.html","date":"2016-07-28T00:00:00.000Z"},"frontmatter":{"title":"Istanbul로 코드 커버리지 측정하기","seriesId":null}},{"id":"ee775602-4101-529e-b01f-4de89bb5fe4c","fields":{"slug":"/2016/08/03/ionic-hello-world.html","date":"2016-08-03T00:00:00.000Z"},"frontmatter":{"title":"Ionic으로 Hello world 시작하기","seriesId":null}},{"id":"85a991c8-2ec0-5660-99f0-ab12a2e62089","fields":{"slug":"/2016/08/10/nvm.html","date":"2016-08-10T00:00:00.000Z"},"frontmatter":{"title":"NVM으로 노드 버전 관리하기","seriesId":null}},{"id":"a310a804-58e9-5e7e-9cc4-6a34a02a07e0","fields":{"slug":"/2016/08/11/pyenv.html","date":"2016-08-11T00:00:00.000Z"},"frontmatter":{"title":"PYENV로 파이썬 버전 관리하기","seriesId":null}},{"id":"86332ae4-e8df-5cea-8f04-7fc818cefe38","fields":{"slug":"/2016/08/16/git-alias.html","date":"2016-08-16T00:00:00.000Z"},"frontmatter":{"title":"Git Alias 사용법: 깃 단축키 설정하는 방법 ","seriesId":null}},{"id":"a2904f39-4b0b-56b4-aa7c-c57a192169ca","fields":{"slug":"/2016/08/20/angular-facts-easy-to-miss.html","date":"2016-08-20T00:00:00.000Z"},"frontmatter":{"title":"앵귤러 개발자가 놓치기 쉬운 10가지 사실들","seriesId":null}},{"id":"03fc6bce-616f-5cf1-881c-b91e2117df9f","fields":{"slug":"/2016/08/23/about-angular2-quickstart-libraries.html","date":"2016-08-23T00:00:00.000Z"},"frontmatter":{"title":"Angular2 Quickstart에서 사용하는 라이브러리는 왜 이렇게 많을까?","seriesId":null}},{"id":"3aea8aca-cfbc-5186-90ee-854f3e3d1e52","fields":{"slug":"/2016/09/03/jscon2016.html","date":"2016-09-03T00:00:00.000Z"},"frontmatter":{"title":"JSCON 2016 참관 후기","seriesId":null}},{"id":"1d670601-41cf-599d-aaba-707bf8461b68","fields":{"slug":"/2016/09/27/imac-kernel-panic.html","date":"2016-09-27T00:00:00.000Z"},"frontmatter":{"title":"아이맥, 커널 패닉에 빠지다","seriesId":null}},{"id":"3c2b419b-6302-548a-b4b1-2e614d497faf","fields":{"slug":"/2016/10/13/how-to-make-yeoman-generator.html","date":"2016-10-13T00:00:00.000Z"},"frontmatter":{"title":"Yeoman 제너레이터 만들기","seriesId":null}},{"id":"aecfdd81-63fe-527f-9617-906389e8e191","fields":{"slug":"/2016/11/29/flow.html","date":"2016-11-29T00:00:00.000Z"},"frontmatter":{"title":"WebStorm에 Flow 기능 사용 후기","seriesId":null}},{"id":"41bb8ced-10e8-50b0-afb3-6ef6bb929997","fields":{"slug":"/2016/12/15/coroutine.html","date":"2016-12-15T00:00:00.000Z"},"frontmatter":{"title":"제너레이터와 프라미스를 이용한 비동기 처리","seriesId":null}},{"id":"5ba7813d-77c8-59dc-9eed-927a0b38454f","fields":{"slug":"/etc/2017/01/02/review-2016.html","date":"2017-01-02T00:00:00.000Z"},"frontmatter":{"title":"2016년을 보내며","seriesId":null}},{"id":"9cdcc8f6-e441-5aeb-b711-e01bfbcc7010","fields":{"slug":"/toy_project/2017/01/09/reading-book.html","date":"2017-01-09T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_독서노트","seriesId":null}},{"id":"57f8cc6c-456b-52ad-8452-de022281434d","fields":{"slug":"/toy_project/2017/01/16/facebook-analysis.html","date":"2017-01-16T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_페이스북 분석기","seriesId":null}},{"id":"4120a468-f87e-513d-8a13-b8c5aee149b6","fields":{"slug":"/etc/2017/01/16/so-you-want-to-be-a-functional-programmer-part-6.html","date":"2017-01-16T00:00:00.000Z"},"frontmatter":{"title":"함수형 프로그래머가 되고 싶다고? 파트6","seriesId":null}},{"id":"cebffc83-e62e-50f8-b850-a83420421dba","fields":{"slug":"/toy_project/2017/01/17/life-tracker.html","date":"2017-01-17T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_라이프트래커","seriesId":null}},{"id":"2856a138-4706-56bd-b0c8-02c2117f129d","fields":{"slug":"/node/2017/01/27/node-io-deep.html","date":"2017-01-27T00:00:00.000Z"},"frontmatter":{"title":"노드 개발자가 IO 작업을 시작하면 무슨일이 일어날까?","seriesId":null}},{"id":"b6377c8e-66f4-5d53-adec-96d9f178f80a","fields":{"slug":"/node/2017/02/06/utf8mb4-in-sequelize.html","date":"2017-02-06T00:00:00.000Z"},"frontmatter":{"title":"시퀄라이즈에서 이모티콘 저장하기","seriesId":null}},{"id":"35d91bb5-98f3-5f4f-8db9-cb45193f9787","fields":{"slug":"/js/2017/02/17/dependency-injection.html","date":"2017-02-17T00:00:00.000Z"},"frontmatter":{"title":"의존성 주입","seriesId":null}},{"id":"9128e181-bfa8-593c-84d9-1fc0d44a4ec1","fields":{"slug":"/aws/2017/03/06/apex.html","date":"2017-03-06T00:00:00.000Z"},"frontmatter":{"title":"Apex로 좀 더 편리한 람다 개발환경 만들기","seriesId":null}},{"id":"de5007a0-1a75-5736-9cd7-b4885fde9582","fields":{"slug":"/vue/2017/03/27/vue.html","date":"2017-03-27T00:00:00.000Z"},"frontmatter":{"title":"Vue.js 살펴보기","seriesId":null}},{"id":"ed24b3fb-491f-595a-9515-2e9cb8e46e6c","fields":{"slug":"/tool/2017/03/28/jasmine.html","date":"2017-03-28T00:00:00.000Z"},"frontmatter":{"title":"자스민으로 프론트엔드 테스트 코드 작성하기","seriesId":null}},{"id":"15650a98-04e9-5937-9da5-3a2fee5ed806","fields":{"slug":"/vue/2017/03/29/is-vue-better-than-angular-react.html","date":"2017-03-29T00:00:00.000Z"},"frontmatter":{"title":"과연 Vue.js가 앵귤러나 리엑트보다 좋을까?","seriesId":null}},{"id":"d72a9a2b-6f5f-539b-bc75-0204b32fb4b0","fields":{"slug":"/vue/2017/04/19/vue-component-test.html","date":"2017-04-19T00:00:00.000Z"},"frontmatter":{"title":"Vue 글로벌 컴포넌트 테스트","seriesId":null}},{"id":"453c7708-f823-5e2e-af12-c62bf207733e","fields":{"slug":"/js/2017/05/15/webpack.html","date":"2017-05-15T00:00:00.000Z"},"frontmatter":{"title":"웹팩의 기본 개념","seriesId":null}},{"id":"659a231a-ee47-567e-9166-0b1775cebc2c","fields":{"slug":"/js/2017/05/22/webpack-file-loader.html","date":"2017-05-22T00:00:00.000Z"},"frontmatter":{"title":"웹팩의 file-loader와 url-loader","seriesId":null}},{"id":"e9f157e6-ad70-52fa-89db-c06e7eb3e1cf","fields":{"slug":"/node/2017/07/03/node-stream-you-need-to-know.html","date":"2017-07-03T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 1편","seriesId":null}},{"id":"e524157f-c01b-561d-b3f0-e413a955b115","fields":{"slug":"/node/2017/08/07/node-stream-you-need-to-know-2.html","date":"2017-08-07T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 2편","seriesId":null}},{"id":"dc76eecc-3b55-566c-998a-1cbc7ba552e5","fields":{"slug":"/node/2017/08/12/node-stream-you-need-to-know-3.html","date":"2017-08-12T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 3편","seriesId":null}},{"id":"e8ce11af-8f30-5d39-9a5a-97eaaf441224","fields":{"slug":"/node/2017/08/17/express-error-handling.html","date":"2017-08-17T00:00:00.000Z"},"frontmatter":{"title":"에러 처리를 위한 익스프레스 가이드","seriesId":null}},{"id":"112e7a7e-f3d7-5d7a-b093-ff4362b35552","fields":{"slug":"/tool/2017/09/16/gulp-workflow-for-frentend-development.html","date":"2017-09-16T00:00:00.000Z"},"frontmatter":{"title":"프론트엔드 개발을 위한 Gulp","seriesId":null}},{"id":"67a4c35a-c35a-5a93-9f2c-6d8ac9681c14","fields":{"slug":"/2017/10/22/js-context-binding.html","date":"2017-10-22T00:00:00.000Z"},"frontmatter":{"title":"자바스크립트 this 바인딩 우선순위","seriesId":null}},{"id":"360d64a9-9f15-5f15-bd8a-bcea9e9f7ee1","fields":{"slug":"/2018/01/01/review-2017.html","date":"2018-01-01T00:00:00.000Z"},"frontmatter":{"title":"2017년을 보내며","seriesId":null}},{"id":"a43e82bd-515a-52e5-8cd2-ff2d4ba8c800","fields":{"slug":"/2018/01/25/before-jquery.html","date":"2018-01-25T00:00:00.000Z"},"frontmatter":{"title":"jQuery 보다 먼저 알았으면 좋았을 것들","seriesId":null}},{"id":"7ca873e9-65c0-5146-8237-22bddbe34e4e","fields":{"slug":"/2018/03/26/vue-authentication.html","date":"2018-03-26T00:00:00.000Z"},"frontmatter":{"title":"Vuex, Vue-router, Axios를 이용한 SPA 인증 구현","seriesId":null}},{"id":"56113f8b-657d-5959-9894-211bf5014d62","fields":{"slug":"/2018/04/07/vue-router.html","date":"2018-04-07T00:00:00.000Z"},"frontmatter":{"title":"Vue-Router 살펴보기","seriesId":null}},{"id":"87de7890-8c89-5f56-8d88-fe82603df83d","fields":{"slug":"/2018/05/12/extended-component.html","date":"2018-05-12T00:00:00.000Z"},"frontmatter":{"title":"UI 컴포넌트 확장","seriesId":null}},{"id":"314520a6-e832-5048-b62a-2e68f19402ce","fields":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z"},"frontmatter":{"title":"VueJS 폼 검증","seriesId":null}},{"id":"3de6aef7-0330-5ccc-bde8-07317f92521c","fields":{"slug":"/2018/07/16/react-app-overview.html","date":"2018-07-16T00:00:00.000Z"},"frontmatter":{"title":"React로 만든 프로젝트 톺아보기","seriesId":null}},{"id":"d891a845-4c2e-527a-95ca-0627cb35c907","fields":{"slug":"/2018/08/19/express-travis-beanstalk.html","date":"2018-08-19T00:00:00.000Z"},"frontmatter":{"title":"리액트, 노드 백엔드 통합 후 CI 연동하기","seriesId":null}},{"id":"8a02ec18-6cab-5e07-b2df-0c4e47584448","fields":{"slug":"/2018/10/13/ant-design-101.html","date":"2018-10-13T00:00:00.000Z"},"frontmatter":{"title":"앤트 디자인 - 어드민 개발을 위한 프레임웍","seriesId":null}},{"id":"6ab56ddf-2cce-58f2-ac63-3a7ab486890d","fields":{"slug":"/2018/10/21/aws-sns-to-slack.html","date":"2018-10-21T00:00:00.000Z"},"frontmatter":{"title":"AWS를 슬랙으로 모니터링","seriesId":null}},{"id":"a2c3f320-56f4-5bb8-9776-9525cae7f813","fields":{"slug":"/2018/11/08/remote-work.html","date":"2018-11-08T00:00:00.000Z"},"frontmatter":{"title":"비오는 날, 집에서 일하기 좋은 날씨다","seriesId":null}},{"id":"43f5ac37-fff8-57a4-ae63-b8f954d8e1c3","fields":{"slug":"/series/2018/12/01/node-web-0_index.html","date":"2018-12-01T00:00:00.000Z"},"frontmatter":{"title":"🌳[Node.js 코드랩] 소개 및 목차","seriesId":null}},{"id":"9832bcac-0792-56f7-bc6e-b342698962c0","fields":{"slug":"/think/2018/12/22/codelab-review.html","date":"2018-12-22T00:00:00.000Z"},"frontmatter":{"title":"코드랩 시리즈를 마치고 느낀점","seriesId":null}},{"id":"4b3b25aa-2bcf-5b3f-adb3-e5c03c8c5be2","fields":{"slug":"/think/2019/01/03/record.html","date":"2019-01-03T00:00:00.000Z"},"frontmatter":{"title":"기록","seriesId":null}},{"id":"66cf0204-79f9-5765-8ff4-dfca8e35ca97","fields":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z"},"frontmatter":{"title":"Go fmt 패키지","seriesId":null}},{"id":"c407bbb9-4210-5775-9a60-3017d9905811","fields":{"slug":"/dev/2019/01/14/go-time.html","date":"2019-01-14T00:00:00.000Z"},"frontmatter":{"title":"Go time 패키지","seriesId":null}},{"id":"bcf80caf-500c-5ea0-8bf6-ef54d781eff0","fields":{"slug":"/dev/2019/01/18/go-encoding-json.html","date":"2019-01-18T00:00:00.000Z"},"frontmatter":{"title":"Go encoding/json 패키지","seriesId":null}},{"id":"d6a20d9d-d9eb-5b85-80d2-e808bf97d1e3","fields":{"slug":"/dev/2019/02/07/go-net-http.html","date":"2019-02-07T00:00:00.000Z"},"frontmatter":{"title":"Go net/http 패키지","seriesId":null}},{"id":"4ba7dfdb-4056-5737-8f76-be00ac8a5133","fields":{"slug":"/dev/2019/02/18/go-todo-web-application.html","date":"2019-02-18T00:00:00.000Z"},"frontmatter":{"title":"Go로 투두 웹 어플리케이션 만들기","seriesId":null}},{"id":"21085b17-99ef-5505-af1b-a6e75d2b62b4","fields":{"slug":"/think/2019/04/15/change-pain-concentration.html","date":"2019-04-15T00:00:00.000Z"},"frontmatter":{"title":"변화와 고통 그리고 집중","seriesId":null}},{"id":"3df02d9c-cf0c-5823-99ae-e22692fba2fa","fields":{"slug":"/think/2019/04/26/running-machine-load.html","date":"2019-04-26T00:00:00.000Z"},"frontmatter":{"title":"러닝머신과 도로 위","seriesId":null}},{"id":"e0b31087-d6ad-5e2f-9056-2ccff1e5be27","fields":{"slug":"/dev/2019/06/25/react-ts.html","date":"2019-06-25T00:00:00.000Z"},"frontmatter":{"title":"리액트, 타입스크립트 시작하기","seriesId":null}},{"id":"a15b1fa7-c186-55cf-b971-19647a9deb22","fields":{"slug":"/dev/2019/07/08/react-router-ts.html","date":"2019-07-08T00:00:00.000Z"},"frontmatter":{"title":"리액트 라우터 사용하기 (타입스크립트 버전) ","seriesId":null}},{"id":"5fe2d73c-24c5-5eab-80e2-d1dbe13d776e","fields":{"slug":"/dev/2019/07/15/react-redux-ts.html","date":"2019-07-15T00:00:00.000Z"},"frontmatter":{"title":"리액트 리덕스 사용하기 (타입스크립트 버전)","seriesId":null}},{"id":"1a890f3c-1c7c-5d44-81c6-2eaba42b2435","fields":{"slug":"/dev/2019/07/22/react-saga-ts-1.html","date":"2019-07-22T00:00:00.000Z"},"frontmatter":{"title":"리덕스 사가 사용하기 (타입스크립트 버전) - 1편","seriesId":null}},{"id":"dea55f0e-7737-5714-9443-fba757dffe64","fields":{"slug":"/dev/2019/07/29/react-saga-ts-2.html","date":"2019-07-29T00:00:00.000Z"},"frontmatter":{"title":"리덕스 사가 사용하기 (타입스크립트 버전) - 2편","seriesId":null}},{"id":"1d3326c8-67b6-5289-abc5-8f7006534840","fields":{"slug":"/dev/2019/08/12/ie-cache.html","date":"2019-08-12T00:00:00.000Z"},"frontmatter":{"title":"IE의 ajax 캐시 이슈를 처리하는 방법","seriesId":null}},{"id":"5c063b09-581f-58bc-9270-725dfdfb3bb7","fields":{"slug":"/dev/2020/01/28/component-design.html","date":"2020-01-28T00:00:00.000Z"},"frontmatter":{"title":"컴포넌트의 역할 분리","seriesId":null}},{"id":"805e79cc-55d7-5ea0-ab94-6be502efab6b","fields":{"slug":"/dev/2020/02/10/git-usage.html","date":"2020-02-10T00:00:00.000Z"},"frontmatter":{"title":"깃(Git) 개념과 상황별 팁","seriesId":null}},{"id":"abc5b962-3286-503f-88e0-8f4e1088b8b2","fields":{"slug":"/dev/2020/03/09/flex.html","date":"2020-03-09T00:00:00.000Z"},"frontmatter":{"title":"플렉스(flex) 박스, 한 번 정리하고 가자","seriesId":null}},{"id":"1ed03344-ad91-598d-8ef4-c88a827d320a","fields":{"slug":"/dev/2020/03/20/role-based-react-router.html","date":"2020-03-20T00:00:00.000Z"},"frontmatter":{"title":"리액트 라우터를 활용한 권한별 라우팅 제어","seriesId":null}},{"id":"aaad5576-74ed-56ee-8f06-5e6eb593432f","fields":{"slug":"/dev/2020/03/24/circular-dependancy.html","date":"2020-03-24T00:00:00.000Z"},"frontmatter":{"title":"순환 참조","seriesId":null}},{"id":"c446c409-ab23-5345-ba31-afbdde7a2e9d","fields":{"slug":"/think/2020/03/27/imac-ssd-replacement.html","date":"2020-03-27T00:00:00.000Z"},"frontmatter":{"title":"오래된 아이맥, SSD 교체하기","seriesId":null}},{"id":"ba6e4b54-107c-54fd-9d46-6016ba981f5b","fields":{"slug":"/think/2020/03/30/remote-work.html","date":"2020-03-30T00:00:00.000Z"},"frontmatter":{"title":"슬기로운 재택생활","seriesId":null}},{"id":"6d60e670-7f29-5e64-8b70-ee48bb8676a9","fields":{"slug":"/dev/2020/04/05/vscode.html","date":"2020-04-05T00:00:00.000Z"},"frontmatter":{"title":"알아두면 쓸데있는 VSCode 노하우","seriesId":null}},{"id":"9e3d1c8e-8666-5f11-afde-ef82ed7dcf67","fields":{"slug":"/dev/2020/04/18/interface-to-class.html","date":"2020-04-18T00:00:00.000Z"},"frontmatter":{"title":"인터페이스만 사용하다가 클래스를 다시 보았다","seriesId":null}},{"id":"c7ee235c-2361-5766-a69c-ae8a45e48486","fields":{"slug":"/dev/2020/04/30/nodemon-EADDRINUSE.html","date":"2020-04-30T00:00:00.000Z"},"frontmatter":{"title":"노드몬(nodemon) 사용시 포트 충돌 이슈","seriesId":null}},{"id":"7533dec3-4b29-5b3a-8afe-84ff6998e58d","fields":{"slug":"/think/2020/05/11/test.html","date":"2020-05-11T00:00:00.000Z"},"frontmatter":{"title":"테스트 코드는 꼭 필요한가요?","seriesId":null}},{"id":"ac25a7b7-74db-51ea-be90-584f2f3d443c","fields":{"slug":"/dev/2020/05/18/filename.html","date":"2020-05-18T00:00:00.000Z"},"frontmatter":{"title":"파일명 컨벤션과 웹팩/노드 오류","seriesId":null}},{"id":"6a5c753f-338b-5804-9ed2-9624149559e9","fields":{"slug":"/dev/2020/05/25/supertest.html","date":"2020-05-25T00:00:00.000Z"},"frontmatter":{"title":"Node.js로 만든 API 테스트(supertest)","seriesId":null}},{"id":"d0866d1d-38e8-544f-813f-4ec1a870c492","fields":{"slug":"/dev/2020/06/08/html5-form-validation.html","date":"2020-06-08T00:00:00.000Z"},"frontmatter":{"title":"HTML5 폼 검증에 대해 정리해 보자","seriesId":null}},{"id":"3e75a06b-ecc5-55ca-b749-9777ada224fd","fields":{"slug":"/dev/2020/06/20/passport.html","date":"2020-06-20T00:00:00.000Z"},"frontmatter":{"title":"패스포트 동작 원리와 인증 구현","seriesId":null}},{"id":"cbfcbe35-071d-52f6-ad2d-287c1eea6904","fields":{"slug":"/dev/2020/06/27/node-sass.html","date":"2020-06-27T00:00:00.000Z"},"frontmatter":{"title":"node-sass가 노드 버전에 의존적이 이유","seriesId":null}},{"id":"01148b49-e327-5861-8a16-32821900b2d5","fields":{"slug":"/dev/2020/07/06/sequelize-model.html","date":"2020-07-06T00:00:00.000Z"},"frontmatter":{"title":"시퀄라이즈 Model 클래스 활용하기","seriesId":null}},{"id":"bea86ec8-71d2-553f-b16d-41e2ade2a96c","fields":{"slug":"/dev/2020/07/18/webpack-dev-middleware.html","date":"2020-07-18T00:00:00.000Z"},"frontmatter":{"title":"웹팩 개발 서버로 부족하다면 webpack-dev-middleware를 사용해 보자","seriesId":null}},{"id":"aa2cc795-c444-5961-bad1-430b25228113","fields":{"slug":"/dev/2020/07/30/gatsby.html","date":"2020-07-30T00:00:00.000Z"},"frontmatter":{"title":"Gatsby.js 훑어보기","seriesId":null}},{"id":"04d01cb3-6f52-50b8-9d51-a78b9ff407d8","fields":{"slug":"/dev/2020/08/15/react-helmet.html","date":"2020-08-15T00:00:00.000Z"},"frontmatter":{"title":"react-helmet의 동작 방식","seriesId":null}},{"id":"7565246b-33bc-5814-a673-7bb83fc20536","fields":{"slug":"/dev/2020/08/19/gatsby-image.html","date":"2020-08-19T00:00:00.000Z"},"frontmatter":{"title":"개츠비의 이미지 처리 방식","seriesId":null}},{"id":"99400347-75f4-5290-a3a0-9ee76ba504f4","fields":{"slug":"/dev/2020/08/21/gatsby-prefetch.html","date":"2020-08-21T00:00:00.000Z"},"frontmatter":{"title":"개츠비 프리로딩과 프리패치","seriesId":null}},{"id":"a37aecc8-3853-5647-8644-d6d2652caeea","fields":{"slug":"/dev/2020/10/10/mobx.html","date":"2020-10-10T00:00:00.000Z"},"frontmatter":{"title":"상태관리 라이브러리 mobx","seriesId":null}},{"id":"e1a2b701-acb7-52ce-a379-9f28701536c6","fields":{"slug":"/dev/2020/10/25/styled-components.html","date":"2020-10-25T00:00:00.000Z"},"frontmatter":{"title":"styled-component로 리액트 컴포넌트 만들기","seriesId":null}},{"id":"0d59cddc-08ac-5888-a869-2303e7dd42d5","fields":{"slug":"/think/2020/11/01/work-density.html","date":"2020-11-01T00:00:00.000Z"},"frontmatter":{"title":"업무 밀도","seriesId":null}},{"id":"f033f74d-74dd-531a-bbf9-45190d8fee4c","fields":{"slug":"/dev/2020/11/08/serverless-1.html","date":"2020-11-08T00:00:00.000Z"},"frontmatter":{"title":"서버리스 웹 애플리케이션 만들기","seriesId":null}},{"id":"aa28e9e8-8dd9-56c4-bab1-785a1230f1c5","fields":{"slug":"/think/2020/11/14/the-reason-i-write.html","date":"2020-11-14T00:00:00.000Z"},"frontmatter":{"title":"블로그에 글을 쓰는 이유","seriesId":null}},{"id":"7e6576c8-9cbf-5955-9221-cfed230a9bcb","fields":{"slug":"/think/2020/12/21/happy-now.html","date":"2020-12-21T00:00:00.000Z"},"frontmatter":{"title":"\"당장 야금야금 부지런히 행복해야 돼\"","seriesId":null}},{"id":"d30a19a5-a934-5348-b8f4-aa101f10096d","fields":{"slug":"/think/2020/12/29/frontend-developer-roles.html","date":"2020-12-29T00:00:00.000Z"},"frontmatter":{"title":"프론트엔드 개발자의 역할","seriesId":null}},{"id":"74cf28eb-9189-5832-ac7f-649357ac2126","fields":{"slug":"/think/2021/01/05/2020.html","date":"2021-01-05T00:00:00.000Z"},"frontmatter":{"title":"아, 전설적인 한 해였다","seriesId":null}},{"id":"fbd0cf8f-5bfa-5e5d-8b46-be29fe77bcaa","fields":{"slug":"/think/2021/01/07/sense-of-balence.html","date":"2021-01-07T00:00:00.000Z"},"frontmatter":{"title":"균형 감각","seriesId":null}},{"id":"a9171532-e8c0-5ff1-9606-6437e2733b55","fields":{"slug":"/dev/2021/03/08/babel-typescript.html","date":"2021-03-08T00:00:00.000Z"},"frontmatter":{"title":"babel-loader와 ts-loader의 빌드 결과가 다른 현상","seriesId":null}},{"id":"98420aad-1b2e-513f-ad6a-7e06f8494e96","fields":{"slug":"/dev/2021/03/18/type-guard.html","date":"2021-03-18T00:00:00.000Z"},"frontmatter":{"title":"유니온 타입과 타입 가드","seriesId":null}},{"id":"7512278a-0cb8-556f-acd7-a8da451aa331","fields":{"slug":"/dev/2021/03/22/i18n.html","date":"2021-03-22T00:00:00.000Z"},"frontmatter":{"title":"어플리케이션 다국어 기능과 번역가와 협업 방법","seriesId":null}},{"id":"39ac178f-a3f1-550c-ad1c-2e1f448e1e89","fields":{"slug":"/dev/2021/03/29/lambda-limits.html","date":"2021-03-29T00:00:00.000Z"},"frontmatter":{"title":"AWS 람다 용량 관리","seriesId":null}},{"id":"374b4535-49b2-57ae-af8c-acfe259f5d71","fields":{"slug":"/dev/2021/04/01/aws-lambda-cold-start.html","date":"2021-04-01T00:00:00.000Z"},"frontmatter":{"title":"AWS 람다 초기 응답 속도 개선하기","seriesId":null}},{"id":"992678cd-553c-5eec-b410-f771661db0ec","fields":{"slug":"/think/2021/04/29/my-first-capacitive-keyboard.html","date":"2021-04-29T00:00:00.000Z"},"frontmatter":{"title":"나의 첫 무접점 키보드 ","seriesId":null}},{"id":"cd2d3e17-d50f-5c0e-a84b-60bf38832e4a","fields":{"slug":"/dev/2021/05/05/react-context.html","date":"2021-05-05T00:00:00.000Z"},"frontmatter":{"title":"리액트 컨텍스트","seriesId":null}},{"id":"e3d4977a-2f56-550c-b5b6-ae699ea40f0e","fields":{"slug":"/dev/2021/05/17/css-variable.html","date":"2021-05-17T00:00:00.000Z"},"frontmatter":{"title":"CSS 변수와 웹사이트 테마","seriesId":null}}]}},"pageContext":{"slug":"/dev/2019/02/07/go-net-http.html","date":"2019-02-07T00:00:00.000Z","seriesId":null,"videoId":null,"previous":{"fields":{"slug":"/dev/2019/01/18/go-encoding-json.html","date":"2019-01-18T00:00:00.000Z","beforeGatsby":true},"frontmatter":{"title":"Go encoding/json 패키지","category":"dev","permalink":null,"seriesId":null,"videoId":null}},"next":{"fields":{"slug":"/dev/2019/02/18/go-todo-web-application.html","date":"2019-02-18T00:00:00.000Z","beforeGatsby":true},"frontmatter":{"title":"Go로 투두 웹 어플리케이션 만들기","category":"dev","permalink":null,"seriesId":null,"videoId":null}}}},"staticQueryHashes":[]}