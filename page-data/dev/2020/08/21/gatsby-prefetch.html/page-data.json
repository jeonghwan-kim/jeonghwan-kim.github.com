{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/dev/2020/08/21/gatsby-prefetch.html","result":{"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"38351c6d-5e74-5a5b-8589-b01599823982","excerpt":"브라우져에서 웹 페이지 로딩 성능을 좌우하는 요소 중 하나가 리소스를 다운로드 하는것이다.\n이미지, 폰트, 자바스크립트, 스타일시트 등 HTML…","html":"<p>브라우져에서 웹 페이지 로딩 성능을 좌우하는 요소 중 하나가 리소스를 다운로드 하는것이다.\n이미지, 폰트, 자바스크립트, 스타일시트 등 HTML 문서는 다양한 리소스를 가지고 웹페이지를 만들어내기 때문에 미리 다운로드 해야한다.</p>\n<p>다운로드할 파일의 크기가 페이지 로딩 성능에 영향을 주는 것은 인터넷 환경에서 자명하다.\n그렇기 때문에 이미지 크기를 줄이고 코드를 압축하는 등 대역폭을 아끼려고 한다.\n한 번 다운받은 파일을 브라우져가 재사용하도록 캐쉬를 사용하기도 한다.</p>\n<p>개츠비에서도 이러한 노력을 한다.\n특별히 \"프리로드\"과 \"프리패치\"가 눈에 띄였는데 한 번 정리해 보아야겠다.</p>\n<h1 id=\"프리로드와-프리패치\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9C%EC%99%80-%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98\" aria-label=\"프리로드와 프리패치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리로드와 프리패치</h1>\n<p>개츠비로 만든 사이트를 보면 로딩 속도가 꽤 빠른다는 느낌이 든다.\n복합적인 원인이 있지만 그 중에 프리로드(preload)와 프리패치(prefetch)라는 기술을 사용한다.</p>\n<p>머릿말에 \"pre\"라고 이름 붙인 것처럼 페이지에서 사용할 자원을 미리 가져오는 것을 말한다.\n이 둘은 조금 차이가 있는데 아주 단순하게 정리하면 이렇다.</p>\n<ul>\n<li>프리로드(preload): 방문<strong>한</strong> 페이지의 리소스를 <strong>빠르게</strong> 다운로드</li>\n<li>프리패치(prefetch): 방문<strong>할</strong> 페이지의 리소스를 <strong>미리</strong> 다운로드</li>\n</ul>\n<h2 id=\"프리로드preload\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9Cpreload\" aria-label=\"프리로드preload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리로드(preload)</h2>\n<p>자바스크립트 파일은 보통 body 태그 안에서 가져올 uri를 선언한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page-1.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>브라우져는 문서를 파싱하고 렌더링하다가 script 태그를 만나면 그 안에 있는 스크립트를 실행한다.\nsrc 속성에 선언한 uri가 있다면 외부 자바스크립트 파일을 다운로드한 뒤에 실행한다.</p>\n<p>이 다운로드 시점을 앞당길 수 있는 것이 프리로드다.\n문서 head 영역에 link 태그를 사용해 아래처럼 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- body에서 사용할 page-1.js 파일을 미리 다운로드 한다. --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page-1.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>script<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page-1.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>rel=\"preload\" 로 선언한 프리로드는 브라우져가 렌더링하기 전에 리소스를 다운로드하기 시작한다.\n그리고 나서 바디 영역의 script 태그에서 page-1.js 사용하려고 할 때 이미 다운로드 완료한 page-1.js를 바로 실행할 수 있다.</p>\n<p>이전 코드와 달리 다음과 같은 효과가 있다(<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content\">참고</a>).</p>\n<ul>\n<li>화면 라이프사이클 초반에 리소스를 다운로드 함</li>\n<li>다운로드 도중 화면 렌더링을 차단하지 않음</li>\n</ul>\n<h2 id=\"프리패치prefetch\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98prefetch\" aria-label=\"프리패치prefetch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프리패치(prefetch)</h2>\n<p>프리패치는 유저가 다음에 방문할 것으로 예측하는 페이지의 리소스를 미리 다운로드 하는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- (현재 문서에서는 사용하지 않지만) 다음 페이지에서 사용할 리소스를 미리 다운로드 한다 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>prefetch<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page-2.js<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>프리로드와 달리 rel=\"prefetch\"로 선언했다.</p>\n<p>프리패치는 브라우져의 유휴시간(idle time)에 다운로드하기 때문에 프리로드에 비해 다운로드 우선순위가 좀 낮다.\n만약 다운로드가 완료된다면 다음 페이지에 진입했을 때 미리 다운로드한 page-2.js를 사용하기 때문에 화면 로딩 속도가 빠르다.</p>\n<p>유저가 다음에 방문할 것을 어떻게 예측할까?\n아마도 다음 두 가지 일 것 같다.</p>\n<ul>\n<li>문서 안에 있는 하이퍼링크 주소</li>\n<li>유저가 마우스로 포커스한 하이퍼링크 주소</li>\n</ul>\n<h1 id=\"개츠비는-어떻게-동작하는가\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"개츠비는 어떻게 동작하는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개츠비는 어떻게 동작하는가?</h1>\n<p>개츠비에서는 프리로드와 프리패치를 적절히 섞어서 사용한다.\n각각 어떻게 구현하고 있는지 궁금했는데 개츠비 문서 <a href=\"https://www.gatsbyjs.com/docs/how-code-splitting-works/\">Code Splitting and Prefetching</a>가 도움이 되었다.</p>\n<h2 id=\"코드-분할\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%ED%95%A0\" aria-label=\"코드 분할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 분할</h2>\n<p>프리패칭을 하기 전에 먼저 리소스부터 준비한다.\n하나의 커다란 자바스크립트 혹은 스타일시트 파일만 있다면, 모든 페이지에서 하나의 파일만 사용하기 때문에 굳이 이런 기술을 사용할 필요가 없겠지.\n대신 초기 다운로드 속도는 포기해야할 것이다.</p>\n<p>웹팩은 모듈 의존성에 따라 코드를 분할하는 기능을 가지고 있는데 이를 코드 분할(code splitting)이라고 부른다.\n개츠비는 이 기능을 이용해 페이지 단위로 코드를 나눈다.</p>\n<p>이것을 청크(chunk)라고 부르는데 페이지별로 필요한 청크 목록을 page-data.json이란 특별한 파일에 담아 둔다.</p>\n<p>빌드 결과물이 있는 public 폴더를 보면 이런 구조다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/public\n  /page-data\n    /page-1\n      page-data.json\n    /page-2\n      page-data.json\n  /component---src-pages-page-1-js-c30d7ecfca49b0dee715.js\n  /component---src-pages-page-2-js-c30d7ecfca49b0dee715.js</code></pre></div>\n<p>설명을 위해 결과물을 단순하게 정리했다.\n두 개 페이지 /page-1, /page-2 가 있는데 각 페이지가 로딩할 자바스크립트가 생성된다.</p>\n<ul>\n<li>component---src-pages-{페이지 이름}-js-{해쉬}.js</li>\n</ul>\n<p>그리고 화면과 청크의 매핑정보를 담은 page-data.json 파일을 page-data 폴더에 담아 두었다.</p>\n<ul>\n<li>/page-data/{페이지 이름}/page-data.json</li>\n</ul>\n<p>여기까지해서 프리로드와 프리패치 준비를 마쳤다.</p>\n<h2 id=\"개츠비-프리로드\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84-%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9C\" aria-label=\"개츠비 프리로드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개츠비 프리로드</h2>\n<p>빌드 결과물 중에 page-1.html 파일을 보면 프리로드 관련한 코드를 발견할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- 1. 이 화면에서 사용할 청크를 미리 다운로드한다(프리로드). --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span>\n    <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>script<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/component---src-pages-page-1-js-c30d7ecfca49b0dee715.js<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- 2. 이 화면에서 사용할 청크를 실행한다. --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/component---src-pages-page-1-js-c30d7ecfca49b0dee715.js<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">async</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>page-1에서 사용할 component---src-pages-page-1-js-{해쉬}.js 파일을 프리로드한다(1).\n브라우져는 화면 렌더링을 차단하지 않고 파일을 다운로드 할 것이다.</p>\n<p>리소를를 사용할 시점에 가서는 이 파일의 다운로드가 완료되어 있을 것이고, 그래서 바로 실행할 수 있다(2).</p>\n<h2 id=\"개츠비-프리패치\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84-%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98\" aria-label=\"개츠비 프리패치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개츠비 프리패치</h2>\n<p>비교적 단순한 프리로드와 달리 프리패치는 두 가지 시점에서 발생한다.</p>\n<ol>\n<li>링크 컴포넌트(<code class=\"language-text\">&lt;Link&gt;</code>)가 마운트 되었을 때</li>\n<li>링크 컴포넌트에 hover 이벤트가 발생했을 때</li>\n</ol>\n<p>개츠비 프리패치에서는 <strong>개츠비링크(GatsbyLink)</strong> 컴포넌트와 <strong>로더(BaseLoader, ProdLoader)</strong> 클래스가 주요 인물이다.</p>\n<h3 id=\"링크-컴포넌트-마운트-시\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%88%EC%9A%B4%ED%8A%B8-%EC%8B%9C\" aria-label=\"링크 컴포넌트 마운트 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크 컴포넌트 마운트 시</h3>\n<h4 id=\"gatsbylink\" style=\"position:relative;\"><a href=\"#gatsbylink\" aria-label=\"gatsbylink permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GatsbyLink</h4>\n<p>reach-router 패키지의 Link 컴포넌트를 확장한 GatsbyLink는 프리패치를 유발하는 코드를 두 군데 가지고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GatsbyLink</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. 컴포넌트가 마운트 되었을 때: 로더에 경로를 추가한다</span>\n  <span class=\"token comment\">// -> prefetch 유도</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ___loader<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">parsePath</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">rewriteLinkPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pathname\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 2. hover 이벤트 발생시: 로더의 hovering() 메소드를 호출한다</span>\n    <span class=\"token comment\">// -> prefetch 유도</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span>\n        <span class=\"token attr-name\">onMouseEnter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          ___loader<span class=\"token punctuation\">.</span><span class=\"token function\">hovering</span><span class=\"token punctuation\">(</span><span class=\"token function\">parsePath</span><span class=\"token punctuation\">(</span>prefixedTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>리액트로 SPA를 개발할 때 리액트 라우터를 사용하듯, 개츠비 프로젝트 안에서는 GatsbyLink 컴포넌트로 링크를 표현한다.\n이 컴포넌트가 마운트 완료하면 로더라는(<code class=\"language-text\">___loader</code>) 녀석에게 화면 경로를 전달한다(enqueue).\n곧 보겠지만 로더는 전달 받은 경로를 이용해 프리패치 작업을 시작할 것이다(1).</p>\n<p>두번 째 프리패치는 링크에서 hover 이벤트가 발생했을 경우다.\n렌더함수에서 리치 라우터의 Link 컴포넌트를 렌더하는데, onMouseEnter 속성에 로더의 hovering() 메소드를 호출하는 콜백함수를 전달했다.\n이것도 마찬가지로 로더가 프리패칭 작업을 시작할 것이다(2).</p>\n<p>이렇게 프리패치 트리거 포인트를 확인했으니 실제로 프리패치 작업을 하는 로더를 만나보자.</p>\n<h4 id=\"loader\" style=\"position:relative;\"><a href=\"#loader\" aria-label=\"loader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loader</h4>\n<p>로더라고 불렀지만 정확히는 BaseLoader를 상속한 ProdLoader 클래스다.\n두 클래스의 메소드가 프리패치를 하는 구조다.</p>\n<p>개츠비 링크가 마운트될 때 실행하는 enqueue()는 BaseLoader#prefetch() 메소드를 호출한다.\n함수 호출 깊이가 좀 있긴 하지만 주석으로 순서를 매겨놓았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseLoader</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1. enqueue()가 prefetch()를 호출한다</span>\n  <span class=\"token function\">prefetch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pagePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPrefetch</span><span class=\"token punctuation\">(</span><span class=\"token function\">findPath</span><span class=\"token punctuation\">(</span>pagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ProdLoader</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseLoader</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">doPrefetch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pagePath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 2. page-data.json 경로를 만든다</span>\n    <span class=\"token comment\">//    /page-data/page-2/page-data.json</span>\n    <span class=\"token keyword\">const</span> pageDataUrl <span class=\"token operator\">=</span> <span class=\"token function\">createPageDataUrl</span><span class=\"token punctuation\">(</span>pagePath<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 3. 링크 태그를 돔에 추가해 리소스를 다운로드 한다</span>\n    <span class=\"token comment\">//    &lt;link rel=\"prefetch\" herf=\"page-data.json\" as=\"fetch\"></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">prefetchHelper</span><span class=\"token punctuation\">(</span>pageDataUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">as</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">fetch</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 4. page-data.json에서 청크 이름을 조회한다</span>\n      <span class=\"token comment\">//    /component---src-pages-page-2-js.js</span>\n      <span class=\"token keyword\">const</span> chunkName <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">.</span>componentChunkName\n\n      <span class=\"token comment\">// 5. 청크 이름과 컴포넌트 매핑테이블로 컴포넌트 리소스 uri를 만든다</span>\n      <span class=\"token comment\">//    /component---src-pages-page-2-js-ef8c063115e3c48e159a.js</span>\n      <span class=\"token keyword\">const</span> componentUrls <span class=\"token operator\">=</span> <span class=\"token function\">createComponentUrls</span><span class=\"token punctuation\">(</span>chunkName<span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 6. 링크 태그를 돔에 추가해 리소스를 다운로드 한다</span>\n      <span class=\"token comment\">//    &lt;link</span>\n      <span class=\"token comment\">//      rel=\"prefetch\"</span>\n      <span class=\"token comment\">//      href=\"/component---src-pages-page-2-js-ef8c063115e3c48e159a.js\"></span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>componentUrls<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>prefetchHelper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>개츠비 링크는 로더의 prefetch() 메소드를 호출하는데 이는 곧장 doPrefetch() 메소드를 호출한다(1).</p>\n<p>다음 페이지 링크의 경로를 인자로 받는데 이걸 이용해서 다음 페이지와 관련된 page-data.json 파일의 uri를 계산한다(2).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPageDataUrl</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">path</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__PATH_PREFIX__<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/page-data/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fixedPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/page-data.json</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>빌드한 public 폴더를 보면 있는 public/page-data/page-2/page-data.json 이 위치해 있는데 이 파일을 가리키는 주소다.\n이걸 프리패치하는 것이 prefetchHelper() 함수의 역할이다(3).</p>\n<p>이 함수는 문서 head에 link를 동적으로 삽입해서 브라우져가 프리패치 하도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">linkPrefetchStrategy</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// rel=\"prefetch herf=\"{url}\"로 구성된 link 요소를 만든다</span>\n    <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">link</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rel</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">prefetch</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">href</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// as=\"fetch\" 따위의 속성을 추가한다</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 페이지 로드/오류 이벤트에 프라미스를 해결한다</span>\n    link<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> resolve\n    link<span class=\"token punctuation\">.</span>onerror <span class=\"token operator\">=</span> reject\n\n    <span class=\"token comment\">// 문서에 요소를 추가한다</span>\n    <span class=\"token keyword\">const</span> parentElement <span class=\"token operator\">=</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">head</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByName</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">script</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parentNode\n    parentElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 해서 미리 다운로드한 page-data.json 데이터는 다음과 같은 형식이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"componentChunkName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"component---src-pages-page-2-js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/page-2/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"result\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"pageContext\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>page-2 화면이 사용할 청크 이름(componentChunkName)을 찾을 수 있다.\n이걸 이용해 다음 화면에서 사용할 청크를 미리 가져오려는 의도다.</p>\n<p>하지만 빌드된 청크이름 형식을 보면 뒤에 맨 마지막에 해쉬값이 따라온다.\n이 해쉬값까지 더해 주어야 비로소 유효한 uri를 완성할 수 있는데, 이 때 사용하라고 개츠비는 빌드시 매핑 테이블을 미리 준비해 두었다.\n브라우져 개발자 도구로 window.___chunkMapping 값을 확인하며 이것이 바로 매핑 테이블이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"component---src-pages-page-2-js\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"/component---src-pages-page-2-js-ef8c063115e3c48e159a.js\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 테이블을 이용해 uri를 구성하는 코드가 createComponentUrls() 함수다(5).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createComponentUrls</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">componentChunkName</span> <span class=\"token operator\">=></span>\n  <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>___chunkMapping<span class=\"token punctuation\">[</span>componentChunkName<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">chunk</span> <span class=\"token operator\">=></span> __PATH_PREFIX__ <span class=\"token operator\">+</span> chunk\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>page-data.json을 프리패치 해온 것 처럼 완성한 청크 uri들을 마지막으로 한 번 더 프리패치 한다(6).</p>\n<p>간단히 정리하면 개츠비링크는 마운트 시점에 이런 순서로 동작한다.</p>\n<ul>\n<li>링크에 연결된 화면의 페이지 데이터(pgae-data.json)를 가져와 그 화면에서 사용할 청크 이름을 조회 한다</li>\n<li>맵핑 테이블로 청크 uri(component---src-pages-{페이지 이름}-{해쉬})를 계산하고 이 리소스를 다운로드 한다</li>\n</ul>\n<h3 id=\"링크에-hover-이벤트-발생-시\" style=\"position:relative;\"><a href=\"#%EB%A7%81%ED%81%AC%EC%97%90-hover-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%B0%9C%EC%83%9D-%EC%8B%9C\" aria-label=\"링크에 hover 이벤트 발생 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>링크에 hover 이벤트 발생 시</h3>\n<p>두 번째, 링크에 마우스를 올려 hover 이벤트가 발생했을 때 실행되는 로더의 hovering() 메소드는 어떻게 동작할까?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseLoader</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 1.</span>\n  <span class=\"token function\">hovering</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rawPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadPage</span><span class=\"token punctuation\">(</span>rawPath<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rawPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pagePath <span class=\"token operator\">=</span> <span class=\"token function\">findPath</span><span class=\"token punctuation\">(</span>rawPath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> inFlightPromise <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadAppData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// 2. page-data.json을 가져온다</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadPageDataJson</span><span class=\"token punctuation\">(</span>pagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> allData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">// 3. 청크 이름을 조회한다</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> componentChunkName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>payload\n\n    <span class=\"token comment\">// 4. 청크를 프리패치한다</span>\n    <span class=\"token keyword\">const</span> componentChunkPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadComponent</span><span class=\"token punctuation\">(</span>componentChunkName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>외부에 호출된 hovering()은 곧장 loadPage() 메소드를 호출한다(1).</p>\n<p>이것도 마찬가지로 다음 페이지에서 사용할 청크 이름을 가져오기 위해 page-data.json을 가져온다(2).</p>\n<p>가져온 데이터에서 청크 이름을 추출한 뒤(3), 청크를 가져온다.</p>\n<p>브라우저에서 동작하는 모습을 보면 이전과 비슷하게 프리패치하는 것 같은데 loadComponent()의 역할인 듯 하다.\nloadComponent()의 정확한 원리는 잘 모르겠다.</p>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<p>개츠비에서 화면 로딩 속도를 끌어 올리기위해 프리로드와 프리패치 두 개를 모두 사용하는 걸 보았다.</p>\n<p>MDN 문서에서 나온 기본 원리를 따르고 있지만 개츠비만의 노하우도 있었다.\n화면 별로 사용할 정적 자원을 작은 코드 조각으로 먼저 나누어 두었다.\n그리고나서 페이지를 방문하거나 멀지 않은 미래에 방문할 것이라 판단되면 이 작은 코드 조각들을 미리 가져온다.\n다운로드할 파일을 쪼개어 놓았기 때문에 기본적으로 다운로드 속도가 빠르다.\n게다가 미리 미리 자원을 확보하기 때문에 화면 로딩도 빠르게 느껴진다.</p>\n<p>이렇게 브라우져 성능을 위한 기술은 계속 발전하는 것 같다.\n웹 서비스를 만들때 기능 구현에만 빠져있다보니 성능 관련한 처리는 다루어볼 기회가 많지 않았다.\n물론 처음부터 성능을 챙겨갈 수 있는 형편은 못되지만 미리 알고 준비해 두어야겠다.</p>","fields":{"dateStr":"2020년 08월 21일","date":"2020-08-21T00:00:00.000Z","slug":"/dev/2020/08/21/gatsby-prefetch.html"},"frontmatter":{"title":"개츠비 프리로딩과 프리패치","tags":["gatsby","prefetch"],"seriesId":null,"videoId":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9C%EC%99%80-%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98\">프리로드와 프리패치</a></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9Cpreload\">프리로드(preload)</a></li>\n<li><a href=\"#%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98prefetch\">프리패치(prefetch)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80\">개츠비는 어떻게 동작하는가?</a></p>\n<ul>\n<li><a href=\"#%EC%BD%94%EB%93%9C-%EB%B6%84%ED%95%A0\">코드 분할</a></li>\n<li><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84-%ED%94%84%EB%A6%AC%EB%A1%9C%EB%93%9C\">개츠비 프리로드</a></li>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%B8%A0%EB%B9%84-%ED%94%84%EB%A6%AC%ED%8C%A8%EC%B9%98\">개츠비 프리패치</a></p>\n<ul>\n<li>\n<p><a href=\"#%EB%A7%81%ED%81%AC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%88%EC%9A%B4%ED%8A%B8-%EC%8B%9C\">링크 컴포넌트 마운트 시</a></p>\n<ul>\n<li><a href=\"#gatsbylink\">GatsbyLink</a></li>\n<li><a href=\"#loader\">Loader</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%81%ED%81%AC%EC%97%90-hover-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%B0%9C%EC%83%9D-%EC%8B%9C\">링크에 hover 이벤트 발생 시</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>"},"series":null,"video":null,"allMarkdownRemark":{"nodes":[{"id":"68d3df85-88fa-527b-a3a4-d3c1e765eb37","fields":{"slug":"/elastic-beanstalk/","date":"2014-07-12T08:18:53.000Z"},"frontmatter":{"title":"Elastic Beanstalk","seriesId":null}},{"id":"aef83327-ea30-5b33-a1e8-57bc75146ccb","fields":{"slug":"/%ec%95%84%eb%a7%88%ec%a1%b4-s3%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-%ec%84%9c%eb%b2%84-%ea%b5%ac%ec%b6%95/","date":"2014-07-23T08:31:17.000Z"},"frontmatter":{"title":"아마존 S3를 이용한 이미지 업로드 서버 구축","seriesId":null}},{"id":"ac609c86-c4f1-52bb-baf3-8d4ba3f29971","fields":{"slug":"/%ed%8a%b8%ec%9c%84%ed%84%b0-%eb%b6%80%ed%8a%b8%ec%8a%a4%ed%8a%b8%eb%9e%a9-%ec%86%8c%ec%8a%a4%eb%b6%84%ec%84%9d/","date":"2014-07-26T08:31:45.000Z"},"frontmatter":{"title":"트위터 부트스트랩 소스분석","seriesId":null}},{"id":"c19be34c-2710-5d77-a17b-d9365961283f","fields":{"slug":"/%eb%85%b8%eb%93%9c%ec%97%90%ec%84%9c-%ec%84%b8%ec%85%98%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%eb%a1%9c%ea%b7%b8%ec%9d%b8%ec%95%84%ec%9b%83-%ea%b5%ac%ed%98%84/","date":"2014-07-31T08:32:17.000Z"},"frontmatter":{"title":"노드에서 세션을 이용한 로그인/아웃 구현","seriesId":null}},{"id":"4c247a22-58ea-5f17-991a-9fbb6b78cdc3","fields":{"slug":"/angular-fullstack-%eb%a1%9c%eb%94%a9-%ec%86%8d%eb%8f%84-%ea%b0%9c%ec%84%a0/","date":"2014-08-02T08:33:03.000Z"},"frontmatter":{"title":"Angular-fullstack 로딩 속도 개선","seriesId":null}},{"id":"8defbd21-e3f2-5c7a-b67c-6af1b2c80581","fields":{"slug":"/log-io%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-beanstalk-%eb%a1%9c%ea%b7%b8-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81/","date":"2014-08-08T08:33:35.000Z"},"frontmatter":{"title":"log.io를 이용한 beanstalk 로그 모니터링","seriesId":null}},{"id":"d4db3491-c01f-59b6-8f43-bc33b0b22193","fields":{"slug":"/%eb%85%b8%eb%93%9c-%ec%8b%a4%ed%96%89%eb%aa%a8%eb%93%9c%ec%97%90-%eb%94%b0%eb%a5%b8-%ed%99%98%ea%b2%bd%ec%84%a4%ec%a0%95/","date":"2014-08-14T16:42:51.000Z"},"frontmatter":{"title":"노드 실행모드에 따른 환경설정","seriesId":null}},{"id":"6bf566c6-753b-5271-af03-a9dda7e1df32","fields":{"slug":"/expressjs-4-0-%eb%a7%88%ec%9d%b4%ea%b7%b8%eb%a0%88%ec%9d%b4%ec%85%98/","date":"2014-08-21T16:43:14.000Z"},"frontmatter":{"title":"expressjs 4.0 마이그레이션","seriesId":null}},{"id":"8e4ea627-dcaa-562c-8d89-0e39e4de02ca","fields":{"slug":"/underscore-js/","date":"2015-01-05T22:16:09.000Z"},"frontmatter":{"title":"underscore.js","seriesId":null}},{"id":"b0f5d4c4-924a-5a30-8469-04e3450bdf46","fields":{"slug":"/angular-form/","date":"2015-01-09T19:02:17.000Z"},"frontmatter":{"title":"Angular Form","seriesId":null}},{"id":"b0772999-0f85-5ed7-a1e8-74dc8371c1b9","fields":{"slug":"/wordpress-study-01-misfit-kr/","date":"2015-01-09T21:52:58.000Z"},"frontmatter":{"title":"WordPress study 01 &#8211; misfit.kr","seriesId":null}},{"id":"3e85ba40-f69f-5af7-b0cd-0e8caf252791","fields":{"slug":"/%ec%9b%8c%eb%93%9c%ed%94%84%eb%a0%88%ec%8a%a4-ssh2-%ec%84%a4%ec%a0%95/","date":"2015-01-10T15:27:00.000Z"},"frontmatter":{"title":"워드프레스 SSH2 설정","seriesId":null}},{"id":"57bf7a5e-013f-5e57-93fb-45ea5d893bdc","fields":{"slug":"/angularjs-passport%eb%a1%9c-%ec%9d%b8%ec%a6%9d%ea%b5%ac%ed%98%84/","date":"2015-01-17T12:34:54.000Z"},"frontmatter":{"title":"AngularJS, Passport로 인증구현","seriesId":null}},{"id":"55059504-292e-54f8-9e4e-e5712dd51f30","fields":{"slug":"/eb-cli-%ed%88%b4-%ec%82%ac%ec%9a%a9%eb%b2%95-%ec%a0%95%eb%a6%ac/","date":"2015-01-17T14:10:57.000Z"},"frontmatter":{"title":"eb-cli 툴 사용법 정리","seriesId":null}},{"id":"aa152f83-cad3-53c7-aada-08fbd731817d","fields":{"slug":"/resource-%ec%ba%90%ec%89%ac-%ec%84%a4%ec%a0%95/","date":"2015-01-18T21:39:09.000Z"},"frontmatter":{"title":"$resource 캐쉬 설정","seriesId":null}},{"id":"d91b6c1a-5ffb-513d-801f-149ad70490d2","fields":{"slug":"/%ea%bc%ac%eb%a6%ac%ec%97%90-%ea%bc%ac%eb%a6%ac%eb%a5%bc-%eb%ac%b4%eb%8a%94-timeout/","date":"2015-01-22T01:05:37.000Z"},"frontmatter":{"title":"꼬리에 꼬리를 무는 setTimeout()","seriesId":null}},{"id":"8ecee6ab-6c75-564d-bd47-7f16d9b7ed47","fields":{"slug":"/resource%ec%99%80-service/","date":"2015-01-22T01:13:07.000Z"},"frontmatter":{"title":"$resource와 service","seriesId":null}},{"id":"c8ed3a3c-30f3-5c4d-b2fb-9bc7bee13a22","fields":{"slug":"/%eb%b8%8c%eb%9d%bc%ec%9a%b0%ec%a0%b8%ec%97%90%ec%84%9c-%ec%95%84%eb%a7%88%ec%a1%b4-s3-%ed%8c%8c%ec%9d%bc-%ec%97%85%eb%a1%9c%eb%93%9c/","date":"2015-01-24T17:32:45.000Z"},"frontmatter":{"title":"브라우져에서 아마존 S3 파일 업로드","seriesId":null}},{"id":"d41786dd-7856-596e-8c24-1b89b6c7a715","fields":{"slug":"/bit-operation/","date":"2015-02-07T23:08:18.000Z"},"frontmatter":{"title":"비트 연산","seriesId":null}},{"id":"9c2081ba-d432-555a-9cbe-113bf5a787c9","fields":{"slug":"/http-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1/","date":"2015-02-10T10:00:11.000Z"},"frontmatter":{"title":"$http 테스트 코드 작성","seriesId":null}},{"id":"8a3a0b8a-4e7c-5294-830b-4a175a86c38b","fields":{"slug":"/wordpress-and-grunt/","date":"2015-02-18T21:35:59.000Z"},"frontmatter":{"title":"워드프레스에 Grunt 설정하기","seriesId":null}},{"id":"98fbff01-a5b4-549e-a005-4aeb58f8d859","fields":{"slug":"/%ec%84%9c%eb%b2%84-%eb%8b%a4%ec%9a%b4%ed%83%80%ec%9e%84-%ec%97%86%ec%9d%b4-%eb%b9%88%ec%8a%a4%ed%86%a1-%ea%b0%88%ec%95%84%ed%83%80%ea%b8%b0/","date":"2015-03-05T20:47:38.000Z"},"frontmatter":{"title":"서버 다운타임 없이 빈스톡 갈아타기","seriesId":null}},{"id":"1292ddbc-f243-5dbb-8bf6-2fc349694920","fields":{"slug":"/%eb%aa%bd%ea%b3%a0db-%ec%9d%b8%eb%8d%b1%ec%8a%a4-%ec%99%b8/","date":"2015-03-10T00:10:10.000Z"},"frontmatter":{"title":"몽고DB 인덱스 외","seriesId":null}},{"id":"cdff3655-07ae-5125-b435-ae4df6478c33","fields":{"slug":"/wordpress-and-jquery/","date":"2015-03-11T00:16:00.000Z"},"frontmatter":{"title":"워드프레스와 제이쿼리 등","seriesId":null}},{"id":"d18e8a2d-c7a7-50a0-b335-a008fa8387b0","fields":{"slug":"/plugins-in-wordpress/","date":"2015-03-12T20:32:16.000Z"},"frontmatter":{"title":"워드프레스 플러그인 정리","seriesId":null}},{"id":"0d280a88-dc87-5b3f-a303-4c1c39a0135f","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac-%eb%94%94%eb%a0%89%ed%8b%b0%eb%b8%8c-%eb%93%b1/","date":"2015-03-18T22:04:01.000Z"},"frontmatter":{"title":"앵귤러 디렉티브 등","seriesId":null}},{"id":"fc794569-6fe4-573c-9e76-2562a43da20a","fields":{"slug":"/options-%eb%a9%94%ec%8f%98%eb%93%9c%ec%97%90-%eb%8c%80%ed%95%b4/","date":"2015-03-19T23:14:17.000Z"},"frontmatter":{"title":"options 메쏘드에 대해","seriesId":null}},{"id":"a1e17090-e82c-5641-91ce-37969b7d7d5d","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%97%90-%ed%85%9c%ed%94%8c%eb%a6%bf-%eb%a1%9c%eb%94%a9/","date":"2015-03-23T20:28:13.000Z"},"frontmatter":{"title":"앵귤러 서비스에 템플릿 로딩","seriesId":null}},{"id":"d5e57d53-c89e-5fa9-bc08-9f182727d023","fields":{"slug":"/fileupload-in-expressjs/","date":"2015-03-28T14:13:12.000Z"},"frontmatter":{"title":"익스프레스 파일 업로드","seriesId":null}},{"id":"dc450955-aa7b-56d1-9b39-e78943f30ece","fields":{"slug":"/how-to-build-wordpress-child-theme/","date":"2015-03-28T15:07:50.000Z"},"frontmatter":{"title":"워드프레스 자식 테마 만들기","seriesId":null}},{"id":"ebfda30f-5744-5e2b-a8b5-25c03fa1ed22","fields":{"slug":"/custom-menu-in-wordpress/","date":"2015-03-28T15:43:26.000Z"},"frontmatter":{"title":"워드프레스 커스텀 메뉴 추가하기","seriesId":null}},{"id":"c333e492-f410-5b35-8656-c5b8e569b656","fields":{"slug":"/ui-route%eb%a1%9c-%eb%9d%bc%ec%9a%b0%ed%8c%85-%ec%9d%b8%ec%a6%9d-%ea%b5%ac%ed%98%84/","date":"2015-04-01T23:38:41.000Z"},"frontmatter":{"title":"ui-route로 라우팅 인증 구현","seriesId":null}},{"id":"cdcc4c01-b6c5-5a92-adbf-13c64a45a72f","fields":{"slug":"/how-to-run-nodejs-and-php-by-using-nginx/","date":"2015-04-10T10:04:00.000Z"},"frontmatter":{"title":"nginx를 이용하여 nodejs와 php 어플리케이션 함께 구동하기","seriesId":null}},{"id":"cdb5ed96-2afd-5161-b157-d2e1723ea220","fields":{"slug":"/server-side-loggin-in-angular/","date":"2015-05-05T23:45:45.000Z"},"frontmatter":{"title":"프론트에서 잡지 못한 예외를 서버에 리포팅하는 방법","seriesId":null}},{"id":"9d493751-ed37-5a19-aaf5-710935650b20","fields":{"slug":"/oauth2-0-in-rest-api/","date":"2015-06-11T15:31:20.000Z"},"frontmatter":{"title":"REST api에 OAuth2.0 구현","seriesId":null}},{"id":"43894d1d-9394-5097-ae91-12d1dfc93393","fields":{"slug":"/google-material-design/","date":"2015-06-14T15:20:29.000Z"},"frontmatter":{"title":"Google Material Design","seriesId":null}},{"id":"bc3e4d9e-4eaa-5c84-bcdd-9a1a4d0cf52f","fields":{"slug":"/%ec%9d%b4%eb%8b%88%ed%8e%98%ec%9d%b4-%eb%aa%a8%eb%b0%94%ec%9d%bc-%ea%b2%b0%ec%a0%9c-%ec%8b%a0%ec%9a%a9%ec%b9%b4%eb%93%9c-%ea%b0%9c%eb%b0%9c-%ed%9b%84%ea%b8%b0/","date":"2015-06-18T09:03:02.000Z"},"frontmatter":{"title":"이니페이 모바일 결제 (신용카드) 개발 후기","seriesId":null}},{"id":"a386521a-0fd8-5b72-a322-7c543276d908","fields":{"slug":"/momentjs/","date":"2015-06-19T08:12:10.000Z"},"frontmatter":{"title":"momentjs","seriesId":null}},{"id":"dcf665f2-6388-54a4-be39-6d58d9966d84","fields":{"slug":"/%ec%9d%b4%eb%8b%88%ed%8e%98%ec%9d%b4-%eb%aa%a8%eb%b0%94%ec%9d%bc-%ea%b2%b0%ec%a0%9c-%ea%b3%84%ec%a2%8c%ec%9d%b4%ec%b2%b4-%ea%b0%9c%eb%b0%9c-%ed%9b%84%ea%b8%b0/","date":"2015-06-26T09:14:45.000Z"},"frontmatter":{"title":"이니페이 모바일 결제 (계좌이체) 개발 후기","seriesId":null}},{"id":"57638eb6-a83f-5518-8d8b-d6c96968f6e0","fields":{"slug":"/socket-io%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%8b%a4%ec%8b%9c%ea%b0%84-%ec%9b%b9-%ea%b5%ac%ed%98%84/","date":"2015-07-07T22:14:13.000Z"},"frontmatter":{"title":"Socket.io를 이용한 실시간 웹 구현","seriesId":null}},{"id":"a18616a8-4af6-5608-9491-9c91ce75120b","fields":{"slug":"/mi-band-moves-rocket-pocket/","date":"2015-07-19T19:25:06.000Z"},"frontmatter":{"title":"Mi Band, Moves, Rocket Pocket","seriesId":null}},{"id":"606b222d-902a-5490-aa8c-b616e524a7b1","fields":{"slug":"/ngform-%ed%81%b4%eb%9e%98%ec%8a%a4%eb%aa%85-%ed%99%9c%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-07-21T23:47:11.000Z"},"frontmatter":{"title":"ngForm 클래스명 활용하기","seriesId":null}},{"id":"684b33cd-cc54-5e74-86d0-acb7d5913c2c","fields":{"slug":"/passport-google-oauth-%ea%b5%ac%ea%b8%80-%ec%9d%b8%ec%a6%9d-%eb%aa%a8%eb%93%88/","date":"2015-07-23T21:50:03.000Z"},"frontmatter":{"title":"passport-google-oauth 구글 인증 모듈","seriesId":null}},{"id":"241d5fec-1930-5156-9fac-c7eee76deffd","fields":{"slug":"/ngform-%eb%b0%b8%eb%a6%ac%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%99%9c%ec%9a%a9/","date":"2015-07-24T09:10:27.000Z"},"frontmatter":{"title":"ngForm 밸리데이터 활용","seriesId":null}},{"id":"b3c25ffc-0a53-5d8e-a5be-efc683541009","fields":{"slug":"/ngform-%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%a0%95%ec%9d%98-%eb%b0%b8%eb%a6%ac%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%a7%8c%eb%93%a4%ea%b8%b0/","date":"2015-07-24T21:08:44.000Z"},"frontmatter":{"title":"ngForm 사용자 정의 밸리데이터 만들기","seriesId":null}},{"id":"15e22b7e-31fa-5a54-8f07-61f5d8d8fa25","fields":{"slug":"/dusk-theme-in-webstorm/","date":"2015-07-26T21:42:47.000Z"},"frontmatter":{"title":"웹스톰 Dusk 테마","seriesId":null}},{"id":"33f04c2a-a924-5d23-9efd-7b4d0bbe6d24","fields":{"slug":"/%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-1-multer-%eb%aa%a8%eb%93%88%eb%a1%9c-%ed%8c%8c%ec%9d%bc-%ec%97%85%eb%a1%9c%eb%93%9c/","date":"2015-07-27T17:09:22.000Z"},"frontmatter":{"title":"이미지 업로드 - 1. multer 모듈로 파일 업로드","seriesId":null}},{"id":"22d4b562-70df-5fb2-abcf-978135ee8b99","fields":{"slug":"/%ec%9d%b4%eb%af%b8%ec%a7%80-%ec%97%85%eb%a1%9c%eb%93%9c-2-gm-%eb%aa%a8%eb%93%88%eb%a1%9c-%ec%9d%b4%eb%af%b8%ec%a7%80-%eb%a6%ac%ec%82%ac%ec%9d%b4%ec%a7%95/","date":"2015-07-27T17:10:21.000Z"},"frontmatter":{"title":"이미지 업로드 – 2. gm 모듈로 이미지 리사이징","seriesId":null}},{"id":"c713785d-d742-5cdc-b393-597375b72906","fields":{"slug":"/%eb%a6%ac%eb%88%85%ec%8a%a4-%eb%8d%b0%eb%aa%ac%ec%9c%bc%eb%a1%9c-%eb%85%b8%eb%93%9c-%ec%96%b4%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ea%b4%80%eb%a6%ac%ed%95%98%ea%b8%b0/","date":"2015-07-29T23:04:12.000Z"},"frontmatter":{"title":"리눅스 데몬으로 노드 어플리케이션 관리하기","seriesId":null}},{"id":"3cef4464-3b14-5195-a5b8-9ddf04325b2a","fields":{"slug":"/express-js-1-%ec%84%a4%ec%b9%98%ec%99%80-%ea%b5%ac%ec%a1%b0/","date":"2015-07-30T22:12:40.000Z"},"frontmatter":{"title":"Express.js - 1. 설치와 구조","seriesId":null}},{"id":"818d2bb3-28ee-530c-883f-bdf5a63983b0","fields":{"slug":"/express-js-2-%eb%9d%bc%ec%9a%b0%ed%8c%85/","date":"2015-08-03T09:56:22.000Z"},"frontmatter":{"title":"Express.js - 2. 라우팅","seriesId":null}},{"id":"89f5d13e-cd2d-5edc-b6b8-f93657ba69f8","fields":{"slug":"/express-js-3-%ed%85%9c%ed%94%8c%eb%a6%bfjade/","date":"2015-08-04T21:00:46.000Z"},"frontmatter":{"title":"Express.js - 3. 템플릿(Jade)","seriesId":null}},{"id":"4c523eb5-881a-5f31-9de8-a548ce7d4aa0","fields":{"slug":"/grunt-open/","date":"2015-08-10T09:38:30.000Z"},"frontmatter":{"title":"grunt open","seriesId":null}},{"id":"fcd79052-c0ae-51ee-9b14-9b79a9d381ec","fields":{"slug":"/oh-my-zsh%eb%a1%9c-%ed%84%b0%eb%af%b8%eb%84%90-%ea%be%b8%eb%af%b8%ea%b8%b0/","date":"2015-08-10T14:41:05.000Z"},"frontmatter":{"title":"Oh My Zsh로 터미널 꾸미기","seriesId":null}},{"id":"04230c5a-f795-5f5f-af87-97f61a9937ab","fields":{"slug":"/postdigest%ec%99%80-timeout/","date":"2015-08-12T00:35:20.000Z"},"frontmatter":{"title":"$$postDigest()와 $timeout()","seriesId":null}},{"id":"00bf161f-d4d6-5a41-8422-398a941fe884","fields":{"slug":"/resource%eb%a1%9c-rest-api-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-08-13T23:32:53.000Z"},"frontmatter":{"title":"$resource로 REST api 사용하기","seriesId":null}},{"id":"f5db894f-17f9-54ca-9f9c-3091f01a6f4a","fields":{"slug":"/sequalize-%ec%bf%bc%eb%a6%ac/","date":"2015-08-22T15:22:13.000Z"},"frontmatter":{"title":"sequalize 쿼리","seriesId":null}},{"id":"40a948c1-9b76-5430-b08c-529d7f7623f3","fields":{"slug":"/%ec%95%84%ed%86%b0-%ec%97%90%eb%94%94%ed%84%b0-%ec%99%b8%eb%aa%a8-%eb%b3%80%ea%b2%bd%ed%95%98%ea%b8%b0/","date":"2015-08-30T11:28:05.000Z"},"frontmatter":{"title":"아톰 에디터 외모 변경하기","seriesId":null}},{"id":"9a3b7b53-6ceb-5811-ba28-121cf86d120a","fields":{"slug":"/%ec%b9%b4%ed%8e%9824-sms-node-%eb%aa%a8%eb%93%88/","date":"2015-08-31T14:16:34.000Z"},"frontmatter":{"title":"카페24 SMS node 모듈","seriesId":null}},{"id":"cb337274-ca3f-5bb0-9866-99126f084dd4","fields":{"slug":"/%ea%b0%9c%eb%b0%9c-%ec%a0%88%ec%b0%a8%ec%97%90-%eb%8f%84%ec%bb%a4-%ec%a0%81%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-09-02T11:13:03.000Z"},"frontmatter":{"title":"개발 절차에 도커 적용하기","seriesId":null}},{"id":"6168540c-f1a6-59dc-8290-26d7762b7775","fields":{"slug":"/docker-git/","date":"2015-09-07T10:55:26.000Z"},"frontmatter":{"title":"Docker + Git","seriesId":null}},{"id":"7bb07923-a519-57a2-8e4a-8a3120a9577a","fields":{"slug":"/%ed%81%ac%eb%a1%a0%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%a0%eb%95%8c-%ec%84%9c%eb%b2%84-%ec%8b%9c%ea%b0%84%ec%9d%84-%ec%a0%95%ed%99%95%ed%9e%88-%eb%a7%9e%ec%b6%94%ec%9e%90/","date":"2015-09-08T20:10:54.000Z"},"frontmatter":{"title":"크론을 사용할때 서버 시간을 정확히 맞추자","seriesId":null}},{"id":"e2c503b7-bf45-56b2-a849-b55605615fee","fields":{"slug":"/%ea%b9%83git-%ec%84%9c%eb%b2%84-%eb%a7%8c%eb%93%a4%ea%b8%b0/","date":"2015-09-08T20:12:06.000Z"},"frontmatter":{"title":"깃(git) 서버 만들기","seriesId":null}},{"id":"36cb56bf-92b2-517b-ab7c-c29c9604b49d","fields":{"slug":"/agenda/","date":"2015-09-10T23:03:16.000Z"},"frontmatter":{"title":"Agenda","seriesId":null}},{"id":"ba0e44bf-2b07-5c97-9b76-2ab2400cf11b","fields":{"slug":"/%ec%95%88%ec%93%b0%eb%8a%94-imac%ec%9d%84-%eb%a7%a5%eb%b6%81-%ec%99%b8%ec%9e%a5-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a1%9c-%ec%82%ac%ec%9a%a9%ed%95%98%ec%9e%90/","date":"2015-09-11T21:56:33.000Z"},"frontmatter":{"title":"안쓰는 iMac을 맥북 외장 모니터로 사용하자!","seriesId":null}},{"id":"4eb03c50-847c-5ffa-9de0-2c8cdcaeda3e","fields":{"slug":"/%ec%9d%b5%ec%8a%a4%ed%94%84%eb%a0%88%ec%8a%a4-api-%ec%84%9c%eb%b2%84-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1%ed%95%98%ea%b8%b0/","date":"2015-09-15T11:55:36.000Z"},"frontmatter":{"title":"익스프레스 API 서버 테스트 코드 작성하기","seriesId":null}},{"id":"4c6a7ec9-de41-5ad8-b2b1-7d9153288a23","fields":{"slug":"/forever-and-docker/","date":"2015-09-19T14:12:03.000Z"},"frontmatter":{"title":"Forever와 Docker","seriesId":null}},{"id":"42275369-b2b3-5f3d-a1dc-77cdfd3b0982","fields":{"slug":"/docker-usage/","date":"2015-09-19T15:16:40.000Z"},"frontmatter":{"title":"도커 활용기","seriesId":null}},{"id":"737a57ee-a093-5a45-89b5-2dc155a75278","fields":{"slug":"/%ec%9b%90%ea%b2%a9%eb%a1%9c%ea%b7%b8%ec%9d%b8ssh-%ec%a0%91%ec%86%8d/","date":"2015-09-23T09:27:20.000Z"},"frontmatter":{"title":"원격로그인(SSH) 접속","seriesId":null}},{"id":"0a8ff45b-21a1-58e7-9580-9f8d57f677af","fields":{"slug":"/mysql-%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4-%ec%82%ad%ec%a0%9c-%ec%97%90%eb%9f%ac/","date":"2015-09-27T12:27:46.000Z"},"frontmatter":{"title":"mysql 데이터베이스 삭제 에러","seriesId":null}},{"id":"d5e7a4ec-1f88-5c09-b629-fa99b2f73745","fields":{"slug":"/osx-%eb%85%b8%ed%8a%b8-%ea%b8%80%ea%bc%b4-%eb%b3%80%ea%b2%bd/","date":"2015-09-28T15:48:23.000Z"},"frontmatter":{"title":"osx 노트 글꼴 변경","seriesId":null}},{"id":"d922af70-db4b-51ff-97af-a7786c80c0d0","fields":{"slug":"/git-push-%ec%9d%b4%eb%b2%a4%ed%8a%b8%eb%a5%bc-slack-%ec%b1%84%eb%84%90%eb%a1%9c-%eb%b3%b4%eb%82%b4%ea%b8%b0/","date":"2015-10-01T19:59:03.000Z"},"frontmatter":{"title":"git push 이벤트를 slack 채널로 보내기","seriesId":null}},{"id":"675d928f-a910-59aa-91dc-34fa8fb6dd54","fields":{"slug":"/simpletest-php-unit-test/","date":"2015-10-13T17:17:22.000Z"},"frontmatter":{"title":"SimpleTest &#8211; php unit test","seriesId":null}},{"id":"9f7b11cf-2be8-5f1f-8167-e74d5a9a0a0d","fields":{"slug":"/%eb%8f%84%ec%bb%a4%ec%97%90%ec%84%9c-%eb%aa%bd%ea%b3%a0%eb%94%94%eb%b9%84-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0/","date":"2015-10-16T17:33:59.000Z"},"frontmatter":{"title":"도커에서 몽고디비 컨테이너 사용하기","seriesId":null}},{"id":"f8af2947-d016-50ca-827f-5d4dfbea2445","fields":{"slug":"/%ec%95%b5%ea%b7%a4%eb%9f%ac%eb%a1%9c-%eb%a7%8c%eb%93%a0-spa-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%a8%ec%9d%84-%ec%95%84%eb%a7%88%ec%a1%b4%ec%9b%b9%ec%84%9c%eb%b9%84%ec%8a%a4-s3%ec%97%90%ec%84%9c-%ec%9b%b9/","date":"2015-10-27T10:08:59.000Z"},"frontmatter":{"title":"앵귤러로 만든 spa 프로그램을 아마존웹서비스 s3에서 웹호스팅 하는 방법","seriesId":null}},{"id":"e6893239-88fb-5082-8bef-c32e6945f33a","fields":{"slug":"/%ec%84%9c%eb%b2%84-%ea%b5%ac%eb%8f%99%ec%8b%9c-%eb%b2%84%ec%a0%84-%ec%b2%b4%ed%81%ac/","date":"2015-10-30T09:29:05.000Z"},"frontmatter":{"title":"서버 구동시 버전 체크","seriesId":null}},{"id":"dff9a286-231b-5ce1-a9cf-fc344e9d9d24","fields":{"slug":"/karma%ec%99%80-watch%eb%a1%9c-%ec%9c%a0%eb%8b%9b%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bd%94%eb%93%9c-%ea%b0%9c%eb%b0%9c%ed%95%98%ea%b8%b0/","date":"2015-11-04T10:49:41.000Z"},"frontmatter":{"title":"karma와 watch로 유닛테스트 코드 개발하기","seriesId":null}},{"id":"9cae4bf8-9ec8-588e-bab5-836b2a73f0b6","fields":{"slug":"/karma%ec%97%90-%eb%a6%ac%ed%8f%ac%ed%84%b0-%ec%b6%94%ea%b0%80%ed%95%98%ea%b8%b0/","date":"2015-11-11T19:44:34.000Z"},"frontmatter":{"title":"karma에 리포터 추가하기","seriesId":null}},{"id":"ff6296dc-049d-5620-bef9-e7320b6a67f2","fields":{"slug":"/atom-%ec%97%90%eb%94%94%ed%84%b0-%ed%94%8c%eb%9f%ac%ea%b7%b8%ec%9d%b8-%ec%a0%95%eb%a6%ac/","date":"2015-11-11T20:34:05.000Z"},"frontmatter":{"title":"Atom 에디터 플러그인 정리","seriesId":null}},{"id":"74cf610f-c638-5bbc-b1e1-46b03ffc5cb6","fields":{"slug":"/%ea%b8%b0%ec%a1%b4-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%ec%99%80-swagger-ui-%ec%97%b0%eb%8f%99%ed%95%98%ea%b8%b0/","date":"2015-11-24T20:33:24.000Z"},"frontmatter":{"title":"기존 프로젝트와 Swagger-ui 연동하기","seriesId":null}},{"id":"fbb53548-2e52-51e6-9840-999c338705b4","fields":{"slug":"/atom-%ed%94%8c%eb%9f%ac%ea%b7%b8%ec%9d%b8-atom-sync/","date":"2015-11-25T20:48:34.000Z"},"frontmatter":{"title":"Atom 플러그인: atom-sync","seriesId":null}},{"id":"ce17484e-fa7b-572f-b0c4-918f24a20f65","fields":{"slug":"/%ec%b9%b4%ec%b9%b4%ec%98%a4-%ec%9d%b8%ec%a6%9d-%ed%85%8c%ec%8a%a4%ed%8a%b8/","date":"2015-11-28T18:53:58.000Z"},"frontmatter":{"title":"카카오 인증 테스트","seriesId":null}},{"id":"de2bcf7f-8671-52a5-892a-e257743d151b","fields":{"slug":"/ghost-%eb%9d%bc%ec%9a%b0%ed%8c%85-%eb%a1%9c%ec%a7%81-%eb%b6%84%ec%84%9d/","date":"2015-11-30T22:40:51.000Z"},"frontmatter":{"title":"Ghost 라우팅 로직 분석","seriesId":null}},{"id":"e027a03b-69c1-5211-91df-4cb98c607add","fields":{"slug":"/%ed%8e%98%ec%9d%b4%ec%8a%a4%eb%b6%81-%ed%86%a0%ed%81%b0-%ea%b6%8c%ed%95%9c-%ed%99%95%ec%9d%b8-%ec%a3%bc%ec%86%8c/","date":"2015-12-02T14:46:07.000Z"},"frontmatter":{"title":"페이스북 토큰 권한 확인 주소","seriesId":null}},{"id":"cc9eb427-00e8-5df1-aec5-69d25b033f68","fields":{"slug":"/%ea%b8%b0%ec%a1%b4-mysql%ec%97%90-%ec%9e%a5%ea%b3%a0-%ec%96%b4%eb%93%9c%eb%af%bc-%eb%b6%99%ec%9d%b4%ea%b8%b0/","date":"2015-12-02T20:19:58.000Z"},"frontmatter":{"title":"기존 데이터베이스에 장고 어드민 통합하기","seriesId":null}},{"id":"5e17d444-76cc-5bea-8b74-092ad79432e9","fields":{"slug":"/gunicorn-%ec%9e%a5%ea%b3%a0-%ec%96%b4%eb%93%9c%eb%af%bc-%ed%94%84%eb%a1%9c%eb%8d%95%ec%85%98-%ec%84%9c%eb%b2%84%ec%97%90-%ea%b5%ac%eb%8f%99%ed%95%98%ea%b8%b0/","date":"2015-12-03T17:12:21.000Z"},"frontmatter":{"title":"gunicorn: 장고 어드민 프로덕션 서버에 구동하기","seriesId":null}},{"id":"ef6eccd2-aa66-54fb-b5fd-9d93cda5e231","fields":{"slug":"/%ec%9a%b0%eb%b6%84%ed%88%ac%ec%97%90-django-admin-mysql-python-%ec%84%a4%ec%b9%98/","date":"2015-12-03T18:04:28.000Z"},"frontmatter":{"title":"우분투에 Django-admin, mysql-python 설치","seriesId":null}},{"id":"66660811-2f9a-5d7b-8358-bc0b4ffd6fe2","fields":{"slug":"/mongodump-is-not-working-on-cronjob/","date":"2015-12-07T20:55:16.000Z"},"frontmatter":{"title":"mongodump 크론잡이 동작하지 않을 때","seriesId":null}},{"id":"67cf3dec-7f5e-5dd0-8c6e-7be0775cf144","fields":{"slug":"/swagger-node/","date":"2015-12-11T11:40:31.000Z"},"frontmatter":{"title":"Swagger-node로 express 시작하기","seriesId":null}},{"id":"d99829b5-de76-551b-8181-3fb2a11b12d7","fields":{"slug":"/javascript-decorator-pattern/","date":"2015-12-13T08:20:53.000Z"},"frontmatter":{"title":"Javascript Decorator Pattern","seriesId":null}},{"id":"937da531-999c-5125-9dfe-fcd1f757f871","fields":{"slug":"/ng-plualize-%eb%8b%a8%ec%88%98-%eb%b3%b5%ec%88%98%ed%98%95-%ec%b2%98%eb%a6%ac/","date":"2015-12-21T09:56:48.000Z"},"frontmatter":{"title":"ng-plualize 단수, 복수형 처리","seriesId":null}},{"id":"2d7aba23-7726-5b64-928a-8554854f6add","fields":{"slug":"/2015-%eb%b8%94%eb%a1%9c%ea%b7%b8-%ea%b2%b0%ec%82%b0/","date":"2016-01-01T22:42:19.000Z"},"frontmatter":{"title":"2015 블로그 결산","seriesId":null}},{"id":"c9c6851f-1c5d-5cb4-8b47-5274fa024051","fields":{"slug":"/boot2docker-%ec%97%85%eb%8d%b0%ec%9d%b4%ed%8a%b8-v1-9/","date":"2016-01-03T18:26:20.000Z"},"frontmatter":{"title":"boot2docker 업데이트 (v1.9)","seriesId":null}},{"id":"2212c3f0-2964-51fe-bc36-d7a305c8acea","fields":{"slug":"/mocha/","date":"2016-01-05T00:02:30.000Z"},"frontmatter":{"title":"NodeJS에서 가장 많이 사용하는 테스트 프레임웍, Mocha","seriesId":null}},{"id":"135f1e7e-3174-53cb-93dd-bbdba215e22b","fields":{"slug":"/naming-uploaded-file-on-wordpress/","date":"2016-01-11T21:15:30.000Z"},"frontmatter":{"title":"워드프레스 파일 업로드 시 파일명 처리","seriesId":null}},{"id":"44aee721-04b5-500f-934d-a40d95e1c667","fields":{"slug":"/add-fk-on-sequelize-migration/","date":"2016-01-12T22:17:40.000Z"},"frontmatter":{"title":"Sequelize로 마이그레이션 시 외래키 추가하기","seriesId":null}},{"id":"ec4915be-297d-52bc-9f1c-df2733590d75","fields":{"slug":"/sequelize-migration/","date":"2016-01-14T09:21:17.000Z"},"frontmatter":{"title":"Sequelize 마이그레이션","seriesId":null}},{"id":"83006150-c020-5f83-b47e-a1465a17dbfd","fields":{"slug":"/sequelize-model/","date":"2016-01-26T23:27:50.000Z"},"frontmatter":{"title":"Sequelize Modeling","seriesId":null}},{"id":"85353038-f182-57a0-a26a-bac22961f407","fields":{"slug":"/aws-%ec%84%9c%ec%9a%b8-%eb%a6%ac%ec%a0%84%ec%9c%bc%eb%a1%9c-%eb%b8%94%eb%a1%9c%ea%b7%b8-%ec%9d%b4%eb%8f%99/","date":"2016-01-30T19:35:32.000Z"},"frontmatter":{"title":"AWS 서울 리전으로 블로그 이동","seriesId":null}},{"id":"10f8568d-05de-568a-931e-d405b4e107a8","fields":{"slug":"/lodash/","date":"2016-01-31T15:14:43.000Z"},"frontmatter":{"title":"lodash","seriesId":null}},{"id":"ed7b6299-d208-53df-a347-bc202aeb5e44","fields":{"slug":"/morgan-helper/","date":"2016-02-01T08:29:51.000Z"},"frontmatter":{"title":"morgan-helper","seriesId":null}},{"id":"1980a7de-07cd-573c-8262-19cd44e6263e","fields":{"slug":"/sequelize-seed-%ec%8b%9c%eb%93%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b4%80%eb%a6%ac%ed%95%98%ea%b8%b0/","date":"2016-02-03T12:02:53.000Z"},"frontmatter":{"title":"Sequelize Seed - 시드 데이터 관리하기","seriesId":null}},{"id":"aa457c96-65ce-5280-a9ef-14d56b669734","fields":{"slug":"/2016/02/07/from-wordpress-to-jekyll.html","date":"2016-02-07T00:00:00.000Z"},"frontmatter":{"title":"워드프레스에서 지킬로 블로그 이동","seriesId":null}},{"id":"a8240ba4-8424-569a-8e67-b7fd0c4a2658","fields":{"slug":"/2016/02/07/jekyll-customizing.html","date":"2016-02-07T00:00:00.000Z"},"frontmatter":{"title":"Jekyll 커스터마이징 1 - 코멘트와 페이지네이션","seriesId":null}},{"id":"fea2c5b6-c995-56b6-ba9a-cca60a54b756","fields":{"slug":"/2016/02/20/beanstalk-in-seoul.html","date":"2016-02-20T00:00:00.000Z"},"frontmatter":{"title":"서울에서 Elastic Beanstalk 사용하기","seriesId":null}},{"id":"4b8cf9ff-050e-57c9-aef0-593c9bf5e772","fields":{"slug":"/2016/02/28/http-test-with-nock-mocha.html","date":"2016-02-28T00:00:00.000Z"},"frontmatter":{"title":"Nock, Mocha로 HTTP 테스트하기","seriesId":null}},{"id":"813ac065-bda8-5d09-ad2b-61396229e2b3","fields":{"slug":"/2016/02/29/jekyll-tag.html","date":"2016-02-29T00:00:00.000Z"},"frontmatter":{"title":"Jekyll 커스터마이징 2 - 태그","seriesId":null}},{"id":"77afa667-370c-52aa-9fe0-7902a7bfaadc","fields":{"slug":"/2016/03/21/must-use-error-in-reject.html","date":"2016-03-21T00:00:00.000Z"},"frontmatter":{"title":"Promise.reject()에 에러 객체를 넘겨줘야하는 이유","seriesId":null}},{"id":"b1c1e963-4011-530a-97b9-e1b5608b8f6c","fields":{"slug":"/2016/03/29/mobile-rest-api.html","date":"2016-03-29T00:00:00.000Z"},"frontmatter":{"title":"서버 개발자 입장에서 바라본 모바일 API 디자인","seriesId":null}},{"id":"1077c3fc-00e7-588e-9495-6030fdfe3182","fields":{"slug":"/2016/04/28/es6.html","date":"2016-04-28T00:00:00.000Z"},"frontmatter":{"title":"ECMAScript2015(ES6)로 Node.JS 코딩하기","seriesId":null}},{"id":"0b2bd0d2-a2cd-535a-9a79-6707a84d18f4","fields":{"slug":"/2016/05/13/image-resizing-with-lambda.html","date":"2016-05-13T00:00:00.000Z"},"frontmatter":{"title":"람다를 이용해 이미지 리사이징 서버 만들기","seriesId":null}},{"id":"0a125133-c83e-56b9-b4ca-5f1cf45a9848","fields":{"slug":"/2016/05/13/swagger-parser.html","date":"2016-05-13T00:00:00.000Z"},"frontmatter":{"title":"스웨거 문서 문법 체크하기","seriesId":null}},{"id":"2b2f8b2e-7341-52bf-b998-2a781dcf1cf8","fields":{"slug":"/2016/05/17/aws-submit-2016.html","date":"2016-05-17T00:00:00.000Z"},"frontmatter":{"title":"AWS Summit 2016 참관 후기","seriesId":null}},{"id":"ecc4671f-9f5d-54e6-9034-fecfd468ad8b","fields":{"slug":"/2016/06/29/querystring-body-in-express.html","date":"2016-06-29T00:00:00.000Z"},"frontmatter":{"title":"노드에서는 쿼리스트링 인코딩을 어떻게 처리할까?","seriesId":null}},{"id":"878c3bf3-6375-57db-9953-fec0895f9f49","fields":{"slug":"/2016/07/13/sequelize-transaction.html","date":"2016-07-13T00:00:00.000Z"},"frontmatter":{"title":"Sequelize Transaction 사용할때 주의할 점","seriesId":null}},{"id":"5ff1a708-5eea-5879-86a5-77c86ffb8f88","fields":{"slug":"/2016/07/19/babel.html","date":"2016-07-19T00:00:00.000Z"},"frontmatter":{"title":"Babel로 ES6 코드 사용하기","seriesId":null}},{"id":"902ac521-9961-50de-9efa-3762870b44db","fields":{"slug":"/2016/07/28/istanbul.html","date":"2016-07-28T00:00:00.000Z"},"frontmatter":{"title":"Istanbul로 코드 커버리지 측정하기","seriesId":null}},{"id":"7353b4e2-42dd-59df-ba0f-2897c7f14179","fields":{"slug":"/2016/08/03/ionic-hello-world.html","date":"2016-08-03T00:00:00.000Z"},"frontmatter":{"title":"Ionic으로 Hello world 시작하기","seriesId":null}},{"id":"5bcb4193-8689-5743-82f0-dc041c2cbc05","fields":{"slug":"/2016/08/10/nvm.html","date":"2016-08-10T00:00:00.000Z"},"frontmatter":{"title":"NVM으로 노드 버전 관리하기","seriesId":null}},{"id":"791eb381-7b82-5946-8841-a3da99c874f3","fields":{"slug":"/2016/08/11/pyenv.html","date":"2016-08-11T00:00:00.000Z"},"frontmatter":{"title":"PYENV로 파이썬 버전 관리하기","seriesId":null}},{"id":"5e8e8c28-28dd-5fa4-b4b1-f45cd17a90d7","fields":{"slug":"/2016/08/16/git-alias.html","date":"2016-08-16T00:00:00.000Z"},"frontmatter":{"title":"Git Alias 사용법: 깃 단축키 설정하는 방법 ","seriesId":null}},{"id":"ee5d0b75-a249-5288-af40-138a99b17ab3","fields":{"slug":"/2016/08/20/angular-facts-easy-to-miss.html","date":"2016-08-20T00:00:00.000Z"},"frontmatter":{"title":"앵귤러 개발자가 놓치기 쉬운 10가지 사실들","seriesId":null}},{"id":"d10cf2a6-c7ae-5136-842d-8a9711bfac23","fields":{"slug":"/2016/08/23/about-angular2-quickstart-libraries.html","date":"2016-08-23T00:00:00.000Z"},"frontmatter":{"title":"Angular2 Quickstart에서 사용하는 라이브러리는 왜 이렇게 많을까?","seriesId":null}},{"id":"8f2171c2-da66-5c74-83d4-ef868f0d3d11","fields":{"slug":"/2016/09/03/jscon2016.html","date":"2016-09-03T00:00:00.000Z"},"frontmatter":{"title":"JSCON 2016 참관 후기","seriesId":null}},{"id":"eb2f8a54-c55a-5015-a8c4-115f32e52565","fields":{"slug":"/2016/09/27/imac-kernel-panic.html","date":"2016-09-27T00:00:00.000Z"},"frontmatter":{"title":"아이맥, 커널 패닉에 빠지다","seriesId":null}},{"id":"772a704e-e603-59bb-a2ea-2e05192fda51","fields":{"slug":"/2016/10/13/how-to-make-yeoman-generator.html","date":"2016-10-13T00:00:00.000Z"},"frontmatter":{"title":"Yeoman 제너레이터 만들기","seriesId":null}},{"id":"49e798fa-132a-510d-a76d-65959e724ff8","fields":{"slug":"/2016/11/29/flow.html","date":"2016-11-29T00:00:00.000Z"},"frontmatter":{"title":"WebStorm에 Flow 기능 사용 후기","seriesId":null}},{"id":"68419776-7918-5bc4-aafb-921173634a97","fields":{"slug":"/2016/12/15/coroutine.html","date":"2016-12-15T00:00:00.000Z"},"frontmatter":{"title":"제너레이터와 프라미스를 이용한 비동기 처리","seriesId":null}},{"id":"c45ed613-b1e2-5184-b4c4-1a9ff4e9b2f9","fields":{"slug":"/etc/2017/01/02/review-2016.html","date":"2017-01-02T00:00:00.000Z"},"frontmatter":{"title":"2016년을 보내며","seriesId":null}},{"id":"77e48b51-eda6-520f-9a8f-51720f6cdac1","fields":{"slug":"/toy_project/2017/01/09/reading-book.html","date":"2017-01-09T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_독서노트","seriesId":null}},{"id":"80e94721-fe65-56ae-b89d-5d3340dce046","fields":{"slug":"/toy_project/2017/01/16/facebook-analysis.html","date":"2017-01-16T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_페이스북 분석기","seriesId":null}},{"id":"86d6f493-5222-5d87-ad4c-c1dbe53b7460","fields":{"slug":"/etc/2017/01/16/so-you-want-to-be-a-functional-programmer-part-6.html","date":"2017-01-16T00:00:00.000Z"},"frontmatter":{"title":"함수형 프로그래머가 되고 싶다고? 파트6","seriesId":null}},{"id":"ef2be24f-5798-57f1-b8d4-28afddd9968f","fields":{"slug":"/toy_project/2017/01/17/life-tracker.html","date":"2017-01-17T00:00:00.000Z"},"frontmatter":{"title":"토이프로젝트_라이프트래커","seriesId":null}},{"id":"f5b2e5ff-c160-5b61-ab75-f62840b96d20","fields":{"slug":"/node/2017/01/27/node-io-deep.html","date":"2017-01-27T00:00:00.000Z"},"frontmatter":{"title":"노드 개발자가 IO 작업을 시작하면 무슨일이 일어날까?","seriesId":null}},{"id":"c218264c-b330-597f-86fe-1a36941a1810","fields":{"slug":"/node/2017/02/06/utf8mb4-in-sequelize.html","date":"2017-02-06T00:00:00.000Z"},"frontmatter":{"title":"시퀄라이즈에서 이모티콘 저장하기","seriesId":null}},{"id":"cacfd122-0279-5758-9f1c-fc5904d6d890","fields":{"slug":"/js/2017/02/17/dependency-injection.html","date":"2017-02-17T00:00:00.000Z"},"frontmatter":{"title":"의존성 주입","seriesId":null}},{"id":"af879582-0784-5251-8e6e-67edc734ad0c","fields":{"slug":"/aws/2017/03/06/apex.html","date":"2017-03-06T00:00:00.000Z"},"frontmatter":{"title":"Apex로 좀 더 편리한 람다 개발환경 만들기","seriesId":null}},{"id":"1ec2fccd-bf09-58ae-91e0-3fec9d43469f","fields":{"slug":"/vue/2017/03/27/vue.html","date":"2017-03-27T00:00:00.000Z"},"frontmatter":{"title":"Vue.js 살펴보기","seriesId":null}},{"id":"0d2b8274-551d-5d90-91cd-f60a8bcdf7a3","fields":{"slug":"/tool/2017/03/28/jasmine.html","date":"2017-03-28T00:00:00.000Z"},"frontmatter":{"title":"자스민으로 프론트엔드 테스트 코드 작성하기","seriesId":null}},{"id":"66c6ab69-cf08-5e4a-a62e-6f9ca355e5ca","fields":{"slug":"/vue/2017/03/29/is-vue-better-than-angular-react.html","date":"2017-03-29T00:00:00.000Z"},"frontmatter":{"title":"과연 Vue.js가 앵귤러나 리엑트보다 좋을까?","seriesId":null}},{"id":"aad1805f-6959-5394-8439-fb52219c1507","fields":{"slug":"/vue/2017/04/19/vue-component-test.html","date":"2017-04-19T00:00:00.000Z"},"frontmatter":{"title":"Vue 글로벌 컴포넌트 테스트","seriesId":null}},{"id":"3d1bcabc-f2c4-59a5-aca1-dc044fcc6f7b","fields":{"slug":"/js/2017/05/15/webpack.html","date":"2017-05-15T00:00:00.000Z"},"frontmatter":{"title":"웹팩의 기본 개념","seriesId":null}},{"id":"2d07675f-2d15-572e-9973-e02fec324c37","fields":{"slug":"/js/2017/05/22/webpack-file-loader.html","date":"2017-05-22T00:00:00.000Z"},"frontmatter":{"title":"웹팩의 file-loader와 url-loader","seriesId":null}},{"id":"17a99a5f-f244-53bd-af5a-e2748e7c9dcd","fields":{"slug":"/node/2017/07/03/node-stream-you-need-to-know.html","date":"2017-07-03T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 1편","seriesId":null}},{"id":"77243aa0-5766-5a40-89ef-4123ad2042a7","fields":{"slug":"/node/2017/08/07/node-stream-you-need-to-know-2.html","date":"2017-08-07T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 2편","seriesId":null}},{"id":"0c408db7-afac-5439-9d67-43e0390417c3","fields":{"slug":"/node/2017/08/12/node-stream-you-need-to-know-3.html","date":"2017-08-12T00:00:00.000Z"},"frontmatter":{"title":"Node.js Stream 당신이 알아야할 모든 것 3편","seriesId":null}},{"id":"bc930438-0362-54d6-89f5-f5ec29f8036a","fields":{"slug":"/node/2017/08/17/express-error-handling.html","date":"2017-08-17T00:00:00.000Z"},"frontmatter":{"title":"에러 처리를 위한 익스프레스 가이드","seriesId":null}},{"id":"5e705d09-23d3-5858-8859-7967462ebd2a","fields":{"slug":"/tool/2017/09/16/gulp-workflow-for-frentend-development.html","date":"2017-09-16T00:00:00.000Z"},"frontmatter":{"title":"프론트엔드 개발을 위한 Gulp","seriesId":null}},{"id":"61c0aff8-9d62-5371-b646-a58cfea25ed0","fields":{"slug":"/2017/10/22/js-context-binding.html","date":"2017-10-22T00:00:00.000Z"},"frontmatter":{"title":"자바스크립트 this 바인딩 우선순위","seriesId":null}},{"id":"5686f6ba-1074-5467-b3d9-4ebc414c02df","fields":{"slug":"/2018/01/01/review-2017.html","date":"2018-01-01T00:00:00.000Z"},"frontmatter":{"title":"2017년을 보내며","seriesId":null}},{"id":"989a6750-74c0-5892-bd99-4007a225fe0b","fields":{"slug":"/2018/01/25/before-jquery.html","date":"2018-01-25T00:00:00.000Z"},"frontmatter":{"title":"jQuery 보다 먼저 알았으면 좋았을 것들","seriesId":null}},{"id":"ead6e4de-f8b7-52e6-a058-98aeab2f239d","fields":{"slug":"/2018/03/26/vue-authentication.html","date":"2018-03-26T00:00:00.000Z"},"frontmatter":{"title":"Vuex, Vue-router, Axios를 이용한 SPA 인증 구현","seriesId":null}},{"id":"55d138a7-a301-595d-b7ef-dea5b8aca249","fields":{"slug":"/2018/04/07/vue-router.html","date":"2018-04-07T00:00:00.000Z"},"frontmatter":{"title":"Vue-Router 살펴보기","seriesId":null}},{"id":"8e1ccd38-d498-5356-9364-96185e100510","fields":{"slug":"/2018/05/12/extended-component.html","date":"2018-05-12T00:00:00.000Z"},"frontmatter":{"title":"UI 컴포넌트 확장","seriesId":null}},{"id":"5056628e-cebb-5c2e-9bf9-8bc8bad385f2","fields":{"slug":"/2018/05/31/vue-form-validation.html","date":"2018-05-31T00:00:00.000Z"},"frontmatter":{"title":"VueJS 폼 검증","seriesId":null}},{"id":"5e7ac2df-d391-58c7-bb56-21aedb66ebab","fields":{"slug":"/2018/07/16/react-app-overview.html","date":"2018-07-16T00:00:00.000Z"},"frontmatter":{"title":"React로 만든 프로젝트 톺아보기","seriesId":null}},{"id":"92b2a51d-0a93-5261-bba6-cb9a59ee7e4e","fields":{"slug":"/2018/08/19/express-travis-beanstalk.html","date":"2018-08-19T00:00:00.000Z"},"frontmatter":{"title":"리액트, 노드 백엔드 통합 후 CI 연동하기","seriesId":null}},{"id":"e1a9a085-f67f-5047-955b-fbaae253ee98","fields":{"slug":"/2018/10/13/ant-design-101.html","date":"2018-10-13T00:00:00.000Z"},"frontmatter":{"title":"앤트 디자인 - 어드민 개발을 위한 프레임웍","seriesId":null}},{"id":"4f64d9df-37b3-5082-b39b-494cbe620fd2","fields":{"slug":"/2018/10/21/aws-sns-to-slack.html","date":"2018-10-21T00:00:00.000Z"},"frontmatter":{"title":"AWS를 슬랙으로 모니터링","seriesId":null}},{"id":"55508ddf-6029-5a3c-a368-634d14fc7824","fields":{"slug":"/2018/11/08/remote-work.html","date":"2018-11-08T00:00:00.000Z"},"frontmatter":{"title":"비오는 날, 집에서 일하기 좋은 날씨다","seriesId":null}},{"id":"6cafd8ff-7703-5f19-8226-b580ccd28415","fields":{"slug":"/series/2018/12/01/node-web-0_index.html","date":"2018-12-01T00:00:00.000Z"},"frontmatter":{"title":"🌳[Node.js 코드랩] 소개 및 목차","seriesId":null}},{"id":"02f3466c-41ad-5705-ade5-30a1af8fbdb4","fields":{"slug":"/think/2018/12/22/codelab-review.html","date":"2018-12-22T00:00:00.000Z"},"frontmatter":{"title":"코드랩 시리즈를 마치고 느낀점","seriesId":null}},{"id":"6c24522a-65e6-5225-8844-07ef9ce6ece2","fields":{"slug":"/think/2019/01/03/record.html","date":"2019-01-03T00:00:00.000Z"},"frontmatter":{"title":"기록","seriesId":null}},{"id":"359ee3b9-4093-55c9-8baf-cbb30256ae2b","fields":{"slug":"/dev/2019/01/08/go-fmt.html","date":"2019-01-08T00:00:00.000Z"},"frontmatter":{"title":"Go fmt 패키지","seriesId":null}},{"id":"7de47351-2876-5766-a912-af08751fa342","fields":{"slug":"/dev/2019/01/14/go-time.html","date":"2019-01-14T00:00:00.000Z"},"frontmatter":{"title":"Go time 패키지","seriesId":null}},{"id":"6eb635d3-8fc8-5691-b26a-f16687ef97f0","fields":{"slug":"/dev/2019/01/18/go-encoding-json.html","date":"2019-01-18T00:00:00.000Z"},"frontmatter":{"title":"Go encoding/json 패키지","seriesId":null}},{"id":"8dac7797-6f6e-5f98-a4e5-3f40b50c4e85","fields":{"slug":"/dev/2019/02/07/go-net-http.html","date":"2019-02-07T00:00:00.000Z"},"frontmatter":{"title":"Go net/http 패키지","seriesId":null}},{"id":"dd5cd4df-4d1b-5c90-bfa5-abcc434ed990","fields":{"slug":"/dev/2019/02/18/go-todo-web-application.html","date":"2019-02-18T00:00:00.000Z"},"frontmatter":{"title":"Go로 투두 웹 어플리케이션 만들기","seriesId":null}},{"id":"747f60ca-3f95-5471-9e01-d0802adff6e3","fields":{"slug":"/think/2019/04/15/change-pain-concentration.html","date":"2019-04-15T00:00:00.000Z"},"frontmatter":{"title":"변화와 고통 그리고 집중","seriesId":null}},{"id":"1c7b7176-58a4-5c60-b6a7-757555f56b1e","fields":{"slug":"/think/2019/04/26/running-machine-load.html","date":"2019-04-26T00:00:00.000Z"},"frontmatter":{"title":"러닝머신과 도로 위","seriesId":null}},{"id":"257e64df-977d-5bdb-a484-3aa53405d603","fields":{"slug":"/dev/2019/06/25/react-ts.html","date":"2019-06-25T00:00:00.000Z"},"frontmatter":{"title":"리액트, 타입스크립트 시작하기","seriesId":null}},{"id":"97b6b9ec-f6e3-5bba-ae92-ba3f88f28ef2","fields":{"slug":"/dev/2019/07/08/react-router-ts.html","date":"2019-07-08T00:00:00.000Z"},"frontmatter":{"title":"리액트 라우터 사용하기 (타입스크립트 버전) ","seriesId":null}},{"id":"c2e6bccf-41b4-52bd-9824-b028a19601c3","fields":{"slug":"/dev/2019/07/15/react-redux-ts.html","date":"2019-07-15T00:00:00.000Z"},"frontmatter":{"title":"리액트 리덕스 사용하기 (타입스크립트 버전)","seriesId":null}},{"id":"a816f5ae-69dd-5165-bca0-f9cd4cbc3c34","fields":{"slug":"/dev/2019/07/22/react-saga-ts-1.html","date":"2019-07-22T00:00:00.000Z"},"frontmatter":{"title":"리덕스 사가 사용하기 (타입스크립트 버전) - 1편","seriesId":null}},{"id":"476a7b2f-f990-5305-aa8d-2a82079ff05d","fields":{"slug":"/dev/2019/07/29/react-saga-ts-2.html","date":"2019-07-29T00:00:00.000Z"},"frontmatter":{"title":"리덕스 사가 사용하기 (타입스크립트 버전) - 2편","seriesId":null}},{"id":"62eaec2c-3ef0-5892-8c2c-9b13c6933d1e","fields":{"slug":"/dev/2019/08/12/ie-cache.html","date":"2019-08-12T00:00:00.000Z"},"frontmatter":{"title":"IE의 ajax 캐시 이슈를 처리하는 방법","seriesId":null}},{"id":"843f6efb-7f83-5916-b133-3bf9a41fb9f9","fields":{"slug":"/dev/2020/01/28/component-design.html","date":"2020-01-28T00:00:00.000Z"},"frontmatter":{"title":"컴포넌트의 역할 분리","seriesId":null}},{"id":"afb6a9fe-3148-5772-a311-d065eab32ff3","fields":{"slug":"/dev/2020/02/10/git-usage.html","date":"2020-02-10T00:00:00.000Z"},"frontmatter":{"title":"깃(Git) 개념과 상황별 팁","seriesId":null}},{"id":"ff63cb58-15c1-5c1f-8f02-8999b664967c","fields":{"slug":"/dev/2020/03/09/flex.html","date":"2020-03-09T00:00:00.000Z"},"frontmatter":{"title":"플렉스(flex) 박스, 한 번 정리하고 가자","seriesId":null}},{"id":"94f3d284-af88-57a0-a24c-df1082160aad","fields":{"slug":"/dev/2020/03/20/role-based-react-router.html","date":"2020-03-20T00:00:00.000Z"},"frontmatter":{"title":"리액트 라우터를 활용한 권한별 라우팅 제어","seriesId":null}},{"id":"8a73c211-9b93-5bbf-a36d-896b65da17f0","fields":{"slug":"/dev/2020/03/24/circular-dependancy.html","date":"2020-03-24T00:00:00.000Z"},"frontmatter":{"title":"순환 참조","seriesId":null}},{"id":"bfaa6327-9c4b-5a4d-9687-032bf49398e4","fields":{"slug":"/think/2020/03/27/imac-ssd-replacement.html","date":"2020-03-27T00:00:00.000Z"},"frontmatter":{"title":"오래된 아이맥, SSD 교체하기","seriesId":null}},{"id":"f5c79a42-27cc-5f28-9217-e88db9c414a3","fields":{"slug":"/think/2020/03/30/remote-work.html","date":"2020-03-30T00:00:00.000Z"},"frontmatter":{"title":"슬기로운 재택생활","seriesId":null}},{"id":"5641757a-cc08-5240-bf71-d4fed5a50459","fields":{"slug":"/dev/2020/04/05/vscode.html","date":"2020-04-05T00:00:00.000Z"},"frontmatter":{"title":"알아두면 쓸데있는 VSCode 노하우","seriesId":null}},{"id":"af594a3a-1492-5b9f-a5f1-72b8a02ad175","fields":{"slug":"/dev/2020/04/18/interface-to-class.html","date":"2020-04-18T00:00:00.000Z"},"frontmatter":{"title":"인터페이스만 사용하다가 클래스를 다시 보았다","seriesId":null}},{"id":"8f007265-6cbd-5cd3-a2ef-7d2a84fd854d","fields":{"slug":"/dev/2020/04/30/nodemon-EADDRINUSE.html","date":"2020-04-30T00:00:00.000Z"},"frontmatter":{"title":"노드몬(nodemon) 사용시 포트 충돌 이슈","seriesId":null}},{"id":"7908d5ec-38e4-5d96-9a7b-d3bd24388aa8","fields":{"slug":"/think/2020/05/11/test.html","date":"2020-05-11T00:00:00.000Z"},"frontmatter":{"title":"테스트 코드는 꼭 필요한가요?","seriesId":null}},{"id":"c3b7fae8-b2c6-5407-9890-060e0603feba","fields":{"slug":"/dev/2020/05/18/filename.html","date":"2020-05-18T00:00:00.000Z"},"frontmatter":{"title":"파일명 컨벤션과 웹팩/노드 오류","seriesId":null}},{"id":"02995257-b4a5-5575-b545-ec887629e10a","fields":{"slug":"/dev/2020/05/25/supertest.html","date":"2020-05-25T00:00:00.000Z"},"frontmatter":{"title":"Node.js로 만든 API 테스트(supertest)","seriesId":null}},{"id":"3ec383a1-d3de-5d65-9cd0-066e42c4744a","fields":{"slug":"/dev/2020/06/08/html5-form-validation.html","date":"2020-06-08T00:00:00.000Z"},"frontmatter":{"title":"HTML5 폼 검증에 대해 정리해 보자","seriesId":null}},{"id":"dd787a29-d67f-5373-9270-b31ba3827e74","fields":{"slug":"/dev/2020/06/20/passport.html","date":"2020-06-20T00:00:00.000Z"},"frontmatter":{"title":"패스포트 동작 원리와 인증 구현","seriesId":null}},{"id":"150c1a43-acd7-5254-a70e-d07786b220ab","fields":{"slug":"/dev/2020/06/27/node-sass.html","date":"2020-06-27T00:00:00.000Z"},"frontmatter":{"title":"node-sass가 노드 버전에 의존적이 이유","seriesId":null}},{"id":"db1821a2-8a6f-5f6a-80fd-f4db57c78975","fields":{"slug":"/dev/2020/07/06/sequelize-model.html","date":"2020-07-06T00:00:00.000Z"},"frontmatter":{"title":"시퀄라이즈 Model 클래스 활용하기","seriesId":null}},{"id":"fa389ec8-9c1f-586e-8e1b-4b0547cc18b8","fields":{"slug":"/dev/2020/07/18/webpack-dev-middleware.html","date":"2020-07-18T00:00:00.000Z"},"frontmatter":{"title":"웹팩 개발 서버로 부족하다면 webpack-dev-middleware를 사용해 보자","seriesId":null}},{"id":"0c9d46e4-ada4-5b7a-a92c-fcf04c8bf419","fields":{"slug":"/dev/2020/07/30/gatsby.html","date":"2020-07-30T00:00:00.000Z"},"frontmatter":{"title":"Gatsby.js 훑어보기","seriesId":null}},{"id":"26176e00-8be1-5e33-988e-f5cc2f1433ea","fields":{"slug":"/dev/2020/08/15/react-helmet.html","date":"2020-08-15T00:00:00.000Z"},"frontmatter":{"title":"react-helmet의 동작 방식","seriesId":null}},{"id":"3332eb85-7f68-5198-aea0-14ede2dd59a3","fields":{"slug":"/dev/2020/08/19/gatsby-image.html","date":"2020-08-19T00:00:00.000Z"},"frontmatter":{"title":"개츠비의 이미지 처리 방식","seriesId":null}},{"id":"38351c6d-5e74-5a5b-8589-b01599823982","fields":{"slug":"/dev/2020/08/21/gatsby-prefetch.html","date":"2020-08-21T00:00:00.000Z"},"frontmatter":{"title":"개츠비 프리로딩과 프리패치","seriesId":null}},{"id":"d2891a5f-f133-5174-b7fe-2a79d39452c4","fields":{"slug":"/dev/2020/10/10/mobx.html","date":"2020-10-10T00:00:00.000Z"},"frontmatter":{"title":"상태관리 라이브러리 mobx","seriesId":null}},{"id":"f590379a-0bde-59b4-a7cb-01bfbc06bbcd","fields":{"slug":"/dev/2020/10/25/styled-components.html","date":"2020-10-25T00:00:00.000Z"},"frontmatter":{"title":"styled-component로 리액트 컴포넌트 만들기","seriesId":null}},{"id":"81206003-a493-5baf-9926-52aeb035e05d","fields":{"slug":"/think/2020/11/01/work-density.html","date":"2020-11-01T00:00:00.000Z"},"frontmatter":{"title":"업무 밀도","seriesId":null}},{"id":"597dda86-5a24-5ce8-91d2-2ecced9bffe8","fields":{"slug":"/dev/2020/11/08/serverless-1.html","date":"2020-11-08T00:00:00.000Z"},"frontmatter":{"title":"서버리스 웹 애플리케이션 만들기","seriesId":null}}]}},"pageContext":{"slug":"/dev/2020/08/21/gatsby-prefetch.html","date":"2020-08-21T00:00:00.000Z","seriesId":null,"videoId":null,"previous":{"fields":{"slug":"/dev/2020/08/19/gatsby-image.html","date":"2020-08-19T00:00:00.000Z","beforeGatsby":false},"frontmatter":{"title":"개츠비의 이미지 처리 방식","category":"dev","permalink":null,"seriesId":null,"videoId":null}},"next":{"fields":{"slug":"/dev/2020/10/10/mobx.html","date":"2020-10-10T00:00:00.000Z","beforeGatsby":false},"frontmatter":{"title":"상태관리 라이브러리 mobx","category":"dev","permalink":null,"seriesId":null,"videoId":null}}}},"staticQueryHashes":["1591182808"]}