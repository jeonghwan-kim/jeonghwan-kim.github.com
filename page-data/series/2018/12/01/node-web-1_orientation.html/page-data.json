{
    "componentChunkName": "component---src-templates-blog-post-index-tsx",
    "path": "/series/2018/12/01/node-web-1_orientation.html",
    "result": {"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"bfbe2949-f7c2-5861-9d73-2145263850e4","html":"<h2 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌳목표</h2>\n<p>이론적인 내용보다는 코드를 직접 따라하는 내용이 많습니다.\n중간에 실습 문제가 있어서 여러분이 직접 코딩하는 순서도 있구요.\n이런 환경을 갖추기 위한 실습 세팅 작업부터 시작하겠습니다.</p>\n<h2 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<p>모든 코드는 <a href=\"https://github.com/jeonghwan-kim/codelab-node-web\">깃헙 저장소</a>에 올려 두었습니다.\n이 코드를 여러분 컴퓨터에 복사해서 가져 옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone git@github.com:jeonghwan-kim/codelab-node-web.git\n<span class=\"token comment\"># or</span>\n$ <span class=\"token function\">git</span> clone https://github.com/jeonghwan-kim/codelab-node-web.git</code></pre></div>\n<p>진행 순서에 따라 브랜치를 여러개 만들어 두었는데요, 먼저 <code>scaffolding/init</code> 브랜치로 이동 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> checkout scaffolding/init</code></pre></div>\n<p>.gitignore 파일만 있네요. 이건 깃에서 추적하지 않는 파일 이름을 작성한 목록입니다.</p>\n<p>여기서부터 코딩을 시작하겠습니다. 💻</p>\n<h2 id=\"npm\" style=\"position:relative;\"><a href=\"#npm\" aria-label=\"npm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NPM</h2>\n<p>NPM은 노드 패키지 매니저(Node Package Manage)라고도 하는데요.\n노드에서 만든 매키지(혹은 모듈, 라이브러리 따위)를 관리하는 도구입니다.</p>\n<p>노드 기반의 프로젝트는 이 NPM을 이용해서 개발하는데요, 아래 명령어로 시작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init</code></pre></div>\n<p><code>init</code> 명령은 노드 프로젝트를 생성하는 기능입니다.\n명령을 실행하고 나면 프로젝트 정보에 대해 몇 가지 물어볼텐데요.\n그렇게 중요하지 않으니 <code>-y</code> 옵션으로 모두 \"네(yes)\"라고 대답할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y</code></pre></div>\n<p>이제 프로젝트 폴더에 package.json 파일이 생성되었을 겁니다.\nNPM은 이 파일에 프로젝트 관련 정보를 담는 것이죠.</p>\n<h2 id=\"테스트-환경-세팅\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD-%EC%84%B8%ED%8C%85\" aria-label=\"테스트 환경 세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 환경 세팅</h2>\n<p>노드에서 테스트 환경을 만들려면 외부 프레임웍 도움을 받아야 합니다.\n모카(Mocha)와 슈드(Should)인데요, 설치부터 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev mocha should</code></pre></div>\n<p>코드를 테스트한다는 것은 자바스크립트로 작성한 테스트 코드를 실행하는 것을 말합니다.\n바로 방금 설치한 모카가 테스트 코드를 실행해주는 테스트 러너(Test Runner)인 것이죠.</p>\n<p>테스트 코드를 작성할 때 함수의 실행 결과가 기대하는 값과 같은지 검사하는 과정이 필요한데요,\n슈드가 바로 밸리데이터(Validator) 열할을 하는 라이브러리 입니다.</p>\n<p>그럼 간단하게 테스트 코드를 작성해 볼까요?</p>\n<p>server.spec.js란 이름의 파일을 하나 만들겠습니다.\n테스트 파일은 \"spec\" 혹인 \"test\" 라는 이름을 붙이는 관례가 있는데 저는 spec으로 정했습니다.</p>\n<p>파일에 아래 코드를 입력해 보세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> should <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./server\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server test suite\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should return \"hello world\"'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>should<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>서버 모듈을 가져와서 실행한 값이 \"Hello world\" 문자열을 리턴하는지 검증하는 코드입니다.</p>\n<p>이제 이 코드를 실행해서 테스트 통과여부를 확인해야하는데요 방금 설치한 모카 명령어로 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node_modules/.bin/mocha server.spec.js</code></pre></div>\n<p>모카 테스트는 자주 사용하는 명령어라서 NPM 스크립트롤 등록해 두면 편리합니다.\n프로젝트를 생성할때 자동으로 만든 package.json 파일에 등록할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mocha server.spec.js\"</span></code></pre></div>\n<p>패키지 파일에서는 설치한 모듈은 상대주소 없이 바로 명령어를 등록할 수 있습니다.</p>\n<p>스크립트를 조금 더 개선해 볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mocha $(find ./ -name \\\"*.spec.js\\\")\"</span></code></pre></div>\n<p>이름이 \"spec.js\"로 끝나는 파일을 모두 모카 테스트로 실행하도록 했습니다.</p>\n<p>그럼 테스트를 실행해 보죠.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token operator\">></span> codelab-node-web@1.0.0 <span class=\"token builtin class-name\">test</span> /Users/jeonghwan/tmp/codelab-node-web\n<span class=\"token operator\">></span> mocha <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">find</span> ./ -name <span class=\"token string\">\"*.spec.js\"</span><span class=\"token variable\">)</span></span>\n\ninternal/modules/cjs/loader.js:583\n    throw err<span class=\"token punctuation\">;</span>\n    ^\n\nError: Cannot <span class=\"token function\">find</span> module <span class=\"token string\">'./server'</span></code></pre></div>\n<p>런타임 에러가 발생했네요. 마지막 문구를 보면 server 파일을 찾을 수 없다고 합니다.\n(Error: Cannot find module './server')</p>\n<p>테스트 코드는 작성했지만 테스트 대상인 server.js는 아직 만들지 않았으니까요.</p>\n<p>이제 server.js 파일을 아래와 같이 작성해 봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">server</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"Hello world\"</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> server</code></pre></div>\n<p>간단하게 \"Hello world\" 문자열을 반환하는 함수만 만들어 (<code>server()</code>) 노출해 주었습니다.\n(<code>module.exports = server</code>)</p>\n<p>다시 테스트를 돌려볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token operator\">></span> codelab-node-web@1.0.0 <span class=\"token builtin class-name\">test</span> /Users/jeonghwan/tmp/codelab-node-web\n<span class=\"token operator\">></span> mocha <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">find</span> ./ -name <span class=\"token string\">\"*.spec.js\"</span><span class=\"token variable\">)</span></span>\n\n  server <span class=\"token builtin class-name\">test</span> suite\n    ✓ should <span class=\"token builtin class-name\">return</span> <span class=\"token string\">\"hello world\"</span>\n\n  <span class=\"token number\">1</span> passing <span class=\"token punctuation\">(</span>8ms<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이번엔 테스트에 통과했습니다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>NPM으로 노드기반의 프로젝트를 생성했습니다.</li>\n<li>자동으로 만들어진 package.json에 프로젝트 관련 정보를 저장하고 스크립트도 등록할수 있습니다.</li>\n<li>모카와 슈드로 유닛테스트 환경을 만들었고 NPM에 test 스크립트로 등록했습니다.</li>\n</ul>\n<p><a href=\"/series/2018/12/01/node-web-0_index.html\">목차 바로가기</a></p>","frontmatter":{"slug":"/series/2018/12/01/node-web-1_orientation.html","date":"2018-12-01T00:00:00.000Z","title":"[Node.js 코드랩] 1.오리엔테이션","tags":["lecture"],"series":"Node.js 코드랩","videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">🌳목표</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\">프로젝트 생성</a></li>\n<li><a href=\"#npm\">NPM</a></li>\n<li><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%98%EA%B2%BD-%EC%84%B8%ED%8C%85\">테스트 환경 세팅</a></li>\n<li><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>","excerpt":"🌳목표 이론적인 내용보다는 코드를 직접 따라하는 내용이 많습니다.\n중간에 실습 문제가 있어서 여러분이 직접 코딩하는 순서도 있구요.\n이런 환경을 갖추기 위한 실습 세팅 작업부터 시작하겠습니다. 프로젝트 생성 모든 코드는 깃헙 저장소에 올려 두었습니다.\n이 코드를 여러분 컴퓨터에 복사해서 가져 옵니다. 진행 순서에 따라 브랜치를 여러개 만들어 두었는데요, 먼저 scaffolding/init 브랜치로 이동 합니다. .gitignore 파일만 있네요. 이건 깃에서 추적하지 않는 파일 이름을 작성한 목록입니다. 여기서부터 코딩을 시작하겠습니다. 💻 NPM NPM은 노드 패키지 매니저(Node Package Manage)라고도 하는데요.\n노드에서 만든 매키지(혹은 모듈, 라이브러리 따위)를 관리하는 도구입니다. 노드 기반의 프로젝트는 이 NPM을 이용해서 개발하는데요, 아래 명령어로 시작합니다. init…"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"bfbe2949-f7c2-5861-9d73-2145263850e4","frontmatter":{"slug":"/series/2018/12/01/node-web-1_orientation.html","date":"2018-12-01T00:00:00.000Z","title":"[Node.js 코드랩] 1.오리엔테이션","series":"Node.js 코드랩"}},{"id":"6b4ab14d-846e-5796-9799-c42848621979","frontmatter":{"slug":"/series/2018/12/02/node-web-2_http.html","date":"2018-12-02T00:00:00.000Z","title":"[Node.js코드랩] 2.기본 모듈 http","series":"Node.js 코드랩"}},{"id":"b1aec7ac-3401-50bb-9b3a-1f3c0dba816d","frontmatter":{"slug":"/series/2018/12/03/node-web-3_refactoring.html","date":"2018-12-03T00:00:00.000Z","title":"[Node.js코드랩] 3.리팩토링","series":"Node.js 코드랩"}},{"id":"f913d343-bfee-554b-a190-0fafe4a15e8f","frontmatter":{"slug":"/series/2018/12/04/node-web-4_application.html","date":"2018-12-04T00:00:00.000Z","title":"[Node.js코드랩] 4.어플리케이션","series":"Node.js 코드랩"}},{"id":"396ff93e-7740-5750-99a0-ffc8f44b2264","frontmatter":{"slug":"/series/2018/12/05/node-web-5_debug.html","date":"2018-12-05T00:00:00.000Z","title":"[Node.js코드랩] 5.커스텀 모듈 Debug","series":"Node.js 코드랩"}},{"id":"6d2c51d4-140e-578b-ae28-edd6344f42df","frontmatter":{"slug":"/series/2018/12/06/node-web-6_static-files.html","date":"2018-12-06T00:00:00.000Z","title":"[Node.js코드랩] 6.정적 파일","series":"Node.js 코드랩"}},{"id":"18013d48-931e-5f5f-97bb-5aa784075b6f","frontmatter":{"slug":"/series/2018/12/07/node-web-7_serve-static.html","date":"2018-12-07T00:00:00.000Z","title":"[Node.js코드랩] 7.커스텀 모듈 serve-static","series":"Node.js 코드랩"}},{"id":"3932b2c9-7cfb-53c5-8357-5f7a790ae295","frontmatter":{"slug":"/series/2018/12/08/node-web-8_middleware.html","date":"2018-12-08T00:00:00.000Z","title":"[Node.js코드랩] 8.미들웨어","series":"Node.js 코드랩"}},{"id":"33c47777-8e9e-5a68-85f9-66c1af1ca735","frontmatter":{"slug":"/series/2018/12/09/node-web-9_middleware2.html","date":"2018-12-09T00:00:00.000Z","title":"[Node.js코드랩] 9.미들웨어 활용","series":"Node.js 코드랩"}},{"id":"7c15a535-3372-5d73-808d-aa2ea5af15ae","frontmatter":{"slug":"/series/2018/12/10/node-web-10_logger.html","date":"2018-12-10T00:00:00.000Z","title":"[Node.js코드랩] 10.커스텀 모듈 logger","series":"Node.js 코드랩"}},{"id":"e2b3798a-86c0-550d-9a37-647495cdd2dd","frontmatter":{"slug":"/series/2018/12/11/node-web-11_router-use.html","date":"2018-12-11T00:00:00.000Z","title":"[Node.js코드랩] 11.라우터 use","series":"Node.js 코드랩"}},{"id":"24b0b3cf-a4ba-5f7b-a5a9-d3366bf6721b","frontmatter":{"slug":"/series/2018/12/12/node-web-12_get-posts-api.html","date":"2018-12-12T00:00:00.000Z","title":"[Node.js코드랩] 12.포스트 조회 API","series":"Node.js 코드랩"}},{"id":"adfb350e-c1d2-5c85-ac6f-d07936575db2","frontmatter":{"slug":"/series/2018/12/13/node-web-13_res.html","date":"2018-12-13T00:00:00.000Z","title":"[Node.js코드랩] 13. 응답 객체","series":"Node.js 코드랩"}},{"id":"ef8af36e-4bde-584b-b29b-20046d4aa669","frontmatter":{"slug":"/series/2018/12/14/node-web-14_req.html","date":"2018-12-14T00:00:00.000Z","title":"[Node.js코드랩] 14. 요청 객체","series":"Node.js 코드랩"}},{"id":"fbdbd5e4-2a16-5369-a455-6523a1d9b433","frontmatter":{"slug":"/series/2018/12/15/node-web-15_get_post.html","date":"2018-12-15T00:00:00.000Z","title":"[Node.js코드랩] 15.라우터 Get, Post","series":"Node.js 코드랩"}},{"id":"2b2e4511-3367-52ea-9524-9d420ab686c1","frontmatter":{"slug":"/series/2018/12/16/node-web-16_body-parser.html","date":"2018-12-16T00:00:00.000Z","title":"[Node.js코드랩] 16. body-parser","series":"Node.js 코드랩"}},{"id":"de643e18-6338-5d9f-908c-48a6d5624cba","frontmatter":{"slug":"/series/2018/12/17/node-web-17_expressjs.html","date":"2018-12-17T00:00:00.000Z","title":"[Node.js코드랩] 17. Express.js","series":"Node.js 코드랩"}},{"id":"d47788ec-de07-5a9a-a09b-ba1ebfd67418","frontmatter":{"slug":"/series/2018/12/17/node-web-18_summary.html","date":"2018-12-17T00:00:00.000Z","title":"[Node.js코드랩] 18. 마무리","series":"Node.js 코드랩"}}]}},"pageContext":{"slug":"/series/2018/12/01/node-web-1_orientation.html","date":"2018-12-01T00:00:00.000Z","series":"Node.js 코드랩","videoId":null,"previous":{"frontmatter":{"slug":"/2018/11/08/remote-work.html","date":"2018-11-08T00:00:00.000Z","title":"비오는 날, 집에서 일하기 좋은 날씨다","category":null,"series":null,"videoId":null}},"next":{"frontmatter":{"slug":"/series/2018/12/01/node-web-0_index.html","date":"2018-12-01T00:00:00.000Z","title":"🌳[Node.js 코드랩] 소개 및 목차","category":"연재물","series":null,"videoId":null}}}},
    "staticQueryHashes": ["3044774879"]}