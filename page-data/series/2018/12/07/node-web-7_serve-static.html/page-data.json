{
    "componentChunkName": "component---src-templates-blog-post-index-tsx",
    "path": "/series/2018/12/07/node-web-7_serve-static.html",
    "result": {"data":{"site":{"siteMetadata":{"title":"김정환 블로그","url":"https://jeonghwan-kim.github.io"}},"markdownRemark":{"id":"357a87df-cd75-5c38-a7b1-c75a0deda4df","html":"<h2 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌳목표</h2>\n<p>이전 코드를 리팩토링하여 serve-static 모듈을 만듭니다</p>\n<h2 id=\"실습---serve-static-모듈-구현\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5---serve-static-%EB%AA%A8%EB%93%88-%EA%B5%AC%ED%98%84\" aria-label=\"실습   serve static 모듈 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐤실습 - serve-static 모듈 구현</h2>\n<p>이전 시간까지 했던 코드로 브랜치 이동하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git checkout -f modules/serve-static-files</code></pre></div>\n<p>src/Application.js에 있는 정적파일 다루는 로직을 src/serve-static.js 파일로 분리하세요.</p>\n<h2 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐤풀이</h2>\n<p>그럼 같이 풀어 볼까요?</p>\n<p>src/serve-static.js 파일을 만들고 아래 코드를 입력합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">serveStatic</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> mimeType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>mimeType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> serveStatic<span class=\"token punctuation\">;</span></code></pre></div>\n<p>코드를 그대로 복사해서 가져왔습니다.\n요청한 파일의 확장자가 mimeType 딕셔너리에 있을 경우만 이 모듈에서 처리하죠.\n마지막 줄에서는 serveStatic을 모듈로 익스포트 하였습니다.</p>\n<p>그럼 src/Application.js에서 이 모듈을 가져다 사용하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> serveStatic <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./serve-static\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> _server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">serveStatic</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token comment\">// serve-static 모듈 사용</span>\n\n  res<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"../public/index.html\"</span><span class=\"token punctuation\">)</span>\n  fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err\n\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>요청이 오는 즉시 serveStatic 모듈에 req, res 인자를 넘겨서 실행했습니다.\njs, css, image 파일이 온다면 이 모듈에서 응답해 주겠죠.</p>\n<p>그런데 문제는 serveStatic() 실행후에 다시 index.html를 응답한다는 겁니다.\n응답을 했는데 또 응답하는 중복 로직이 생긴다는 말입니다.</p>\n<p>실행해보면 이런 에러 메세지를 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_http_outgoing.js:491\n    throw new Error('Can\\'t set headers after they are sent.');\n    ^\n\nError: Can't set headers after they are sent.</code></pre></div>\n<p>헤더를 두번 보낼수 없다는 말이네요.</p>\n<h2 id=\"한계---새로운-구조가-필요한가\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B3%84---%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B5%AC%EC%A1%B0%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80\" aria-label=\"한계   새로운 구조가 필요한가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한계 - 새로운 구조가 필요한가?</h2>\n<p>하나의 요청에는 하나의 응답만 보내야 하는데 그렇지 않아서 생긴 문제입니다.\nserveStatic 모듈이 동기 구문이라면 한 파일에 있을때는 if/else로 분기해서 코드를 작성했지만, 모듈로 분리하면서 로직 제어가 힘들어 졌습니다.</p>\n<p>다음 시간에 이 문제를 해결할수 있는 패턴을 알아보겠습니다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<ul>\n<li>정적 파일을 모듈로 리팩토링하는 시도를 했습니다.</li>\n<li>비동기 로직을 제어하는 현 구조의 한계를 짚어 봤습니다.</li>\n</ul>\n<p><a href=\"/series/2018/12/01/node-web-0_index.html\">목차 바로가기</a></p>","frontmatter":{"slug":"/series/2018/12/07/node-web-7_serve-static.html","date":"2018-12-07T00:00:00.000Z","title":"[Node.js코드랩] 7.커스텀 모듈 serve-static","tags":["lecture"],"seriesId":"series-2018-12-01-weplanet-codelab","videoId":null,"featuredImage":null},"tableOfContents":"<ul>\n<li><a href=\"#%EB%AA%A9%ED%91%9C\">🌳목표</a></li>\n<li><a href=\"#%EC%8B%A4%EC%8A%B5---serve-static-%EB%AA%A8%EB%93%88-%EA%B5%AC%ED%98%84\">🐤실습 - serve-static 모듈 구현</a></li>\n<li><a href=\"#%ED%92%80%EC%9D%B4\">🐤풀이</a></li>\n<li><a href=\"#%ED%95%9C%EA%B3%84---%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B5%AC%EC%A1%B0%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80\">한계 - 새로운 구조가 필요한가?</a></li>\n<li><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>"},"series":{"id":"series-2018-12-01-weplanet-codelab","title":"Node.js 코드랩"},"video":null,"allMarkdownRemark":{"nodes":[{"id":"c1aff780-329b-54c9-8b65-9adf8255b80f","frontmatter":{"slug":"/series/2018/12/01/node-web-1_orientation.html","date":"2018-12-01T00:00:00.000Z","title":"[Node.js 코드랩] 1.오리엔테이션","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"87d6201c-0865-5682-aee7-484a28e1b0c6","frontmatter":{"slug":"/series/2018/12/02/node-web-2_http.html","date":"2018-12-02T00:00:00.000Z","title":"[Node.js코드랩] 2.기본 모듈 http","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"034d39e5-6cf5-50b2-a6aa-8dbace6f3373","frontmatter":{"slug":"/series/2018/12/03/node-web-3_refactoring.html","date":"2018-12-03T00:00:00.000Z","title":"[Node.js코드랩] 3.리팩토링","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"3f204c8b-282c-55a4-99a8-318400c0e728","frontmatter":{"slug":"/series/2018/12/04/node-web-4_application.html","date":"2018-12-04T00:00:00.000Z","title":"[Node.js코드랩] 4.어플리케이션","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"e70998dc-8407-52e6-bb47-6f421424d3c1","frontmatter":{"slug":"/series/2018/12/05/node-web-5_debug.html","date":"2018-12-05T00:00:00.000Z","title":"[Node.js코드랩] 5.커스텀 모듈 Debug","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"b674c656-6e82-5492-8b8d-55bdca7435d0","frontmatter":{"slug":"/series/2018/12/06/node-web-6_static-files.html","date":"2018-12-06T00:00:00.000Z","title":"[Node.js코드랩] 6.정적 파일","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"357a87df-cd75-5c38-a7b1-c75a0deda4df","frontmatter":{"slug":"/series/2018/12/07/node-web-7_serve-static.html","date":"2018-12-07T00:00:00.000Z","title":"[Node.js코드랩] 7.커스텀 모듈 serve-static","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"a0498e79-1772-5c7b-80d5-65c577cce45d","frontmatter":{"slug":"/series/2018/12/08/node-web-8_middleware.html","date":"2018-12-08T00:00:00.000Z","title":"[Node.js코드랩] 8.미들웨어","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"27971d0e-d65a-5ee9-87e3-436bf2d2773d","frontmatter":{"slug":"/series/2018/12/09/node-web-9_middleware2.html","date":"2018-12-09T00:00:00.000Z","title":"[Node.js코드랩] 9.미들웨어 활용","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"19e53d49-1c5d-502e-a499-2f6c4864bd29","frontmatter":{"slug":"/series/2018/12/10/node-web-10_logger.html","date":"2018-12-10T00:00:00.000Z","title":"[Node.js코드랩] 10.커스텀 모듈 logger","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"d87c7b44-7260-5f36-bf4c-954780ec33b4","frontmatter":{"slug":"/series/2018/12/11/node-web-11_router-use.html","date":"2018-12-11T00:00:00.000Z","title":"[Node.js코드랩] 11.라우터 use","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"9f78412c-a891-557e-954f-2a3dddbc54b5","frontmatter":{"slug":"/series/2018/12/12/node-web-12_get-posts-api.html","date":"2018-12-12T00:00:00.000Z","title":"[Node.js코드랩] 12.포스트 조회 API","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"42f9d27e-b2eb-5861-a763-9d2671a05cec","frontmatter":{"slug":"/series/2018/12/13/node-web-13_res.html","date":"2018-12-13T00:00:00.000Z","title":"[Node.js코드랩] 13. 응답 객체","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"465c8e16-0b11-506d-bcc6-69b6f02d93a4","frontmatter":{"slug":"/series/2018/12/14/node-web-14_req.html","date":"2018-12-14T00:00:00.000Z","title":"[Node.js코드랩] 14. 요청 객체","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"7a738192-ebd2-57c5-a69e-6bdcdfba5428","frontmatter":{"slug":"/series/2018/12/15/node-web-15_get_post.html","date":"2018-12-15T00:00:00.000Z","title":"[Node.js코드랩] 15.라우터 Get, Post","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"8950cffd-84dc-5535-ae68-ad0973801ab6","frontmatter":{"slug":"/series/2018/12/16/node-web-16_body-parser.html","date":"2018-12-16T00:00:00.000Z","title":"[Node.js코드랩] 16. body-parser","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"f9eebf1b-8fcf-506c-bae8-ac7c5b576ce6","frontmatter":{"slug":"/series/2018/12/17/node-web-17_expressjs.html","date":"2018-12-17T00:00:00.000Z","title":"[Node.js코드랩] 17. Express.js","seriesId":"series-2018-12-01-weplanet-codelab"}},{"id":"9b807cfc-9203-5f7d-9a99-9f7dccad52f0","frontmatter":{"slug":"/series/2018/12/17/node-web-18_summary.html","date":"2018-12-17T00:00:00.000Z","title":"[Node.js코드랩] 18. 마무리","seriesId":"series-2018-12-01-weplanet-codelab"}}]}},"pageContext":{"slug":"/series/2018/12/07/node-web-7_serve-static.html","date":"2018-12-07T00:00:00.000Z","seriesId":"series-2018-12-01-weplanet-codelab","videoId":null,"previous":{"frontmatter":{"slug":"/series/2018/12/06/node-web-6_static-files.html","date":"2018-12-06T00:00:00.000Z","title":"[Node.js코드랩] 6.정적 파일","category":"series","seriesId":"series-2018-12-01-weplanet-codelab","videoId":null}},"next":{"frontmatter":{"slug":"/series/2018/12/08/node-web-8_middleware.html","date":"2018-12-08T00:00:00.000Z","title":"[Node.js코드랩] 8.미들웨어","category":"series","seriesId":"series-2018-12-01-weplanet-codelab","videoId":null}}}},
    "staticQueryHashes": ["3044774879"]}