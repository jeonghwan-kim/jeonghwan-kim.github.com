{"version":3,"sources":["webpack:///./src/pages/category/think.tsx","webpack:///./src/components/PostList/style.ts","webpack:///./src/components/Category/style.ts","webpack:///./src/components/Category/index.tsx"],"names":["p","title","activeCategory","posts","data","allMarkdownRemark","edges","map","e","node","pageQuery","PostList","styled","ul","PostItem","li","SpaceUnit","PostTitle","h2","Colors","Primary","PostMeta","div","Gray","PostSummary","Black","Widths","Mobile","CategoryList","CategoryListItem","lighten","Wrapper","Tablet","CateogryPosts","aside","to","className","type","IconType","Article","size","slug","fields","frontmatter","meta","dateTime","date","dateStr","excerpt"],"mappings":"6FACA,sFAGe,mBAAAA,GAAC,OACd,kBAAC,IAAD,CACEC,MAAM,KACNC,eAAgB,QAChBC,MAAOH,EAAEI,KAAKC,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,WAI9C,IAAMC,EAAY,a,kCCZzB,sMAGaC,EAAWC,IAAOC,GAAV,sEAAGD,CAAH,gCAKRE,EAAWF,IAAOG,GAAV,sEAAGH,CAAH,6EAITI,YAAU,IAKTC,EAAYL,IAAOM,GAAV,uEAAGN,CAAH,iCACXO,IAAOC,QACCJ,eAGNK,EAAWT,IAAOU,IAAV,sEAAGV,CAAH,eACVO,IAAOI,MAGLC,EAAcZ,IAAOZ,EAAV,yEAAGY,CAAH,sEACbO,IAAOM,MAEKC,IAAOC,S,yMCzBjBC,EAAehB,IAAOC,GAAV,yEAAGD,CAAH,8CAMZiB,EAAmBjB,IAAOG,GAAV,6EAAGH,CAAH,2nBAGdI,YAAU,GAAMA,YAAU,GAK5BG,IAAOI,KASCP,aAAW,GACVA,YAAU,GAERG,IAAOC,QASbJ,cACKA,aAAW,GACVA,cACPA,YAAU,GACCG,IAAOC,QAUTU,YAAQ,GAAKX,IAAOC,SAC/BD,IAAOC,SAMTW,EAAUnB,IAAOU,IAAV,oEAAGV,CAAH,8CACGc,IAAOM,OACVhB,YAAU,IC9CjBiB,EAAwC,SAAC,GAIhD,IAHJhC,EAGI,EAHJA,MACAE,EAEI,EAFJA,MACAD,EACI,EADJA,eAEMgC,EACJ,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,uCAEF,kBAAC,EAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,YAAYC,UAAYlC,EAA4B,GAAX,UAAlD,OAEQ,KAEV,kBAAC,EAAD,KACE,kBAAC,OAAD,CACEiC,GAAG,mBACHC,UAA8B,WAAnBlC,EAA8B,SAAW,IAFtD,OAKQ,KAEV,kBAAC,EAAD,KACE,kBAAC,OAAD,CACEkC,UAA8B,QAAnBlC,EAA2B,SAAW,GACjDiC,GAAG,iBAFL,MAKQ,KAEV,kBAAC,EAAD,KACE,kBAAC,OAAD,CACEA,GAAG,kBACHC,UAA8B,UAAnBlC,EAA6B,SAAW,IAFrD,MAKQ,MAKd,OACE,kBAAC,IAAD,CAAiBgC,MAAOA,GACtB,kBAAC,IAAD,CAAKjC,MAAK,OAASA,IACnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEA,MACE,oCACE,kBAAC,IAAD,CAAMoC,KAAMC,IAASC,QAASC,KAAM,IACnCvC,IAIL,kBAAC,IAAD,CACEE,MAAOA,EAAMI,KAAI,SAAAP,GAAC,MAAK,CACrByC,KAAMzC,EAAE0C,OAAOD,KACfxC,MAAOD,EAAE2C,YAAY1C,MACrB2C,KAAM,0BAAMC,SAAU7C,EAAE0C,OAAOI,MAAO9C,EAAE0C,OAAOK,SAC/CC,QAAShD,EAAEgD","file":"component---src-pages-category-think-tsx-3c7903f403a9c8eff169.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { CateogryPosts } from \"../../components/Category\"\n\nexport default p => (\n  <CateogryPosts\n    title=\"생각\"\n    activeCategory={\"think\"}\n    posts={p.data.allMarkdownRemark.edges.map(e => e.node)}\n  />\n)\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: fields___date, order: DESC }\n      filter: { frontmatter: { category: { eq: \"think\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n          fields {\n            slug\n            dateStr: date(formatString: \"YYYY년 MM월 DD일\")\n            date\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from \"styled-components\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`\n\nexport const PostItem = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: ${SpaceUnit(7)} 0;\n  text-decoration: none;\n  display: block;\n`\n\nexport const PostTitle = styled.h2`\n  color: ${Colors.Primary};\n  margin-bottom: ${SpaceUnit()};\n`\n\nexport const PostMeta = styled.div`\n  color: ${Colors.Gray};\n`\n\nexport const PostSummary = styled.p`\n  color: ${Colors.Black};\n  line-height: 1.5em;\n  @media (max-width: ${Widths.Mobile}) {\n    display: none;\n  }\n`\n","import styled from \"styled-components\"\nimport { lighten } from \"polished\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const CategoryList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin: 0;\n`\n\nexport const CategoryListItem = styled.li`\n  a,\n  label {\n    padding: ${SpaceUnit(2)} ${SpaceUnit(4)};\n    display: flex;\n    align-items: center;\n  }\n  label {\n    color: ${Colors.Gray};\n    font-weight: 200;\n  }\n  a {\n    text-decoration: none;\n    &::before {\n      content: \"\";\n      border-radius: 50%;\n      display: inline-block;\n      margin-left: ${SpaceUnit(-3)};\n      margin-right: ${SpaceUnit(3)};\n      position: absolute;\n      border: solid 0 ${Colors.Primary};\n      transition: border-width linear 0.1s;\n    }\n    &.active {\n      &::before {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n        height: ${SpaceUnit()};\n        margin-left: ${SpaceUnit(-4)};\n        margin-right: ${SpaceUnit()};\n        width: ${SpaceUnit(3)};\n        background-color: ${Colors.Primary};\n      }\n    }\n    &:not(.active):hover {\n      &::before {\n        border-width: 4px;\n        transition: border-width linear 0.1s;\n      }\n    }\n    &:hover {\n      background-color: ${lighten(0.4, Colors.Primary)};\n      color: ${Colors.Primary};\n      cursor: pointer;\n    }\n  }\n`\n\nexport const Wrapper = styled.div`\n  @media (min-width: ${Widths.Tablet}) {\n    padding-left: ${SpaceUnit(4)};\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport { MarkdownRemark } from \"../../models/markdown-remark\"\nimport { Icon, IconType } from \"../icon/style\"\nimport { TwoColumnLayout } from \"../layout\"\nimport { PostList } from \"../PostList/style\"\nimport { Section } from \"../Section/style\"\nimport SEO from \"../seo\"\nimport * as Styled from \"./style\"\n\ninterface CateogryPostsProps {\n  title: string\n  posts: MarkdownRemark[]\n  activeCategory?: string\n}\n\nexport const CateogryPosts: FC<CateogryPostsProps> = ({\n  title,\n  posts,\n  activeCategory,\n}) => {\n  const aside = (\n    <Styled.CategoryList>\n      <Styled.CategoryListItem>\n        <label>글분류</label>\n      </Styled.CategoryListItem>\n      <Styled.CategoryListItem>\n        <Link to=\"/category\" className={!activeCategory ? \"active\" : \"\"}>\n          모든글\n        </Link>{\" \"}\n      </Styled.CategoryListItem>\n      <Styled.CategoryListItem>\n        <Link\n          to=\"/category/series\"\n          className={activeCategory === \"series\" ? \"active\" : \"\"}\n        >\n          연재물\n        </Link>{\" \"}\n      </Styled.CategoryListItem>\n      <Styled.CategoryListItem>\n        <Link\n          className={activeCategory === \"dev\" ? \"active\" : \"\"}\n          to=\"/category/dev\"\n        >\n          개발\n        </Link>{\" \"}\n      </Styled.CategoryListItem>\n      <Styled.CategoryListItem>\n        <Link\n          to=\"/category/think\"\n          className={activeCategory === \"think\" ? \"active\" : \"\"}\n        >\n          생각\n        </Link>{\" \"}\n      </Styled.CategoryListItem>\n    </Styled.CategoryList>\n  )\n\n  return (\n    <TwoColumnLayout aside={aside}>\n      <SEO title={`분류: ${title}`} />\n      <Styled.Wrapper>\n        <Section\n          title={\n            <>\n              <Icon type={IconType.Article} size={4} />\n              {title}\n            </>\n          }\n        >\n          <PostList\n            posts={posts.map(p => ({\n              slug: p.fields.slug,\n              title: p.frontmatter.title,\n              meta: <time dateTime={p.fields.date}>{p.fields.dateStr}</time>,\n              excerpt: p.excerpt,\n            }))}\n          />\n        </Section>\n      </Styled.Wrapper>\n    </TwoColumnLayout>\n  )\n}\n"],"sourceRoot":""}