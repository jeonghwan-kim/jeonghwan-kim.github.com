{"version":3,"file":"component---src-pages-category-index-tsx-847c58e9543ec846ccc7.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/PostList/style.ts","webpack://gatsby-starter-default/./src/components/PostList/index.tsx","webpack://gatsby-starter-default/./src/components/Category/style.ts","webpack://gatsby-starter-default/./src/components/Category/index.tsx","webpack://gatsby-starter-default/./src/pages/category/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const PostList = styled.ul`\n  list-style: none;\n  padding: 0;\n`\n\nexport const PostItem = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: ${SpaceUnit(7)} 0;\n  text-decoration: none;\n  display: block;\n`\n\nexport const PostTitle = styled.h2`\n  color: ${Colors.Primary};\n  margin-bottom: ${SpaceUnit()};\n`\n\nexport const PostMeta = styled.div`\n  color: ${Colors.Gray};\n`\n\nexport const PostSummary = styled.p`\n  color: ${Colors.Black};\n  line-height: 1.5em;\n  @media (max-width: calc(${Widths.Tablet} - 1px)) {\n    display: none;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC, ReactNode } from \"react\"\nimport * as Styled from \"./style\"\n\nexport interface PostItemType {\n  title: ReactNode\n  slug: string\n  meta?: ReactNode\n  excerpt?: string\n}\nexport interface P {\n  posts: PostItemType[]\n}\n\nconst PostList: FC<P> = ({ posts }) => {\n  return (\n    <Styled.PostList id=\"post-list\">\n      {posts.map(({ title, slug, meta, excerpt }) => {\n        return (\n          <Styled.PostItem key={slug}>\n            <Link to={slug}>\n              <Styled.PostTitle className=\"post-item-title\">\n                {title}\n              </Styled.PostTitle>\n              {meta && <Styled.PostMeta>{meta}</Styled.PostMeta>}\n              {excerpt && (\n                <Styled.PostSummary\n                  dangerouslySetInnerHTML={{\n                    __html: excerpt,\n                  }}\n                />\n              )}\n            </Link>\n          </Styled.PostItem>\n        )\n      })}\n    </Styled.PostList>\n  )\n}\n\nexport default PostList\n","import styled from \"styled-components\"\nimport { lighten } from \"polished\"\nimport { Colors, SpaceUnit, Widths } from \"../../styles/style-variables\"\n\nexport const CategoryList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin: 0;\n`\n\nexport const CategoryListItem = styled.li`\n  a,\n  label {\n    padding: ${SpaceUnit(2)} ${SpaceUnit(4)};\n    display: flex;\n    align-items: center;\n  }\n  label {\n    color: ${Colors.Gray};\n    font-weight: 200;\n  }\n  a {\n    text-decoration: none;\n    &::before {\n      content: \"\";\n      border-radius: 50%;\n      display: inline-block;\n      margin-left: ${SpaceUnit(-3)};\n      margin-right: ${SpaceUnit(3)};\n      position: absolute;\n      border: solid 0 ${Colors.Primary};\n      transition: border-width linear 0.1s;\n    }\n    &.active {\n      &::before {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n        height: ${SpaceUnit()};\n        margin-left: ${SpaceUnit(-4)};\n        margin-right: ${SpaceUnit()};\n        width: ${SpaceUnit(3)};\n        background-color: ${Colors.Primary};\n      }\n    }\n    &:not(.active):hover {\n      &::before {\n        border-width: 4px;\n        transition: border-width linear 0.1s;\n      }\n    }\n    &:hover {\n      background-color: ${lighten(0.4, Colors.Primary)};\n      color: ${Colors.Primary};\n      cursor: pointer;\n    }\n  }\n`\n\nexport const Wrapper = styled.div`\n  @media (min-width: ${Widths.Tablet}) {\n    padding-left: ${SpaceUnit(4)};\n  }\n`\n","import { Link } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport { MarkdownRemark } from \"../../../graphql-types\"\nimport { dateFormat } from \"../../helpers/date\"\nimport { Icon, IconType } from \"../Icon/style\"\nimport { TwoColumnLayout } from \"../layout\"\nimport PostList from \"../PostList\"\nimport Section from \"../Section\"\nimport SEO from \"../SEO\"\nimport * as Styled from \"./style\"\n\nconst categoryMap = {\n  series: \"연재물\",\n  dev: \"개발\",\n  think: \"생각\",\n}\n\ninterface Props {\n  posts: MarkdownRemark[]\n}\n\nexport const CateogryPosts: FC<Props> = ({ posts }) => {\n  const category =\n    typeof window !== \"undefined\"\n      ? new URLSearchParams(window.location.search).get(\"key\")\n      : \"\"\n  const renderedPosts = category\n    ? posts.filter(p => p.frontmatter.category === category)\n    : posts\n\n  const aside = (\n    <Styled.CategoryList>\n      <Styled.CategoryListItem>\n        <label>글분류</label>\n      </Styled.CategoryListItem>\n      <Styled.CategoryListItem>\n        <Link to=\"/category\" className={!category ? \"active\" : \"\"}>\n          모든글\n        </Link>\n      </Styled.CategoryListItem>\n      {Object.keys(categoryMap).map(c => (\n        <Styled.CategoryListItem key={c}>\n          <Link\n            to={`/category?key=${c}`}\n            className={c === category ? \"active\" : \"\"}\n          >\n            {categoryMap[c]}\n          </Link>\n        </Styled.CategoryListItem>\n      ))}\n    </Styled.CategoryList>\n  )\n\n  return (\n    <TwoColumnLayout aside={aside}>\n      <SEO title={`분류: ${categoryMap[category] || \"모든글\"}`} />\n      <Styled.Wrapper>\n        <Section\n          title={\n            <>\n              <Icon type={IconType.Article} size={4} />\n              {categoryMap[category] || \"모든글\"}\n            </>\n          }\n        >\n          <PostList\n            posts={renderedPosts.map(p => ({\n              slug: p.frontmatter.slug,\n              title: p.frontmatter.title,\n              meta: (\n                <time dateTime={p.frontmatter.date}>\n                  {dateFormat(p.frontmatter.date)}\n                </time>\n              ),\n              excerpt: p.excerpt,\n            }))}\n          />\n        </Section>\n      </Styled.Wrapper>\n    </TwoColumnLayout>\n  )\n}\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { CateogryPosts } from \"../../components/Category\"\n\nexport default p => (\n  <CateogryPosts\n    posts={p.data.allMarkdownRemark.edges.map(edge => edge.node)}\n  />\n)\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n          frontmatter {\n            slug\n            date\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostList","styled","PostItem","SpaceUnit","PostTitle","Colors","PostMeta","PostSummary","Widths","posts","id","title","slug","meta","excerpt","key","to","className","dangerouslySetInnerHTML","__html","CategoryList","CategoryListItem","lighten","Wrapper","categoryMap","series","dev","think","CateogryPosts","category","window","URLSearchParams","renderedPosts","p","aside","Object","c","type","IconType","size","dateTime","date","dateFormat","edge"],"sourceRoot":""}